Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones
Rule 2     programa -> funciones
Rule 3     funciones -> funcion main
Rule 4     funciones -> main
Rule 5     globales -> global_1 vars globales_2
Rule 6     globales_2 -> global_1 vars globales_2
Rule 7     globales_2 -> empty
Rule 8     global_1 -> GLOBAL
Rule 9     bloque -> estatuto bloque
Rule 10    bloque -> empty
Rule 11    data_type -> INT
Rule 12    data_type -> FLOAT
Rule 13    data_type -> BOOLEAN
Rule 14    main -> main_1 bloque END
Rule 15    main_1 -> DEF VOID MAIN LPAREN RPAREN
Rule 16    estatuto -> asignacion
Rule 17    estatuto -> condicion
Rule 18    estatuto -> ciclo
Rule 19    estatuto -> accion
Rule 20    estatuto -> vars
Rule 21    estatuto -> llamada SEMICOLON
Rule 22    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 23    asignacion_id -> ID
Rule 24    asignacion_2 -> EQUAL expresion
Rule 25    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion
Rule 26    asignacion_3 -> RBRACKET
Rule 27    asignacion_3 -> COMMA exp RBRACKET
Rule 28    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 29    vars -> data_type ID vars2
Rule 30    vars -> vars_aux
Rule 31    vars_aux -> array ID vars3
Rule 32    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 33    array_2 -> COMMA CTE_I
Rule 34    array_2 -> empty
Rule 35    vars2 -> EQUAL expresion SEMICOLON
Rule 36    vars2 -> SEMICOLON
Rule 37    vars3 -> EQUAL def_array SEMICOLON
Rule 38    vars3 -> SEMICOLON
Rule 39    llamada -> llamada_id LPAREN llamada_2
Rule 40    llamada_id -> ID
Rule 41    llamada_2 -> llamada_exp RPAREN
Rule 42    llamada_2 -> RPAREN
Rule 43    llamada_exp -> expresion llamada_exp2
Rule 44    llamada_exp2 -> COMMA llamada_exp
Rule 45    llamada_exp2 -> empty
Rule 46    def_array -> LBRACKET def_array_2
Rule 47    def_array_2 -> def_array_cte RBRACKET
Rule 48    def_array_2 -> RBRACKET
Rule 49    def_array_cte -> var_cte def_array_cte_2
Rule 50    def_array_cte_2 -> COMMA def_array_cte
Rule 51    def_array_cte_2 -> empty
Rule 52    expresion -> exp expresion_2
Rule 53    expresion_2 -> relop exp
Rule 54    expresion_2 -> empty
Rule 55    relop -> GREATER
Rule 56    relop -> GREATEREQUAL
Rule 57    relop -> LESS
Rule 58    relop -> LESSEQUAL
Rule 59    relop -> DEQUAL
Rule 60    relop -> DISTINT
Rule 61    exp -> termino exp_2
Rule 62    exp_2 -> addop exp
Rule 63    exp_2 -> empty
Rule 64    termino -> factor termino_2
Rule 65    termino_2 -> timesop termino
Rule 66    termino_2 -> empty
Rule 67    var_cte -> var_cte_1
Rule 68    var_cte -> CTE_I
Rule 69    var_cte -> CTE_F
Rule 70    var_cte -> TRUE
Rule 71    var_cte -> FALSE
Rule 72    var_cte -> llamada
Rule 73    var_cte_1 -> ID var_cte_2
Rule 74    var_cte_2 -> LBRACKET exp var_cte_3
Rule 75    var_cte_2 -> empty
Rule 76    var_cte_3 -> RBRACKET
Rule 77    var_cte_3 -> COMMA exp RBRACKET
Rule 78    factor -> LPAREN expresion RPAREN
Rule 79    factor -> addop var_cte
Rule 80    factor -> var_cte
Rule 81    condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2
Rule 82    condicion_id -> IF
Rule 83    condicion_2 -> condicion_end
Rule 84    condicion_2 -> ELSE bloque condicion_end
Rule 85    condicion_end -> END
Rule 86    ciclo -> for
Rule 87    ciclo -> while
Rule 88    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 89    accion_params -> LPAREN accion_params_2
Rule 90    accion_params_2 -> accion_params_cte RPAREN
Rule 91    accion_params_2 -> RPAREN
Rule 92    accion_params_cte -> var_cte accion_params_cte_2
Rule 93    accion_params_cte_2 -> COMMA accion_params_cte
Rule 94    accion_params_cte_2 -> empty
Rule 95    accion_nombre -> SETPOSITION
Rule 96    accion_nombre -> CIRCLE
Rule 97    accion_nombre -> RIGHT
Rule 98    accion_nombre -> LEFT
Rule 99    accion_nombre -> HIDE
Rule 100   accion_nombre -> SQUARE
Rule 101   accion_nombre -> CLEAR
Rule 102   accion_nombre -> SHOW
Rule 103   accion_nombre -> BACK
Rule 104   accion_nombre -> SPEED
Rule 105   accion_nombre -> FORWARD
Rule 106   accion_nombre -> SETCOLOR
Rule 107   for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
Rule 108   for_init -> FOR
Rule 109   for_end -> END
Rule 110   while -> while_init LPAREN expresion RPAREN bloque while_end
Rule 111   while_init -> WHILE
Rule 112   while_end -> END
Rule 113   funcion -> funcion_1 var_local bloque funcion_2
Rule 114   funcion_1 -> DEF data_type ID
Rule 115   funcion_2 -> RETURN expresion SEMICOLON funcion_end
Rule 116   funcion_2 -> funcion_end
Rule 117   funcion_end -> END
Rule 118   var_local -> LPAREN var_local_2 RPAREN
Rule 119   var_local_2 -> var_local_2_1 var_local_3
Rule 120   var_local_2 -> empty
Rule 121   var_local_2_1 -> data_type ID
Rule 122   var_local_3 -> COMMA var_local_2
Rule 123   var_local_3 -> empty
Rule 124   addop -> PLUS
Rule 125   addop -> MINUS
Rule 126   timesop -> TIMES
Rule 127   timesop -> DIVIDE
Rule 128   timesop -> PERCENT
Rule 129   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 32
BACK                 : 103
BOOLEAN              : 13
CIRCLE               : 96
CLEAR                : 101
COMMA                : 27 32 33 44 50 77 93 107 107 122
CTE_F                : 69
CTE_I                : 32 33 68 107 107 107
DEF                  : 15 114
DEQUAL               : 59
DISTINT              : 60
DIVIDE               : 127
DRAW                 : 28
ELSE                 : 84
END                  : 14 85 109 112 117
EQUAL                : 24 25 28 35 37
FALSE                : 71
FLOAT                : 12
FOR                  : 108
FORWARD              : 105
GLOBAL               : 8
GREATER              : 32 55
GREATEREQUAL         : 56
HIDE                 : 99
ID                   : 23 28 29 31 40 73 88 114 121
IF                   : 82
INT                  : 11
LBRACKET             : 25 46 74
LEFT                 : 98
LESS                 : 32 57
LESSEQUAL            : 58
LPAREN               : 15 28 39 78 81 89 107 110 118
MAIN                 : 15
MINUS                : 125
NEWDRAW              : 28
OR                   : 
PERCENT              : 128
PLUS                 : 124
POINT                : 88
RBRACKET             : 26 27 47 48 76 77
RETURN               : 115
RIGHT                : 97
RPAREN               : 15 28 41 42 78 81 90 91 107 110 118
SEMICOLON            : 21 22 28 35 36 37 38 88 115
SETCOLOR             : 106
SETPOSITION          : 95
SHOW                 : 102
SPEED                : 104
SQUARE               : 100
TIMES                : 126
TRUE                 : 70
VOID                 : 15
WHILE                : 111
error                : 

Nonterminals, with rules where they appear

accion               : 19
accion_nombre        : 88
accion_params        : 88
accion_params_2      : 89
accion_params_cte    : 90 93
accion_params_cte_2  : 92
addop                : 62 79
array                : 31
array_2              : 32
asignacion           : 16
asignacion_2         : 22
asignacion_3         : 25
asignacion_id        : 22
bloque               : 9 14 81 84 107 110 113
ciclo                : 18
condicion            : 17
condicion_2          : 81
condicion_end        : 83 84
condicion_id         : 81
data_type            : 29 32 114 121
def_array            : 37
def_array_2          : 46
def_array_cte        : 47 50
def_array_cte_2      : 49
empty                : 7 10 34 45 51 54 63 66 75 94 120 123
estatuto             : 9
exp                  : 25 27 52 53 62 74 77
exp_2                : 61
expresion            : 24 25 35 43 78 81 110 115
expresion_2          : 52
factor               : 64
for                  : 86
for_end              : 107
for_init             : 107
funcion              : 3
funcion_1            : 113
funcion_2            : 113
funcion_end          : 115 116
funciones            : 1 2
global_1             : 5 6
globales             : 1
globales_2           : 5 6
llamada              : 21 72
llamada_2            : 39
llamada_exp          : 41 44
llamada_exp2         : 43
llamada_id           : 39
main                 : 3 4
main_1               : 14
programa             : 0
relop                : 53
termino              : 61 65
termino_2            : 64
timesop              : 65
var_cte              : 49 79 80 92
var_cte_1            : 67
var_cte_2            : 73
var_cte_3            : 74
var_local            : 113
var_local_2          : 118 122
var_local_2_1        : 119
var_local_3          : 119
vars                 : 5 6 20
vars2                : 29
vars3                : 31
vars_aux             : 30
while                : 87
while_end            : 110
while_init           : 110

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones
    (2) programa -> . funciones
    (5) globales -> . global_1 vars globales_2
    (3) funciones -> . funcion main
    (4) funciones -> . main
    (8) global_1 -> . GLOBAL
    (113) funcion -> . funcion_1 var_local bloque funcion_2
    (14) main -> . main_1 bloque END
    (114) funcion_1 -> . DEF data_type ID
    (15) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    GLOBAL          shift and go to state 6
    DEF             shift and go to state 5

    main_1                         shift and go to state 8
    main                           shift and go to state 1
    globales                       shift and go to state 10
    funcion                        shift and go to state 9
    funcion_1                      shift and go to state 7
    funciones                      shift and go to state 3
    global_1                       shift and go to state 2
    programa                       shift and go to state 4

state 1

    (4) funciones -> main .

    $end            reduce using rule 4 (funciones -> main .)


state 2

    (5) globales -> global_1 . vars globales_2
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 19
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    ARRAY           shift and go to state 17

    array                          shift and go to state 16
    vars                           shift and go to state 13
    vars_aux                       shift and go to state 14
    data_type                      shift and go to state 15

state 3

    (2) programa -> funciones .

    $end            reduce using rule 2 (programa -> funciones .)


state 4

    (0) S' -> programa .



state 5

    (114) funcion_1 -> DEF . data_type ID
    (15) main_1 -> DEF . VOID MAIN LPAREN RPAREN
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    VOID            shift and go to state 20
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12

    data_type                      shift and go to state 21

state 6

    (8) global_1 -> GLOBAL .

    DRAW            reduce using rule 8 (global_1 -> GLOBAL .)
    INT             reduce using rule 8 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 8 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 8 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 8 (global_1 -> GLOBAL .)


state 7

    (113) funcion -> funcion_1 . var_local bloque funcion_2
    (118) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 23

    var_local                      shift and go to state 22

state 8

    (14) main -> main_1 . bloque END
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    array                          shift and go to state 16
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    bloque                         shift and go to state 42
    llamada_id                     shift and go to state 40
    vars                           shift and go to state 43
    for                            shift and go to state 32
    while_init                     shift and go to state 25
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    llamada                        shift and go to state 36

state 9

    (3) funciones -> funcion . main
    (14) main -> . main_1 bloque END
    (15) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    DEF             shift and go to state 44

    main_1                         shift and go to state 8
    main                           shift and go to state 45

state 10

    (1) programa -> globales . funciones
    (3) funciones -> . funcion main
    (4) funciones -> . main
    (113) funcion -> . funcion_1 var_local bloque funcion_2
    (14) main -> . main_1 bloque END
    (114) funcion_1 -> . DEF data_type ID
    (15) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    DEF             shift and go to state 5

    funcion_1                      shift and go to state 7
    funciones                      shift and go to state 46
    main                           shift and go to state 1
    funcion                        shift and go to state 9
    main_1                         shift and go to state 8

state 11

    (11) data_type -> INT .

    ID              reduce using rule 11 (data_type -> INT .)
    COMMA           reduce using rule 11 (data_type -> INT .)


state 12

    (13) data_type -> BOOLEAN .

    ID              reduce using rule 13 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 13 (data_type -> BOOLEAN .)


state 13

    (5) globales -> global_1 vars . globales_2
    (6) globales_2 -> . global_1 vars globales_2
    (7) globales_2 -> . empty
    (8) global_1 -> . GLOBAL
    (129) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 129 (empty -> .)

    empty                          shift and go to state 47
    globales_2                     shift and go to state 48
    global_1                       shift and go to state 49

state 14

    (30) vars -> vars_aux .

    ID              reduce using rule 30 (vars -> vars_aux .)
    DRAW            reduce using rule 30 (vars -> vars_aux .)
    IF              reduce using rule 30 (vars -> vars_aux .)
    INT             reduce using rule 30 (vars -> vars_aux .)
    FLOAT           reduce using rule 30 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 30 (vars -> vars_aux .)
    FOR             reduce using rule 30 (vars -> vars_aux .)
    WHILE           reduce using rule 30 (vars -> vars_aux .)
    ARRAY           reduce using rule 30 (vars -> vars_aux .)
    END             reduce using rule 30 (vars -> vars_aux .)
    GLOBAL          reduce using rule 30 (vars -> vars_aux .)
    DEF             reduce using rule 30 (vars -> vars_aux .)
    RETURN          reduce using rule 30 (vars -> vars_aux .)
    ELSE            reduce using rule 30 (vars -> vars_aux .)


state 15

    (29) vars -> data_type . ID vars2

    ID              shift and go to state 50


state 16

    (31) vars_aux -> array . ID vars3

    ID              shift and go to state 51


state 17

    (32) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 52


state 18

    (12) data_type -> FLOAT .

    ID              reduce using rule 12 (data_type -> FLOAT .)
    COMMA           reduce using rule 12 (data_type -> FLOAT .)


state 19

    (28) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 53


state 20

    (15) main_1 -> DEF VOID . MAIN LPAREN RPAREN

    MAIN            shift and go to state 54


state 21

    (114) funcion_1 -> DEF data_type . ID

    ID              shift and go to state 55


state 22

    (113) funcion -> funcion_1 var_local . bloque funcion_2
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 129 (empty -> .)
    END             reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    bloque                         shift and go to state 56
    llamada_id                     shift and go to state 40
    vars                           shift and go to state 43
    for                            shift and go to state 32
    while_init                     shift and go to state 25
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    array                          shift and go to state 16
    llamada                        shift and go to state 36

state 23

    (118) var_local -> LPAREN . var_local_2 RPAREN
    (119) var_local_2 -> . var_local_2_1 var_local_3
    (120) var_local_2 -> . empty
    (121) var_local_2_1 -> . data_type ID
    (129) empty -> .
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    RPAREN          reduce using rule 129 (empty -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12

    var_local_2                    shift and go to state 57
    empty                          shift and go to state 58
    data_type                      shift and go to state 60
    var_local_2_1                  shift and go to state 59

state 24

    (87) ciclo -> while .

    ID              reduce using rule 87 (ciclo -> while .)
    DRAW            reduce using rule 87 (ciclo -> while .)
    IF              reduce using rule 87 (ciclo -> while .)
    INT             reduce using rule 87 (ciclo -> while .)
    FLOAT           reduce using rule 87 (ciclo -> while .)
    BOOLEAN         reduce using rule 87 (ciclo -> while .)
    FOR             reduce using rule 87 (ciclo -> while .)
    WHILE           reduce using rule 87 (ciclo -> while .)
    ARRAY           reduce using rule 87 (ciclo -> while .)
    ELSE            reduce using rule 87 (ciclo -> while .)
    END             reduce using rule 87 (ciclo -> while .)
    RETURN          reduce using rule 87 (ciclo -> while .)


state 25

    (110) while -> while_init . LPAREN expresion RPAREN bloque while_end

    LPAREN          shift and go to state 61


state 26

    (9) bloque -> estatuto . bloque
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    ELSE            reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    array                          shift and go to state 16
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    bloque                         shift and go to state 62
    llamada_id                     shift and go to state 40
    vars                           shift and go to state 43
    for                            shift and go to state 32
    while_init                     shift and go to state 25
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    llamada                        shift and go to state 36

state 27

    (81) condicion -> condicion_id . LPAREN expresion RPAREN bloque condicion_2

    LPAREN          shift and go to state 63


state 28

    (107) for -> for_init . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    LPAREN          shift and go to state 64


state 29

    (19) estatuto -> accion .

    ID              reduce using rule 19 (estatuto -> accion .)
    DRAW            reduce using rule 19 (estatuto -> accion .)
    IF              reduce using rule 19 (estatuto -> accion .)
    INT             reduce using rule 19 (estatuto -> accion .)
    FLOAT           reduce using rule 19 (estatuto -> accion .)
    BOOLEAN         reduce using rule 19 (estatuto -> accion .)
    FOR             reduce using rule 19 (estatuto -> accion .)
    WHILE           reduce using rule 19 (estatuto -> accion .)
    ARRAY           reduce using rule 19 (estatuto -> accion .)
    END             reduce using rule 19 (estatuto -> accion .)
    ELSE            reduce using rule 19 (estatuto -> accion .)
    RETURN          reduce using rule 19 (estatuto -> accion .)


state 30

    (88) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (23) asignacion_id -> ID .
    (40) llamada_id -> ID .

    POINT           shift and go to state 65
    EQUAL           reduce using rule 23 (asignacion_id -> ID .)
    LBRACKET        reduce using rule 23 (asignacion_id -> ID .)
    LPAREN          reduce using rule 40 (llamada_id -> ID .)


state 31

    (111) while_init -> WHILE .

    LPAREN          reduce using rule 111 (while_init -> WHILE .)


state 32

    (86) ciclo -> for .

    ID              reduce using rule 86 (ciclo -> for .)
    DRAW            reduce using rule 86 (ciclo -> for .)
    IF              reduce using rule 86 (ciclo -> for .)
    INT             reduce using rule 86 (ciclo -> for .)
    FLOAT           reduce using rule 86 (ciclo -> for .)
    BOOLEAN         reduce using rule 86 (ciclo -> for .)
    FOR             reduce using rule 86 (ciclo -> for .)
    WHILE           reduce using rule 86 (ciclo -> for .)
    ARRAY           reduce using rule 86 (ciclo -> for .)
    ELSE            reduce using rule 86 (ciclo -> for .)
    END             reduce using rule 86 (ciclo -> for .)
    RETURN          reduce using rule 86 (ciclo -> for .)


state 33

    (10) bloque -> empty .

    END             reduce using rule 10 (bloque -> empty .)
    RETURN          reduce using rule 10 (bloque -> empty .)
    ELSE            reduce using rule 10 (bloque -> empty .)


state 34

    (16) estatuto -> asignacion .

    ID              reduce using rule 16 (estatuto -> asignacion .)
    DRAW            reduce using rule 16 (estatuto -> asignacion .)
    IF              reduce using rule 16 (estatuto -> asignacion .)
    INT             reduce using rule 16 (estatuto -> asignacion .)
    FLOAT           reduce using rule 16 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 16 (estatuto -> asignacion .)
    FOR             reduce using rule 16 (estatuto -> asignacion .)
    WHILE           reduce using rule 16 (estatuto -> asignacion .)
    ARRAY           reduce using rule 16 (estatuto -> asignacion .)
    END             reduce using rule 16 (estatuto -> asignacion .)
    ELSE            reduce using rule 16 (estatuto -> asignacion .)
    RETURN          reduce using rule 16 (estatuto -> asignacion .)


state 35

    (82) condicion_id -> IF .

    LPAREN          reduce using rule 82 (condicion_id -> IF .)


state 36

    (21) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 66


state 37

    (108) for_init -> FOR .

    LPAREN          reduce using rule 108 (for_init -> FOR .)


state 38

    (22) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (24) asignacion_2 -> . EQUAL expresion
    (25) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL expresion

    EQUAL           shift and go to state 68
    LBRACKET        shift and go to state 69

    asignacion_2                   shift and go to state 67

state 39

    (18) estatuto -> ciclo .

    ID              reduce using rule 18 (estatuto -> ciclo .)
    DRAW            reduce using rule 18 (estatuto -> ciclo .)
    IF              reduce using rule 18 (estatuto -> ciclo .)
    INT             reduce using rule 18 (estatuto -> ciclo .)
    FLOAT           reduce using rule 18 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 18 (estatuto -> ciclo .)
    FOR             reduce using rule 18 (estatuto -> ciclo .)
    WHILE           reduce using rule 18 (estatuto -> ciclo .)
    ARRAY           reduce using rule 18 (estatuto -> ciclo .)
    END             reduce using rule 18 (estatuto -> ciclo .)
    ELSE            reduce using rule 18 (estatuto -> ciclo .)
    RETURN          reduce using rule 18 (estatuto -> ciclo .)


state 40

    (39) llamada -> llamada_id . LPAREN llamada_2

    LPAREN          shift and go to state 70


state 41

    (17) estatuto -> condicion .

    ID              reduce using rule 17 (estatuto -> condicion .)
    DRAW            reduce using rule 17 (estatuto -> condicion .)
    IF              reduce using rule 17 (estatuto -> condicion .)
    INT             reduce using rule 17 (estatuto -> condicion .)
    FLOAT           reduce using rule 17 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 17 (estatuto -> condicion .)
    FOR             reduce using rule 17 (estatuto -> condicion .)
    WHILE           reduce using rule 17 (estatuto -> condicion .)
    ARRAY           reduce using rule 17 (estatuto -> condicion .)
    END             reduce using rule 17 (estatuto -> condicion .)
    ELSE            reduce using rule 17 (estatuto -> condicion .)
    RETURN          reduce using rule 17 (estatuto -> condicion .)


state 42

    (14) main -> main_1 bloque . END

    END             shift and go to state 71


state 43

    (20) estatuto -> vars .

    ID              reduce using rule 20 (estatuto -> vars .)
    DRAW            reduce using rule 20 (estatuto -> vars .)
    IF              reduce using rule 20 (estatuto -> vars .)
    INT             reduce using rule 20 (estatuto -> vars .)
    FLOAT           reduce using rule 20 (estatuto -> vars .)
    BOOLEAN         reduce using rule 20 (estatuto -> vars .)
    FOR             reduce using rule 20 (estatuto -> vars .)
    WHILE           reduce using rule 20 (estatuto -> vars .)
    ARRAY           reduce using rule 20 (estatuto -> vars .)
    END             reduce using rule 20 (estatuto -> vars .)
    ELSE            reduce using rule 20 (estatuto -> vars .)
    RETURN          reduce using rule 20 (estatuto -> vars .)


state 44

    (15) main_1 -> DEF . VOID MAIN LPAREN RPAREN

    VOID            shift and go to state 20


state 45

    (3) funciones -> funcion main .

    $end            reduce using rule 3 (funciones -> funcion main .)


state 46

    (1) programa -> globales funciones .

    $end            reduce using rule 1 (programa -> globales funciones .)


state 47

    (7) globales_2 -> empty .

    DEF             reduce using rule 7 (globales_2 -> empty .)


state 48

    (5) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 5 (globales -> global_1 vars globales_2 .)


state 49

    (6) globales_2 -> global_1 . vars globales_2
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 19
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    ARRAY           shift and go to state 17

    array                          shift and go to state 16
    vars                           shift and go to state 72
    vars_aux                       shift and go to state 14
    data_type                      shift and go to state 15

state 50

    (29) vars -> data_type ID . vars2
    (35) vars2 -> . EQUAL expresion SEMICOLON
    (36) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 75
    SEMICOLON       shift and go to state 74

    vars2                          shift and go to state 73

state 51

    (31) vars_aux -> array ID . vars3
    (37) vars3 -> . EQUAL def_array SEMICOLON
    (38) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 77
    SEMICOLON       shift and go to state 76

    vars3                          shift and go to state 78

state 52

    (32) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12

    data_type                      shift and go to state 79

state 53

    (28) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 80


state 54

    (15) main_1 -> DEF VOID MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 81


state 55

    (114) funcion_1 -> DEF data_type ID .

    LPAREN          reduce using rule 114 (funcion_1 -> DEF data_type ID .)


state 56

    (113) funcion -> funcion_1 var_local bloque . funcion_2
    (115) funcion_2 -> . RETURN expresion SEMICOLON funcion_end
    (116) funcion_2 -> . funcion_end
    (117) funcion_end -> . END

    RETURN          shift and go to state 83
    END             shift and go to state 84

    funcion_2                      shift and go to state 82
    funcion_end                    shift and go to state 85

state 57

    (118) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 86


state 58

    (120) var_local_2 -> empty .

    RPAREN          reduce using rule 120 (var_local_2 -> empty .)


state 59

    (119) var_local_2 -> var_local_2_1 . var_local_3
    (122) var_local_3 -> . COMMA var_local_2
    (123) var_local_3 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 89
    RPAREN          reduce using rule 129 (empty -> .)

    var_local_3                    shift and go to state 87
    empty                          shift and go to state 88

state 60

    (121) var_local_2_1 -> data_type . ID

    ID              shift and go to state 90


state 61

    (110) while -> while_init LPAREN . expresion RPAREN bloque while_end
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    llamada                        shift and go to state 105
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 93
    var_cte                        shift and go to state 101
    exp                            shift and go to state 98
    factor                         shift and go to state 94
    termino                        shift and go to state 102
    addop                          shift and go to state 104
    var_cte_1                      shift and go to state 91

state 62

    (9) bloque -> estatuto bloque .

    END             reduce using rule 9 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 9 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 9 (bloque -> estatuto bloque .)


state 63

    (81) condicion -> condicion_id LPAREN . expresion RPAREN bloque condicion_2
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    llamada                        shift and go to state 105
    llamada_id                     shift and go to state 40
    var_cte                        shift and go to state 101
    expresion                      shift and go to state 107
    factor                         shift and go to state 94
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104
    var_cte_1                      shift and go to state 91

state 64

    (107) for -> for_init LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 108


state 65

    (88) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (95) accion_nombre -> . SETPOSITION
    (96) accion_nombre -> . CIRCLE
    (97) accion_nombre -> . RIGHT
    (98) accion_nombre -> . LEFT
    (99) accion_nombre -> . HIDE
    (100) accion_nombre -> . SQUARE
    (101) accion_nombre -> . CLEAR
    (102) accion_nombre -> . SHOW
    (103) accion_nombre -> . BACK
    (104) accion_nombre -> . SPEED
    (105) accion_nombre -> . FORWARD
    (106) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 119
    CIRCLE          shift and go to state 121
    RIGHT           shift and go to state 112
    LEFT            shift and go to state 114
    HIDE            shift and go to state 111
    SQUARE          shift and go to state 110
    CLEAR           shift and go to state 117
    SHOW            shift and go to state 113
    BACK            shift and go to state 115
    SPEED           shift and go to state 116
    FORWARD         shift and go to state 118
    SETCOLOR        shift and go to state 120

    accion_nombre                  shift and go to state 109

state 66

    (21) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 21 (estatuto -> llamada SEMICOLON .)


state 67

    (22) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 122


state 68

    (24) asignacion_2 -> EQUAL . expresion
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 123
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 69

    (25) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL expresion
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 124
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 70

    (39) llamada -> llamada_id LPAREN . llamada_2
    (41) llamada_2 -> . llamada_exp RPAREN
    (42) llamada_2 -> . RPAREN
    (43) llamada_exp -> . expresion llamada_exp2
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    RPAREN          shift and go to state 127
    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 125
    var_cte                        shift and go to state 101
    llamada                        shift and go to state 105
    factor                         shift and go to state 94
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    llamada_2                      shift and go to state 126
    addop                          shift and go to state 104
    llamada_exp                    shift and go to state 128

state 71

    (14) main -> main_1 bloque END .

    $end            reduce using rule 14 (main -> main_1 bloque END .)


state 72

    (6) globales_2 -> global_1 vars . globales_2
    (6) globales_2 -> . global_1 vars globales_2
    (7) globales_2 -> . empty
    (8) global_1 -> . GLOBAL
    (129) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 129 (empty -> .)

    empty                          shift and go to state 47
    globales_2                     shift and go to state 129
    global_1                       shift and go to state 49

state 73

    (29) vars -> data_type ID vars2 .

    ID              reduce using rule 29 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 29 (vars -> data_type ID vars2 .)
    IF              reduce using rule 29 (vars -> data_type ID vars2 .)
    INT             reduce using rule 29 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 29 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 29 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 29 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 29 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 29 (vars -> data_type ID vars2 .)
    END             reduce using rule 29 (vars -> data_type ID vars2 .)
    GLOBAL          reduce using rule 29 (vars -> data_type ID vars2 .)
    DEF             reduce using rule 29 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 29 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 29 (vars -> data_type ID vars2 .)


state 74

    (36) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 36 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 36 (vars2 -> SEMICOLON .)
    ID              reduce using rule 36 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 36 (vars2 -> SEMICOLON .)
    IF              reduce using rule 36 (vars2 -> SEMICOLON .)
    INT             reduce using rule 36 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 36 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 36 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 36 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 36 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 36 (vars2 -> SEMICOLON .)
    END             reduce using rule 36 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 36 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 36 (vars2 -> SEMICOLON .)


state 75

    (35) vars2 -> EQUAL . expresion SEMICOLON
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 130
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 76

    (38) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 38 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 38 (vars3 -> SEMICOLON .)
    ID              reduce using rule 38 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 38 (vars3 -> SEMICOLON .)
    IF              reduce using rule 38 (vars3 -> SEMICOLON .)
    INT             reduce using rule 38 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 38 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 38 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 38 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 38 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 38 (vars3 -> SEMICOLON .)
    END             reduce using rule 38 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 38 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 38 (vars3 -> SEMICOLON .)


state 77

    (37) vars3 -> EQUAL . def_array SEMICOLON
    (46) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 132

    def_array                      shift and go to state 131

state 78

    (31) vars_aux -> array ID vars3 .

    GLOBAL          reduce using rule 31 (vars_aux -> array ID vars3 .)
    DEF             reduce using rule 31 (vars_aux -> array ID vars3 .)
    ID              reduce using rule 31 (vars_aux -> array ID vars3 .)
    DRAW            reduce using rule 31 (vars_aux -> array ID vars3 .)
    IF              reduce using rule 31 (vars_aux -> array ID vars3 .)
    INT             reduce using rule 31 (vars_aux -> array ID vars3 .)
    FLOAT           reduce using rule 31 (vars_aux -> array ID vars3 .)
    BOOLEAN         reduce using rule 31 (vars_aux -> array ID vars3 .)
    FOR             reduce using rule 31 (vars_aux -> array ID vars3 .)
    WHILE           reduce using rule 31 (vars_aux -> array ID vars3 .)
    ARRAY           reduce using rule 31 (vars_aux -> array ID vars3 .)
    END             reduce using rule 31 (vars_aux -> array ID vars3 .)
    RETURN          reduce using rule 31 (vars_aux -> array ID vars3 .)
    ELSE            reduce using rule 31 (vars_aux -> array ID vars3 .)


state 79

    (32) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 133


state 80

    (28) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 134


state 81

    (15) main_1 -> DEF VOID MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 135


state 82

    (113) funcion -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 113 (funcion -> funcion_1 var_local bloque funcion_2 .)


state 83

    (115) funcion_2 -> RETURN . expresion SEMICOLON funcion_end
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 136
    factor                         shift and go to state 94
    llamada                        shift and go to state 105
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104

state 84

    (117) funcion_end -> END .

    DEF             reduce using rule 117 (funcion_end -> END .)


state 85

    (116) funcion_2 -> funcion_end .

    DEF             reduce using rule 116 (funcion_2 -> funcion_end .)


state 86

    (118) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 118 (var_local -> LPAREN var_local_2 RPAREN .)


state 87

    (119) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 119 (var_local_2 -> var_local_2_1 var_local_3 .)


state 88

    (123) var_local_3 -> empty .

    RPAREN          reduce using rule 123 (var_local_3 -> empty .)


state 89

    (122) var_local_3 -> COMMA . var_local_2
    (119) var_local_2 -> . var_local_2_1 var_local_3
    (120) var_local_2 -> . empty
    (121) var_local_2_1 -> . data_type ID
    (129) empty -> .
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    RPAREN          reduce using rule 129 (empty -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12

    var_local_2                    shift and go to state 137
    empty                          shift and go to state 58
    data_type                      shift and go to state 60
    var_local_2_1                  shift and go to state 59

state 90

    (121) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 121 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 121 (var_local_2_1 -> data_type ID .)


state 91

    (67) var_cte -> var_cte_1 .

    TIMES           reduce using rule 67 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 67 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 67 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 67 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 67 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 67 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 67 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 67 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 67 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 67 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 67 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 67 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 67 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 67 (var_cte -> var_cte_1 .)
    COMMA           reduce using rule 67 (var_cte -> var_cte_1 .)


state 92

    (69) var_cte -> CTE_F .

    TIMES           reduce using rule 69 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 69 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 69 (var_cte -> CTE_F .)
    PLUS            reduce using rule 69 (var_cte -> CTE_F .)
    MINUS           reduce using rule 69 (var_cte -> CTE_F .)
    GREATER         reduce using rule 69 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 69 (var_cte -> CTE_F .)
    LESS            reduce using rule 69 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 69 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 69 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 69 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 69 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 69 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 69 (var_cte -> CTE_F .)
    COMMA           reduce using rule 69 (var_cte -> CTE_F .)


state 93

    (110) while -> while_init LPAREN expresion . RPAREN bloque while_end

    RPAREN          shift and go to state 138


state 94

    (64) termino -> factor . termino_2
    (65) termino_2 -> . timesop termino
    (66) termino_2 -> . empty
    (126) timesop -> . TIMES
    (127) timesop -> . DIVIDE
    (128) timesop -> . PERCENT
    (129) empty -> .

    TIMES           shift and go to state 143
    DIVIDE          shift and go to state 140
    PERCENT         shift and go to state 144
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATER         reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESS            reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    DEQUAL          reduce using rule 129 (empty -> .)
    DISTINT         reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)

    timesop                        shift and go to state 142
    termino_2                      shift and go to state 139
    empty                          shift and go to state 141

state 95

    (68) var_cte -> CTE_I .

    TIMES           reduce using rule 68 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 68 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 68 (var_cte -> CTE_I .)
    PLUS            reduce using rule 68 (var_cte -> CTE_I .)
    MINUS           reduce using rule 68 (var_cte -> CTE_I .)
    GREATER         reduce using rule 68 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 68 (var_cte -> CTE_I .)
    LESS            reduce using rule 68 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 68 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 68 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 68 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 68 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 68 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 68 (var_cte -> CTE_I .)
    COMMA           reduce using rule 68 (var_cte -> CTE_I .)


state 96

    (71) var_cte -> FALSE .

    TIMES           reduce using rule 71 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 71 (var_cte -> FALSE .)
    PERCENT         reduce using rule 71 (var_cte -> FALSE .)
    PLUS            reduce using rule 71 (var_cte -> FALSE .)
    MINUS           reduce using rule 71 (var_cte -> FALSE .)
    GREATER         reduce using rule 71 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 71 (var_cte -> FALSE .)
    LESS            reduce using rule 71 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 71 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 71 (var_cte -> FALSE .)
    DISTINT         reduce using rule 71 (var_cte -> FALSE .)
    RPAREN          reduce using rule 71 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 71 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 71 (var_cte -> FALSE .)
    COMMA           reduce using rule 71 (var_cte -> FALSE .)


state 97

    (125) addop -> MINUS .

    CTE_I           reduce using rule 125 (addop -> MINUS .)
    CTE_F           reduce using rule 125 (addop -> MINUS .)
    TRUE            reduce using rule 125 (addop -> MINUS .)
    FALSE           reduce using rule 125 (addop -> MINUS .)
    ID              reduce using rule 125 (addop -> MINUS .)
    LPAREN          reduce using rule 125 (addop -> MINUS .)
    PLUS            reduce using rule 125 (addop -> MINUS .)
    MINUS           reduce using rule 125 (addop -> MINUS .)


state 98

    (52) expresion -> exp . expresion_2
    (53) expresion_2 -> . relop exp
    (54) expresion_2 -> . empty
    (55) relop -> . GREATER
    (56) relop -> . GREATEREQUAL
    (57) relop -> . LESS
    (58) relop -> . LESSEQUAL
    (59) relop -> . DEQUAL
    (60) relop -> . DISTINT
    (129) empty -> .

    GREATER         shift and go to state 153
    GREATEREQUAL    shift and go to state 147
    LESS            shift and go to state 152
    LESSEQUAL       shift and go to state 149
    DEQUAL          shift and go to state 150
    DISTINT         shift and go to state 146
    RPAREN          reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)

    expresion_2                    shift and go to state 145
    relop                          shift and go to state 151
    empty                          shift and go to state 148

state 99

    (73) var_cte_1 -> ID . var_cte_2
    (40) llamada_id -> ID .
    (74) var_cte_2 -> . LBRACKET exp var_cte_3
    (75) var_cte_2 -> . empty
    (129) empty -> .

    LPAREN          reduce using rule 40 (llamada_id -> ID .)
    LBRACKET        shift and go to state 156
    TIMES           reduce using rule 129 (empty -> .)
    DIVIDE          reduce using rule 129 (empty -> .)
    PERCENT         reduce using rule 129 (empty -> .)
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATER         reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESS            reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    DEQUAL          reduce using rule 129 (empty -> .)
    DISTINT         reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)

    var_cte_2                      shift and go to state 155
    empty                          shift and go to state 154

state 100

    (78) factor -> LPAREN . expresion RPAREN
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 157
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 101

    (80) factor -> var_cte .

    TIMES           reduce using rule 80 (factor -> var_cte .)
    DIVIDE          reduce using rule 80 (factor -> var_cte .)
    PERCENT         reduce using rule 80 (factor -> var_cte .)
    PLUS            reduce using rule 80 (factor -> var_cte .)
    MINUS           reduce using rule 80 (factor -> var_cte .)
    GREATER         reduce using rule 80 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 80 (factor -> var_cte .)
    LESS            reduce using rule 80 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 80 (factor -> var_cte .)
    DEQUAL          reduce using rule 80 (factor -> var_cte .)
    DISTINT         reduce using rule 80 (factor -> var_cte .)
    RPAREN          reduce using rule 80 (factor -> var_cte .)
    SEMICOLON       reduce using rule 80 (factor -> var_cte .)
    COMMA           reduce using rule 80 (factor -> var_cte .)
    RBRACKET        reduce using rule 80 (factor -> var_cte .)


state 102

    (61) exp -> termino . exp_2
    (62) exp_2 -> . addop exp
    (63) exp_2 -> . empty
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (129) empty -> .

    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    GREATER         reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESS            reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    DEQUAL          reduce using rule 129 (empty -> .)
    DISTINT         reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)

    addop                          shift and go to state 159
    exp_2                          shift and go to state 160
    empty                          shift and go to state 158

state 103

    (70) var_cte -> TRUE .

    TIMES           reduce using rule 70 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 70 (var_cte -> TRUE .)
    PERCENT         reduce using rule 70 (var_cte -> TRUE .)
    PLUS            reduce using rule 70 (var_cte -> TRUE .)
    MINUS           reduce using rule 70 (var_cte -> TRUE .)
    GREATER         reduce using rule 70 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 70 (var_cte -> TRUE .)
    LESS            reduce using rule 70 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 70 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 70 (var_cte -> TRUE .)
    DISTINT         reduce using rule 70 (var_cte -> TRUE .)
    RPAREN          reduce using rule 70 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 70 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 70 (var_cte -> TRUE .)
    COMMA           reduce using rule 70 (var_cte -> TRUE .)


state 104

    (79) factor -> addop . var_cte
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    var_cte                        shift and go to state 161
    llamada                        shift and go to state 105

state 105

    (72) var_cte -> llamada .

    TIMES           reduce using rule 72 (var_cte -> llamada .)
    DIVIDE          reduce using rule 72 (var_cte -> llamada .)
    PERCENT         reduce using rule 72 (var_cte -> llamada .)
    PLUS            reduce using rule 72 (var_cte -> llamada .)
    MINUS           reduce using rule 72 (var_cte -> llamada .)
    GREATER         reduce using rule 72 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 72 (var_cte -> llamada .)
    LESS            reduce using rule 72 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 72 (var_cte -> llamada .)
    DEQUAL          reduce using rule 72 (var_cte -> llamada .)
    DISTINT         reduce using rule 72 (var_cte -> llamada .)
    RPAREN          reduce using rule 72 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 72 (var_cte -> llamada .)
    RBRACKET        reduce using rule 72 (var_cte -> llamada .)
    COMMA           reduce using rule 72 (var_cte -> llamada .)


state 106

    (124) addop -> PLUS .

    CTE_I           reduce using rule 124 (addop -> PLUS .)
    CTE_F           reduce using rule 124 (addop -> PLUS .)
    TRUE            reduce using rule 124 (addop -> PLUS .)
    FALSE           reduce using rule 124 (addop -> PLUS .)
    ID              reduce using rule 124 (addop -> PLUS .)
    LPAREN          reduce using rule 124 (addop -> PLUS .)
    PLUS            reduce using rule 124 (addop -> PLUS .)
    MINUS           reduce using rule 124 (addop -> PLUS .)


state 107

    (81) condicion -> condicion_id LPAREN expresion . RPAREN bloque condicion_2

    RPAREN          shift and go to state 162


state 108

    (107) for -> for_init LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 163


state 109

    (88) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (89) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 164

    accion_params                  shift and go to state 165

state 110

    (100) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 100 (accion_nombre -> SQUARE .)


state 111

    (99) accion_nombre -> HIDE .

    LPAREN          reduce using rule 99 (accion_nombre -> HIDE .)


state 112

    (97) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 97 (accion_nombre -> RIGHT .)


state 113

    (102) accion_nombre -> SHOW .

    LPAREN          reduce using rule 102 (accion_nombre -> SHOW .)


state 114

    (98) accion_nombre -> LEFT .

    LPAREN          reduce using rule 98 (accion_nombre -> LEFT .)


state 115

    (103) accion_nombre -> BACK .

    LPAREN          reduce using rule 103 (accion_nombre -> BACK .)


state 116

    (104) accion_nombre -> SPEED .

    LPAREN          reduce using rule 104 (accion_nombre -> SPEED .)


state 117

    (101) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 101 (accion_nombre -> CLEAR .)


state 118

    (105) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 105 (accion_nombre -> FORWARD .)


state 119

    (95) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 95 (accion_nombre -> SETPOSITION .)


state 120

    (106) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 106 (accion_nombre -> SETCOLOR .)


state 121

    (96) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 96 (accion_nombre -> CIRCLE .)


state 122

    (22) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 22 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 123

    (24) asignacion_2 -> EQUAL expresion .

    SEMICOLON       reduce using rule 24 (asignacion_2 -> EQUAL expresion .)


state 124

    (25) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL expresion
    (26) asignacion_3 -> . RBRACKET
    (27) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 168
    COMMA           shift and go to state 166

    asignacion_3                   shift and go to state 167

state 125

    (43) llamada_exp -> expresion . llamada_exp2
    (44) llamada_exp2 -> . COMMA llamada_exp
    (45) llamada_exp2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 170
    RPAREN          reduce using rule 129 (empty -> .)

    empty                          shift and go to state 169
    llamada_exp2                   shift and go to state 171

state 126

    (39) llamada -> llamada_id LPAREN llamada_2 .

    COMMA           reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    RPAREN          reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    SEMICOLON       reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    TIMES           reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    DIVIDE          reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    PERCENT         reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    PLUS            reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    MINUS           reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATER         reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    LESS            reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    DEQUAL          reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    DISTINT         reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)
    RBRACKET        reduce using rule 39 (llamada -> llamada_id LPAREN llamada_2 .)


state 127

    (42) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 42 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 42 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 42 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 42 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 42 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 42 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 42 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 42 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 42 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 42 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 42 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 42 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 42 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 42 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 42 (llamada_2 -> RPAREN .)


state 128

    (41) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 172


state 129

    (6) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 6 (globales_2 -> global_1 vars globales_2 .)


state 130

    (35) vars2 -> EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 173


state 131

    (37) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 174


state 132

    (46) def_array -> LBRACKET . def_array_2
    (47) def_array_2 -> . def_array_cte RBRACKET
    (48) def_array_2 -> . RBRACKET
    (49) def_array_cte -> . var_cte def_array_cte_2
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    RBRACKET        shift and go to state 177
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    def_array_2                    shift and go to state 175
    def_array_cte                  shift and go to state 178
    var_cte                        shift and go to state 176
    llamada                        shift and go to state 105

state 133

    (32) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 179


state 134

    (28) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 180


state 135

    (15) main_1 -> DEF VOID MAIN LPAREN RPAREN .

    ID              reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    IF              reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    INT             reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    FOR             reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    END             reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)


state 136

    (115) funcion_2 -> RETURN expresion . SEMICOLON funcion_end

    SEMICOLON       shift and go to state 181


state 137

    (122) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 122 (var_local_3 -> COMMA var_local_2 .)


state 138

    (110) while -> while_init LPAREN expresion RPAREN . bloque while_end
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    array                          shift and go to state 16
    while_init                     shift and go to state 25
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    bloque                         shift and go to state 182
    llamada_id                     shift and go to state 40
    vars                           shift and go to state 43
    for                            shift and go to state 32
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    llamada                        shift and go to state 36

state 139

    (64) termino -> factor termino_2 .

    PLUS            reduce using rule 64 (termino -> factor termino_2 .)
    MINUS           reduce using rule 64 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 64 (termino -> factor termino_2 .)
    COMMA           reduce using rule 64 (termino -> factor termino_2 .)
    GREATER         reduce using rule 64 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 64 (termino -> factor termino_2 .)
    LESS            reduce using rule 64 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 64 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 64 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 64 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 64 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 64 (termino -> factor termino_2 .)


state 140

    (127) timesop -> DIVIDE .

    LPAREN          reduce using rule 127 (timesop -> DIVIDE .)
    PLUS            reduce using rule 127 (timesop -> DIVIDE .)
    MINUS           reduce using rule 127 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 127 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 127 (timesop -> DIVIDE .)
    TRUE            reduce using rule 127 (timesop -> DIVIDE .)
    FALSE           reduce using rule 127 (timesop -> DIVIDE .)
    ID              reduce using rule 127 (timesop -> DIVIDE .)


state 141

    (66) termino_2 -> empty .

    PLUS            reduce using rule 66 (termino_2 -> empty .)
    MINUS           reduce using rule 66 (termino_2 -> empty .)
    GREATER         reduce using rule 66 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 66 (termino_2 -> empty .)
    LESS            reduce using rule 66 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 66 (termino_2 -> empty .)
    DEQUAL          reduce using rule 66 (termino_2 -> empty .)
    DISTINT         reduce using rule 66 (termino_2 -> empty .)
    RPAREN          reduce using rule 66 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 66 (termino_2 -> empty .)
    RBRACKET        reduce using rule 66 (termino_2 -> empty .)
    COMMA           reduce using rule 66 (termino_2 -> empty .)


state 142

    (65) termino_2 -> timesop . termino
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 183
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 143

    (126) timesop -> TIMES .

    LPAREN          reduce using rule 126 (timesop -> TIMES .)
    PLUS            reduce using rule 126 (timesop -> TIMES .)
    MINUS           reduce using rule 126 (timesop -> TIMES .)
    CTE_I           reduce using rule 126 (timesop -> TIMES .)
    CTE_F           reduce using rule 126 (timesop -> TIMES .)
    TRUE            reduce using rule 126 (timesop -> TIMES .)
    FALSE           reduce using rule 126 (timesop -> TIMES .)
    ID              reduce using rule 126 (timesop -> TIMES .)


state 144

    (128) timesop -> PERCENT .

    LPAREN          reduce using rule 128 (timesop -> PERCENT .)
    PLUS            reduce using rule 128 (timesop -> PERCENT .)
    MINUS           reduce using rule 128 (timesop -> PERCENT .)
    CTE_I           reduce using rule 128 (timesop -> PERCENT .)
    CTE_F           reduce using rule 128 (timesop -> PERCENT .)
    TRUE            reduce using rule 128 (timesop -> PERCENT .)
    FALSE           reduce using rule 128 (timesop -> PERCENT .)
    ID              reduce using rule 128 (timesop -> PERCENT .)


state 145

    (52) expresion -> exp expresion_2 .

    COMMA           reduce using rule 52 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 52 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 52 (expresion -> exp expresion_2 .)


state 146

    (60) relop -> DISTINT .

    LPAREN          reduce using rule 60 (relop -> DISTINT .)
    PLUS            reduce using rule 60 (relop -> DISTINT .)
    MINUS           reduce using rule 60 (relop -> DISTINT .)
    CTE_I           reduce using rule 60 (relop -> DISTINT .)
    CTE_F           reduce using rule 60 (relop -> DISTINT .)
    TRUE            reduce using rule 60 (relop -> DISTINT .)
    FALSE           reduce using rule 60 (relop -> DISTINT .)
    ID              reduce using rule 60 (relop -> DISTINT .)


state 147

    (56) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 56 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 56 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 56 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 56 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 56 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 56 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 56 (relop -> GREATEREQUAL .)
    ID              reduce using rule 56 (relop -> GREATEREQUAL .)


state 148

    (54) expresion_2 -> empty .

    RPAREN          reduce using rule 54 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 54 (expresion_2 -> empty .)
    COMMA           reduce using rule 54 (expresion_2 -> empty .)


state 149

    (58) relop -> LESSEQUAL .

    LPAREN          reduce using rule 58 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 58 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 58 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 58 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 58 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 58 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 58 (relop -> LESSEQUAL .)
    ID              reduce using rule 58 (relop -> LESSEQUAL .)


state 150

    (59) relop -> DEQUAL .

    LPAREN          reduce using rule 59 (relop -> DEQUAL .)
    PLUS            reduce using rule 59 (relop -> DEQUAL .)
    MINUS           reduce using rule 59 (relop -> DEQUAL .)
    CTE_I           reduce using rule 59 (relop -> DEQUAL .)
    CTE_F           reduce using rule 59 (relop -> DEQUAL .)
    TRUE            reduce using rule 59 (relop -> DEQUAL .)
    FALSE           reduce using rule 59 (relop -> DEQUAL .)
    ID              reduce using rule 59 (relop -> DEQUAL .)


state 151

    (53) expresion_2 -> relop . exp
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 184
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 152

    (57) relop -> LESS .

    LPAREN          reduce using rule 57 (relop -> LESS .)
    PLUS            reduce using rule 57 (relop -> LESS .)
    MINUS           reduce using rule 57 (relop -> LESS .)
    CTE_I           reduce using rule 57 (relop -> LESS .)
    CTE_F           reduce using rule 57 (relop -> LESS .)
    TRUE            reduce using rule 57 (relop -> LESS .)
    FALSE           reduce using rule 57 (relop -> LESS .)
    ID              reduce using rule 57 (relop -> LESS .)


state 153

    (55) relop -> GREATER .

    LPAREN          reduce using rule 55 (relop -> GREATER .)
    PLUS            reduce using rule 55 (relop -> GREATER .)
    MINUS           reduce using rule 55 (relop -> GREATER .)
    CTE_I           reduce using rule 55 (relop -> GREATER .)
    CTE_F           reduce using rule 55 (relop -> GREATER .)
    TRUE            reduce using rule 55 (relop -> GREATER .)
    FALSE           reduce using rule 55 (relop -> GREATER .)
    ID              reduce using rule 55 (relop -> GREATER .)


state 154

    (75) var_cte_2 -> empty .

    TIMES           reduce using rule 75 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 75 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 75 (var_cte_2 -> empty .)
    PLUS            reduce using rule 75 (var_cte_2 -> empty .)
    MINUS           reduce using rule 75 (var_cte_2 -> empty .)
    GREATER         reduce using rule 75 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 75 (var_cte_2 -> empty .)
    LESS            reduce using rule 75 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 75 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 75 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 75 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 75 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 75 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 75 (var_cte_2 -> empty .)
    COMMA           reduce using rule 75 (var_cte_2 -> empty .)


state 155

    (73) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 73 (var_cte_1 -> ID var_cte_2 .)


state 156

    (74) var_cte_2 -> LBRACKET . exp var_cte_3
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 185
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 157

    (78) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 186


state 158

    (63) exp_2 -> empty .

    GREATER         reduce using rule 63 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 63 (exp_2 -> empty .)
    LESS            reduce using rule 63 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 63 (exp_2 -> empty .)
    DEQUAL          reduce using rule 63 (exp_2 -> empty .)
    DISTINT         reduce using rule 63 (exp_2 -> empty .)
    RPAREN          reduce using rule 63 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 63 (exp_2 -> empty .)
    RBRACKET        reduce using rule 63 (exp_2 -> empty .)
    COMMA           reduce using rule 63 (exp_2 -> empty .)


state 159

    (62) exp_2 -> addop . exp
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 187
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 160

    (61) exp -> termino exp_2 .

    GREATER         reduce using rule 61 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 61 (exp -> termino exp_2 .)
    LESS            reduce using rule 61 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 61 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 61 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 61 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 61 (exp -> termino exp_2 .)
    COMMA           reduce using rule 61 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 61 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 61 (exp -> termino exp_2 .)


state 161

    (79) factor -> addop var_cte .

    TIMES           reduce using rule 79 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 79 (factor -> addop var_cte .)
    PERCENT         reduce using rule 79 (factor -> addop var_cte .)
    PLUS            reduce using rule 79 (factor -> addop var_cte .)
    MINUS           reduce using rule 79 (factor -> addop var_cte .)
    GREATER         reduce using rule 79 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 79 (factor -> addop var_cte .)
    LESS            reduce using rule 79 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 79 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 79 (factor -> addop var_cte .)
    DISTINT         reduce using rule 79 (factor -> addop var_cte .)
    RPAREN          reduce using rule 79 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 79 (factor -> addop var_cte .)
    COMMA           reduce using rule 79 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 79 (factor -> addop var_cte .)


state 162

    (81) condicion -> condicion_id LPAREN expresion RPAREN . bloque condicion_2
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    ELSE            reduce using rule 129 (empty -> .)
    END             reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    vars                           shift and go to state 43
    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    array                          shift and go to state 16
    bloque                         shift and go to state 188
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    llamada_id                     shift and go to state 40
    for                            shift and go to state 32
    while_init                     shift and go to state 25
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    llamada                        shift and go to state 36

state 163

    (107) for -> for_init LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 189


state 164

    (89) accion_params -> LPAREN . accion_params_2
    (90) accion_params_2 -> . accion_params_cte RPAREN
    (91) accion_params_2 -> . RPAREN
    (92) accion_params_cte -> . var_cte accion_params_cte_2
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    RPAREN          shift and go to state 193
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    accion_params_2                shift and go to state 190
    accion_params_cte              shift and go to state 192
    var_cte                        shift and go to state 191
    llamada                        shift and go to state 105

state 165

    (88) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 194


state 166

    (27) asignacion_3 -> COMMA . exp RBRACKET
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 195
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 167

    (25) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL expresion

    EQUAL           shift and go to state 196


state 168

    (26) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 26 (asignacion_3 -> RBRACKET .)


state 169

    (45) llamada_exp2 -> empty .

    RPAREN          reduce using rule 45 (llamada_exp2 -> empty .)


state 170

    (44) llamada_exp2 -> COMMA . llamada_exp
    (43) llamada_exp -> . expresion llamada_exp2
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 125
    factor                         shift and go to state 94
    llamada                        shift and go to state 105
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104
    llamada_exp                    shift and go to state 197

state 171

    (43) llamada_exp -> expresion llamada_exp2 .

    RPAREN          reduce using rule 43 (llamada_exp -> expresion llamada_exp2 .)


state 172

    (41) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 41 (llamada_2 -> llamada_exp RPAREN .)


state 173

    (35) vars2 -> EQUAL expresion SEMICOLON .

    GLOBAL          reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    DEF             reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    ID              reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    DRAW            reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    IF              reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    INT             reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    BOOLEAN         reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    FOR             reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    ARRAY           reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    END             reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)
    ELSE            reduce using rule 35 (vars2 -> EQUAL expresion SEMICOLON .)


state 174

    (37) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 37 (vars3 -> EQUAL def_array SEMICOLON .)


state 175

    (46) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 46 (def_array -> LBRACKET def_array_2 .)


state 176

    (49) def_array_cte -> var_cte . def_array_cte_2
    (50) def_array_cte_2 -> . COMMA def_array_cte
    (51) def_array_cte_2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 199
    RBRACKET        reduce using rule 129 (empty -> .)

    def_array_cte_2                shift and go to state 198
    empty                          shift and go to state 200

state 177

    (48) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 48 (def_array_2 -> RBRACKET .)


state 178

    (47) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 201


state 179

    (32) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (33) array_2 -> . COMMA CTE_I
    (34) array_2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 202
    GREATER         reduce using rule 129 (empty -> .)

    empty                          shift and go to state 203
    array_2                        shift and go to state 204

state 180

    (28) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 205


state 181

    (115) funcion_2 -> RETURN expresion SEMICOLON . funcion_end
    (117) funcion_end -> . END

    END             shift and go to state 84

    funcion_end                    shift and go to state 206

state 182

    (110) while -> while_init LPAREN expresion RPAREN bloque . while_end
    (112) while_end -> . END

    END             shift and go to state 208

    while_end                      shift and go to state 207

state 183

    (65) termino_2 -> timesop termino .

    PLUS            reduce using rule 65 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 65 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 65 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 65 (termino_2 -> timesop termino .)
    LESS            reduce using rule 65 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 65 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 65 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 65 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 65 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 65 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 65 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 65 (termino_2 -> timesop termino .)


state 184

    (53) expresion_2 -> relop exp .

    RPAREN          reduce using rule 53 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 53 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 53 (expresion_2 -> relop exp .)


state 185

    (74) var_cte_2 -> LBRACKET exp . var_cte_3
    (76) var_cte_3 -> . RBRACKET
    (77) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 210
    COMMA           shift and go to state 211

    var_cte_3                      shift and go to state 209

state 186

    (78) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    PERCENT         reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 78 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 78 (factor -> LPAREN expresion RPAREN .)


state 187

    (62) exp_2 -> addop exp .

    GREATER         reduce using rule 62 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 62 (exp_2 -> addop exp .)
    LESS            reduce using rule 62 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 62 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 62 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 62 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 62 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 62 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 62 (exp_2 -> addop exp .)
    COMMA           reduce using rule 62 (exp_2 -> addop exp .)


state 188

    (81) condicion -> condicion_id LPAREN expresion RPAREN bloque . condicion_2
    (83) condicion_2 -> . condicion_end
    (84) condicion_2 -> . ELSE bloque condicion_end
    (85) condicion_end -> . END

    ELSE            shift and go to state 215
    END             shift and go to state 212

    condicion_end                  shift and go to state 213
    condicion_2                    shift and go to state 214

state 189

    (107) for -> for_init LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 216


state 190

    (89) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 89 (accion_params -> LPAREN accion_params_2 .)


state 191

    (92) accion_params_cte -> var_cte . accion_params_cte_2
    (93) accion_params_cte_2 -> . COMMA accion_params_cte
    (94) accion_params_cte_2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 218
    RPAREN          reduce using rule 129 (empty -> .)

    empty                          shift and go to state 217
    accion_params_cte_2            shift and go to state 219

state 192

    (90) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 220


state 193

    (91) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 91 (accion_params_2 -> RPAREN .)


state 194

    (88) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 88 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 195

    (27) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 221


state 196

    (25) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . expresion
    (52) expresion -> . exp expresion_2
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    expresion                      shift and go to state 222
    factor                         shift and go to state 94
    llamada                        shift and go to state 105
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 98
    addop                          shift and go to state 104

state 197

    (44) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 44 (llamada_exp2 -> COMMA llamada_exp .)


state 198

    (49) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 49 (def_array_cte -> var_cte def_array_cte_2 .)


state 199

    (50) def_array_cte_2 -> COMMA . def_array_cte
    (49) def_array_cte -> . var_cte def_array_cte_2
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    def_array_cte                  shift and go to state 223
    var_cte                        shift and go to state 176
    llamada                        shift and go to state 105

state 200

    (51) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 51 (def_array_cte_2 -> empty .)


state 201

    (47) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 47 (def_array_2 -> def_array_cte RBRACKET .)


state 202

    (33) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 224


state 203

    (34) array_2 -> empty .

    GREATER         reduce using rule 34 (array_2 -> empty .)


state 204

    (32) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 225


state 205

    (28) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 206

    (115) funcion_2 -> RETURN expresion SEMICOLON funcion_end .

    DEF             reduce using rule 115 (funcion_2 -> RETURN expresion SEMICOLON funcion_end .)


state 207

    (110) while -> while_init LPAREN expresion RPAREN bloque while_end .

    ID              reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    DRAW            reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    IF              reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    INT             reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    FLOAT           reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    BOOLEAN         reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    FOR             reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    WHILE           reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    ARRAY           reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    END             reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    RETURN          reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    ELSE            reduce using rule 110 (while -> while_init LPAREN expresion RPAREN bloque while_end .)


state 208

    (112) while_end -> END .

    ID              reduce using rule 112 (while_end -> END .)
    DRAW            reduce using rule 112 (while_end -> END .)
    IF              reduce using rule 112 (while_end -> END .)
    INT             reduce using rule 112 (while_end -> END .)
    FLOAT           reduce using rule 112 (while_end -> END .)
    BOOLEAN         reduce using rule 112 (while_end -> END .)
    FOR             reduce using rule 112 (while_end -> END .)
    WHILE           reduce using rule 112 (while_end -> END .)
    ARRAY           reduce using rule 112 (while_end -> END .)
    END             reduce using rule 112 (while_end -> END .)
    RETURN          reduce using rule 112 (while_end -> END .)
    ELSE            reduce using rule 112 (while_end -> END .)


state 209

    (74) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 74 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 210

    (76) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 76 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 76 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 76 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 76 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 76 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 76 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 76 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 76 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 76 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 76 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 76 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 76 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 76 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 76 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 76 (var_cte_3 -> RBRACKET .)


state 211

    (77) var_cte_3 -> COMMA . exp RBRACKET
    (61) exp -> . termino exp_2
    (64) termino -> . factor termino_2
    (78) factor -> . LPAREN expresion RPAREN
    (79) factor -> . addop var_cte
    (80) factor -> . var_cte
    (124) addop -> . PLUS
    (125) addop -> . MINUS
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    LPAREN          shift and go to state 100
    PLUS            shift and go to state 106
    MINUS           shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    factor                         shift and go to state 94
    var_cte                        shift and go to state 101
    termino                        shift and go to state 102
    exp                            shift and go to state 227
    addop                          shift and go to state 104
    llamada                        shift and go to state 105

state 212

    (85) condicion_end -> END .

    ID              reduce using rule 85 (condicion_end -> END .)
    DRAW            reduce using rule 85 (condicion_end -> END .)
    IF              reduce using rule 85 (condicion_end -> END .)
    INT             reduce using rule 85 (condicion_end -> END .)
    FLOAT           reduce using rule 85 (condicion_end -> END .)
    BOOLEAN         reduce using rule 85 (condicion_end -> END .)
    FOR             reduce using rule 85 (condicion_end -> END .)
    WHILE           reduce using rule 85 (condicion_end -> END .)
    ARRAY           reduce using rule 85 (condicion_end -> END .)
    END             reduce using rule 85 (condicion_end -> END .)
    RETURN          reduce using rule 85 (condicion_end -> END .)
    ELSE            reduce using rule 85 (condicion_end -> END .)


state 213

    (83) condicion_2 -> condicion_end .

    ID              reduce using rule 83 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 83 (condicion_2 -> condicion_end .)
    IF              reduce using rule 83 (condicion_2 -> condicion_end .)
    INT             reduce using rule 83 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 83 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 83 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 83 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 83 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 83 (condicion_2 -> condicion_end .)
    END             reduce using rule 83 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 83 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 83 (condicion_2 -> condicion_end .)


state 214

    (81) condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .

    ID              reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    IF              reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    INT             reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    FOR             reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    END             reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 81 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)


state 215

    (84) condicion_2 -> ELSE . bloque condicion_end
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    array                          shift and go to state 16
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    bloque                         shift and go to state 228
    llamada_id                     shift and go to state 40
    vars                           shift and go to state 43
    for                            shift and go to state 32
    while_init                     shift and go to state 25
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    llamada                        shift and go to state 36

state 216

    (107) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 229


state 217

    (94) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 94 (accion_params_cte_2 -> empty .)


state 218

    (93) accion_params_cte_2 -> COMMA . accion_params_cte
    (92) accion_params_cte -> . var_cte accion_params_cte_2
    (67) var_cte -> . var_cte_1
    (68) var_cte -> . CTE_I
    (69) var_cte -> . CTE_F
    (70) var_cte -> . TRUE
    (71) var_cte -> . FALSE
    (72) var_cte -> . llamada
    (73) var_cte_1 -> . ID var_cte_2
    (39) llamada -> . llamada_id LPAREN llamada_2
    (40) llamada_id -> . ID

    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 92
    TRUE            shift and go to state 103
    FALSE           shift and go to state 96
    ID              shift and go to state 99

    var_cte_1                      shift and go to state 91
    llamada_id                     shift and go to state 40
    accion_params_cte              shift and go to state 230
    var_cte                        shift and go to state 191
    llamada                        shift and go to state 105

state 219

    (92) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 92 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 220

    (90) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 90 (accion_params_2 -> accion_params_cte RPAREN .)


state 221

    (27) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 27 (asignacion_3 -> COMMA exp RBRACKET .)


state 222

    (25) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .

    SEMICOLON       reduce using rule 25 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .)


state 223

    (50) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 50 (def_array_cte_2 -> COMMA def_array_cte .)


state 224

    (33) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 33 (array_2 -> COMMA CTE_I .)


state 225

    (32) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 32 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 226

    (28) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    GLOBAL          reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 28 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 227

    (77) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 231


state 228

    (84) condicion_2 -> ELSE bloque . condicion_end
    (85) condicion_end -> . END

    END             shift and go to state 212

    condicion_end                  shift and go to state 232

state 229

    (107) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque for_end

    RPAREN          shift and go to state 233


state 230

    (93) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 93 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 231

    (77) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 77 (var_cte_3 -> COMMA exp RBRACKET .)


state 232

    (84) condicion_2 -> ELSE bloque condicion_end .

    ID              reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    DRAW            reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    IF              reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    INT             reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    FLOAT           reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    BOOLEAN         reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    FOR             reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    WHILE           reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    ARRAY           reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    END             reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    RETURN          reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)
    ELSE            reduce using rule 84 (condicion_2 -> ELSE bloque condicion_end .)


state 233

    (107) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque for_end
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (129) empty -> .
    (22) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (81) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (86) ciclo -> . for
    (87) ciclo -> . while
    (88) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (28) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (29) vars -> . data_type ID vars2
    (30) vars -> . vars_aux
    (39) llamada -> . llamada_id LPAREN llamada_2
    (23) asignacion_id -> . ID
    (82) condicion_id -> . IF
    (107) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (110) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (31) vars_aux -> . array ID vars3
    (40) llamada_id -> . ID
    (108) for_init -> . FOR
    (111) while_init -> . WHILE
    (32) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 129 (empty -> .)
    ID              shift and go to state 30
    DRAW            shift and go to state 19
    IF              shift and go to state 35
    INT             shift and go to state 11
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 12
    FOR             shift and go to state 37
    WHILE           shift and go to state 31
    ARRAY           shift and go to state 17

    while                          shift and go to state 24
    vars_aux                       shift and go to state 14
    asignacion_id                  shift and go to state 38
    data_type                      shift and go to state 15
    array                          shift and go to state 16
    estatuto                       shift and go to state 26
    condicion_id                   shift and go to state 27
    for_init                       shift and go to state 28
    accion                         shift and go to state 29
    condicion                      shift and go to state 41
    bloque                         shift and go to state 234
    llamada_id                     shift and go to state 40
    vars                           shift and go to state 43
    for                            shift and go to state 32
    while_init                     shift and go to state 25
    empty                          shift and go to state 33
    ciclo                          shift and go to state 39
    asignacion                     shift and go to state 34
    llamada                        shift and go to state 36

state 234

    (107) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . for_end
    (109) for_end -> . END

    END             shift and go to state 236

    for_end                        shift and go to state 235

state 235

    (107) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .

    ID              reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    DRAW            reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    IF              reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    INT             reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FLOAT           reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    BOOLEAN         reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FOR             reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    WHILE           reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ARRAY           reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    END             reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    RETURN          reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ELSE            reduce using rule 107 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)


state 236

    (109) for_end -> END .

    ID              reduce using rule 109 (for_end -> END .)
    DRAW            reduce using rule 109 (for_end -> END .)
    IF              reduce using rule 109 (for_end -> END .)
    INT             reduce using rule 109 (for_end -> END .)
    FLOAT           reduce using rule 109 (for_end -> END .)
    BOOLEAN         reduce using rule 109 (for_end -> END .)
    FOR             reduce using rule 109 (for_end -> END .)
    WHILE           reduce using rule 109 (for_end -> END .)
    ARRAY           reduce using rule 109 (for_end -> END .)
    END             reduce using rule 109 (for_end -> END .)
    RETURN          reduce using rule 109 (for_end -> END .)
    ELSE            reduce using rule 109 (for_end -> END .)

