Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones programa_end
Rule 2     programa -> funciones programa_end
Rule 3     programa_end -> empty
Rule 4     funciones -> funciones_2 main
Rule 5     funciones_2 -> funcion funciones_2
Rule 6     funciones_2 -> empty
Rule 7     globales -> global_1 vars globales_2
Rule 8     globales_2 -> global_1 vars globales_2
Rule 9     globales_2 -> empty
Rule 10    global_1 -> GLOBAL
Rule 11    bloque -> estatuto bloque
Rule 12    bloque -> empty
Rule 13    data_type -> INT
Rule 14    data_type -> FLOAT
Rule 15    data_type -> BOOLEAN
Rule 16    data_type_func -> INT
Rule 17    data_type_func -> FLOAT
Rule 18    data_type_func -> BOOLEAN
Rule 19    data_type_func -> VOID
Rule 20    main -> main_1 bloque END
Rule 21    main_1 -> MAIN LPAREN RPAREN
Rule 22    estatuto -> asignacion
Rule 23    estatuto -> condicion
Rule 24    estatuto -> ciclo
Rule 25    estatuto -> accion
Rule 26    estatuto -> vars
Rule 27    estatuto -> llamada SEMICOLON
Rule 28    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 29    asignacion_id -> ID
Rule 30    asignacion_2 -> asignacion_equal super_exp
Rule 31    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp
Rule 32    asignacion_equal -> EQUAL
Rule 33    asignacion_3 -> RBRACKET
Rule 34    asignacion_3 -> COMMA exp RBRACKET
Rule 35    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 36    vars -> vars_id vars2
Rule 37    vars -> vars_aux
Rule 38    vars_id -> data_type ID
Rule 39    vars_aux -> array ID vars3
Rule 40    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 41    array_2 -> COMMA CTE_I
Rule 42    array_2 -> empty
Rule 43    vars2 -> asignacion_equal super_exp SEMICOLON
Rule 44    vars2 -> SEMICOLON
Rule 45    vars3 -> EQUAL def_array SEMICOLON
Rule 46    vars3 -> SEMICOLON
Rule 47    llamada -> llamada_id LPAREN llamada_2
Rule 48    llamada_id -> ID
Rule 49    llamada_2 -> llamada_exp RPAREN
Rule 50    llamada_2 -> RPAREN
Rule 51    llamada_exp -> super_exp llamada_exp2
Rule 52    llamada_exp2 -> COMMA llamada_exp
Rule 53    llamada_exp2 -> empty
Rule 54    def_array -> LBRACKET def_array_2
Rule 55    def_array_2 -> def_array_cte RBRACKET
Rule 56    def_array_2 -> RBRACKET
Rule 57    def_array_cte -> var_cte def_array_cte_2
Rule 58    def_array_cte_2 -> COMMA def_array_cte
Rule 59    def_array_cte_2 -> empty
Rule 60    super_exp -> expresion super_exp_2
Rule 61    super_exp_2 -> logicop super_exp_2
Rule 62    super_exp_2 -> empty
Rule 63    expresion -> exp expresion_2
Rule 64    expresion_2 -> relop exp
Rule 65    expresion_2 -> empty
Rule 66    relop -> GREATER
Rule 67    relop -> GREATEREQUAL
Rule 68    relop -> LESS
Rule 69    relop -> LESSEQUAL
Rule 70    relop -> DEQUAL
Rule 71    relop -> DISTINT
Rule 72    exp -> termino exp_2
Rule 73    exp_2 -> addop exp
Rule 74    exp_2 -> empty
Rule 75    termino -> factor termino_2
Rule 76    termino_2 -> timesop termino
Rule 77    termino_2 -> empty
Rule 78    var_cte -> var_cte_1
Rule 79    var_cte -> var_cte_i
Rule 80    var_cte -> var_cte_f
Rule 81    var_cte -> var_cte_b
Rule 82    var_cte -> llamada
Rule 83    var_cte_i -> CTE_I
Rule 84    var_cte_f -> CTE_F
Rule 85    var_cte_b -> TRUE
Rule 86    var_cte_b -> FALSE
Rule 87    var_cte_1 -> ID var_cte_2
Rule 88    var_cte_2 -> LBRACKET exp var_cte_3
Rule 89    var_cte_2 -> empty
Rule 90    var_cte_3 -> RBRACKET
Rule 91    var_cte_3 -> COMMA exp RBRACKET
Rule 92    factor -> lparen_factor super_exp rparen_factor
Rule 93    factor -> addop var_cte
Rule 94    factor -> var_cte
Rule 95    lparen_factor -> LPAREN
Rule 96    rparen_factor -> RPAREN
Rule 97    condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
Rule 98    rparen_condicion -> RPAREN
Rule 99    condicion_id -> IF
Rule 100   condicion_2 -> condicion_end
Rule 101   condicion_2 -> condicion_else bloque condicion_end
Rule 102   condicion_else -> ELSE
Rule 103   condicion_end -> END
Rule 104   ciclo -> for
Rule 105   ciclo -> while
Rule 106   accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 107   accion_params -> LPAREN accion_params_2
Rule 108   accion_params_2 -> accion_params_cte RPAREN
Rule 109   accion_params_2 -> RPAREN
Rule 110   accion_params_cte -> var_cte accion_params_cte_2
Rule 111   accion_params_cte_2 -> COMMA accion_params_cte
Rule 112   accion_params_cte_2 -> empty
Rule 113   accion_nombre -> SETPOSITION
Rule 114   accion_nombre -> CIRCLE
Rule 115   accion_nombre -> RIGHT
Rule 116   accion_nombre -> LEFT
Rule 117   accion_nombre -> HIDE
Rule 118   accion_nombre -> SQUARE
Rule 119   accion_nombre -> CLEAR
Rule 120   accion_nombre -> SHOW
Rule 121   accion_nombre -> BACK
Rule 122   accion_nombre -> SPEED
Rule 123   accion_nombre -> FORWARD
Rule 124   accion_nombre -> SETCOLOR
Rule 125   for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
Rule 126   for_exp -> exp
Rule 127   for_exp2 -> exp
Rule 128   for_rparen -> RPAREN
Rule 129   for_init -> FOR
Rule 130   for_end -> END
Rule 131   while -> while_init LPAREN super_exp rparen_while bloque while_end
Rule 132   while_init -> WHILE
Rule 133   rparen_while -> RPAREN
Rule 134   while_end -> END
Rule 135   funcion -> funcion_1 var_local bloque funcion_2
Rule 136   funcion_1 -> DEF data_type_func ID
Rule 137   funcion_2 -> RETURN super_exp SEMICOLON funcion_end
Rule 138   funcion_2 -> funcion_end
Rule 139   funcion_end -> END
Rule 140   var_local -> LPAREN var_local_2 RPAREN
Rule 141   var_local_2 -> var_local_2_1 var_local_3
Rule 142   var_local_2 -> empty
Rule 143   var_local_2_1 -> data_type ID
Rule 144   var_local_3 -> COMMA var_local_2
Rule 145   var_local_3 -> empty
Rule 146   addop -> PLUS
Rule 147   addop -> MINUS
Rule 148   timesop -> TIMES
Rule 149   timesop -> DIVIDE
Rule 150   timesop -> PERCENT
Rule 151   logicop -> AND
Rule 152   logicop -> OR
Rule 153   empty -> <empty>

Terminals, with rules where they appear

AND                  : 151
ARRAY                : 40
BACK                 : 121
BOOLEAN              : 15 18
CIRCLE               : 114
CLEAR                : 119
COMMA                : 34 40 41 52 58 91 111 125 125 144
CTE_F                : 84
CTE_I                : 40 41 83
DEF                  : 136
DEQUAL               : 70
DISTINT              : 71
DIVIDE               : 149
DRAW                 : 35
ELSE                 : 102
END                  : 20 103 130 134 139
EQUAL                : 31 32 35 45
FALSE                : 86
FLOAT                : 14 17
FOR                  : 129
FORWARD              : 123
GLOBAL               : 10
GREATER              : 40 66
GREATEREQUAL         : 67
HIDE                 : 117
ID                   : 29 35 38 39 48 87 106 136 143
IF                   : 99
INT                  : 13 16
LBRACKET             : 31 54 88
LEFT                 : 116
LESS                 : 40 68
LESSEQUAL            : 69
LPAREN               : 21 35 47 95 97 107 125 131 140
MAIN                 : 21
MINUS                : 147
NEWDRAW              : 35
OR                   : 152
PERCENT              : 150
PLUS                 : 146
POINT                : 106
RBRACKET             : 33 34 55 56 90 91
RETURN               : 137
RIGHT                : 115
RPAREN               : 21 35 49 50 96 98 108 109 128 133 140
SEMICOLON            : 27 28 35 43 44 45 46 106 137
SETCOLOR             : 124
SETPOSITION          : 113
SHOW                 : 120
SPEED                : 122
SQUARE               : 118
TIMES                : 148
TRUE                 : 85
VOID                 : 19
WHILE                : 132
error                : 

Nonterminals, with rules where they appear

accion               : 25
accion_nombre        : 106
accion_params        : 106
accion_params_2      : 107
accion_params_cte    : 108 111
accion_params_cte_2  : 110
addop                : 73 93
array                : 39
array_2              : 40
asignacion           : 22
asignacion_2         : 28
asignacion_3         : 31
asignacion_equal     : 30 43
asignacion_id        : 28
bloque               : 11 20 97 101 125 131 135
ciclo                : 24
condicion            : 23
condicion_2          : 97
condicion_else       : 101
condicion_end        : 100 101
condicion_id         : 97
data_type            : 38 40 143
data_type_func       : 136
def_array            : 45
def_array_2          : 54
def_array_cte        : 55 58
def_array_cte_2      : 57
empty                : 3 6 9 12 42 53 59 62 65 74 77 89 112 142 145
estatuto             : 11
exp                  : 31 34 63 64 73 88 91 126 127
exp_2                : 72
expresion            : 60
expresion_2          : 63
factor               : 75
for                  : 104
for_end              : 125
for_exp              : 125 125
for_exp2             : 125
for_init             : 125
for_rparen           : 125
funcion              : 5
funcion_1            : 135
funcion_2            : 135
funcion_end          : 137 138
funciones            : 1 2
funciones_2          : 4 5
global_1             : 7 8
globales             : 1
globales_2           : 7 8
llamada              : 27 82
llamada_2            : 47
llamada_exp          : 49 52
llamada_exp2         : 51
llamada_id           : 47
logicop              : 61
lparen_factor        : 92
main                 : 4
main_1               : 20
programa             : 0
programa_end         : 1 2
relop                : 64
rparen_condicion     : 97
rparen_factor        : 92
rparen_while         : 131
super_exp            : 30 31 43 51 92 97 131 137
super_exp_2          : 60 61
termino              : 72 76
termino_2            : 75
timesop              : 76
var_cte              : 57 93 94 110
var_cte_1            : 78
var_cte_2            : 87
var_cte_3            : 88
var_cte_b            : 81
var_cte_f            : 80
var_cte_i            : 79
var_local            : 135
var_local_2          : 140 144
var_local_2_1        : 141
var_local_3          : 141
vars                 : 7 8 26
vars2                : 36
vars3                : 39
vars_aux             : 37
vars_id              : 36
while                : 105
while_end            : 131
while_init           : 131

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones programa_end
    (2) programa -> . funciones programa_end
    (7) globales -> . global_1 vars globales_2
    (4) funciones -> . funciones_2 main
    (10) global_1 -> . GLOBAL
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (135) funcion -> . funcion_1 var_local bloque funcion_2
    (153) empty -> .
    (136) funcion_1 -> . DEF data_type_func ID

    GLOBAL          shift and go to state 6
    MAIN            reduce using rule 153 (empty -> .)
    DEF             shift and go to state 10

    programa                       shift and go to state 1
    globales                       shift and go to state 2
    funciones                      shift and go to state 3
    global_1                       shift and go to state 4
    funciones_2                    shift and go to state 5
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> globales . funciones programa_end
    (4) funciones -> . funciones_2 main
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (135) funcion -> . funcion_1 var_local bloque funcion_2
    (153) empty -> .
    (136) funcion_1 -> . DEF data_type_func ID

    MAIN            reduce using rule 153 (empty -> .)
    DEF             shift and go to state 10

    funciones                      shift and go to state 11
    funciones_2                    shift and go to state 5
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 3

    (2) programa -> funciones . programa_end
    (3) programa_end -> . empty
    (153) empty -> .

    $end            reduce using rule 153 (empty -> .)

    programa_end                   shift and go to state 12
    empty                          shift and go to state 13

state 4

    (7) globales -> global_1 . vars globales_2
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    vars                           shift and go to state 14
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 5

    (4) funciones -> funciones_2 . main
    (20) main -> . main_1 bloque END
    (21) main_1 -> . MAIN LPAREN RPAREN

    MAIN            shift and go to state 26

    main                           shift and go to state 24
    main_1                         shift and go to state 25

state 6

    (10) global_1 -> GLOBAL .

    DRAW            reduce using rule 10 (global_1 -> GLOBAL .)
    INT             reduce using rule 10 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 10 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 10 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 10 (global_1 -> GLOBAL .)


state 7

    (5) funciones_2 -> funcion . funciones_2
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (135) funcion -> . funcion_1 var_local bloque funcion_2
    (153) empty -> .
    (136) funcion_1 -> . DEF data_type_func ID

    MAIN            reduce using rule 153 (empty -> .)
    DEF             shift and go to state 10

    funcion                        shift and go to state 7
    funciones_2                    shift and go to state 27
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 8

    (6) funciones_2 -> empty .

    MAIN            reduce using rule 6 (funciones_2 -> empty .)


state 9

    (135) funcion -> funcion_1 . var_local bloque funcion_2
    (140) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 29

    var_local                      shift and go to state 28

state 10

    (136) funcion_1 -> DEF . data_type_func ID
    (16) data_type_func -> . INT
    (17) data_type_func -> . FLOAT
    (18) data_type_func -> . BOOLEAN
    (19) data_type_func -> . VOID

    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOLEAN         shift and go to state 33
    VOID            shift and go to state 34

    data_type_func                 shift and go to state 30

state 11

    (1) programa -> globales funciones . programa_end
    (3) programa_end -> . empty
    (153) empty -> .

    $end            reduce using rule 153 (empty -> .)

    programa_end                   shift and go to state 35
    empty                          shift and go to state 13

state 12

    (2) programa -> funciones programa_end .

    $end            reduce using rule 2 (programa -> funciones programa_end .)


state 13

    (3) programa_end -> empty .

    $end            reduce using rule 3 (programa_end -> empty .)


state 14

    (7) globales -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (153) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 153 (empty -> .)
    MAIN            reduce using rule 153 (empty -> .)

    global_1                       shift and go to state 36
    globales_2                     shift and go to state 37
    empty                          shift and go to state 38

state 15

    (35) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 39


state 16

    (36) vars -> vars_id . vars2
    (43) vars2 -> . asignacion_equal super_exp SEMICOLON
    (44) vars2 -> . SEMICOLON
    (32) asignacion_equal -> . EQUAL

    SEMICOLON       shift and go to state 42
    EQUAL           shift and go to state 43

    vars2                          shift and go to state 40
    asignacion_equal               shift and go to state 41

state 17

    (37) vars -> vars_aux .

    GLOBAL          reduce using rule 37 (vars -> vars_aux .)
    DEF             reduce using rule 37 (vars -> vars_aux .)
    MAIN            reduce using rule 37 (vars -> vars_aux .)
    ID              reduce using rule 37 (vars -> vars_aux .)
    DRAW            reduce using rule 37 (vars -> vars_aux .)
    IF              reduce using rule 37 (vars -> vars_aux .)
    FOR             reduce using rule 37 (vars -> vars_aux .)
    WHILE           reduce using rule 37 (vars -> vars_aux .)
    INT             reduce using rule 37 (vars -> vars_aux .)
    FLOAT           reduce using rule 37 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 37 (vars -> vars_aux .)
    ARRAY           reduce using rule 37 (vars -> vars_aux .)
    END             reduce using rule 37 (vars -> vars_aux .)
    RETURN          reduce using rule 37 (vars -> vars_aux .)
    ELSE            reduce using rule 37 (vars -> vars_aux .)


state 18

    (38) vars_id -> data_type . ID

    ID              shift and go to state 44


state 19

    (39) vars_aux -> array . ID vars3

    ID              shift and go to state 45


state 20

    (13) data_type -> INT .

    ID              reduce using rule 13 (data_type -> INT .)
    COMMA           reduce using rule 13 (data_type -> INT .)


state 21

    (14) data_type -> FLOAT .

    ID              reduce using rule 14 (data_type -> FLOAT .)
    COMMA           reduce using rule 14 (data_type -> FLOAT .)


state 22

    (15) data_type -> BOOLEAN .

    ID              reduce using rule 15 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 15 (data_type -> BOOLEAN .)


state 23

    (40) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 46


state 24

    (4) funciones -> funciones_2 main .

    $end            reduce using rule 4 (funciones -> funciones_2 main .)


state 25

    (20) main -> main_1 . bloque END
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    bloque                         shift and go to state 47
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 26

    (21) main_1 -> MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 67


state 27

    (5) funciones_2 -> funcion funciones_2 .

    MAIN            reduce using rule 5 (funciones_2 -> funcion funciones_2 .)


state 28

    (135) funcion -> funcion_1 var_local . bloque funcion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 153 (empty -> .)
    END             reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    bloque                         shift and go to state 68
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 29

    (140) var_local -> LPAREN . var_local_2 RPAREN
    (141) var_local_2 -> . var_local_2_1 var_local_3
    (142) var_local_2 -> . empty
    (143) var_local_2_1 -> . data_type ID
    (153) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 153 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    var_local_2                    shift and go to state 69
    var_local_2_1                  shift and go to state 70
    empty                          shift and go to state 71
    data_type                      shift and go to state 72

state 30

    (136) funcion_1 -> DEF data_type_func . ID

    ID              shift and go to state 73


state 31

    (16) data_type_func -> INT .

    ID              reduce using rule 16 (data_type_func -> INT .)


state 32

    (17) data_type_func -> FLOAT .

    ID              reduce using rule 17 (data_type_func -> FLOAT .)


state 33

    (18) data_type_func -> BOOLEAN .

    ID              reduce using rule 18 (data_type_func -> BOOLEAN .)


state 34

    (19) data_type_func -> VOID .

    ID              reduce using rule 19 (data_type_func -> VOID .)


state 35

    (1) programa -> globales funciones programa_end .

    $end            reduce using rule 1 (programa -> globales funciones programa_end .)


state 36

    (8) globales_2 -> global_1 . vars globales_2
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    vars                           shift and go to state 74
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 37

    (7) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 7 (globales -> global_1 vars globales_2 .)
    MAIN            reduce using rule 7 (globales -> global_1 vars globales_2 .)


state 38

    (9) globales_2 -> empty .

    DEF             reduce using rule 9 (globales_2 -> empty .)
    MAIN            reduce using rule 9 (globales_2 -> empty .)


state 39

    (35) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 75


state 40

    (36) vars -> vars_id vars2 .

    GLOBAL          reduce using rule 36 (vars -> vars_id vars2 .)
    DEF             reduce using rule 36 (vars -> vars_id vars2 .)
    MAIN            reduce using rule 36 (vars -> vars_id vars2 .)
    ID              reduce using rule 36 (vars -> vars_id vars2 .)
    DRAW            reduce using rule 36 (vars -> vars_id vars2 .)
    IF              reduce using rule 36 (vars -> vars_id vars2 .)
    FOR             reduce using rule 36 (vars -> vars_id vars2 .)
    WHILE           reduce using rule 36 (vars -> vars_id vars2 .)
    INT             reduce using rule 36 (vars -> vars_id vars2 .)
    FLOAT           reduce using rule 36 (vars -> vars_id vars2 .)
    BOOLEAN         reduce using rule 36 (vars -> vars_id vars2 .)
    ARRAY           reduce using rule 36 (vars -> vars_id vars2 .)
    END             reduce using rule 36 (vars -> vars_id vars2 .)
    RETURN          reduce using rule 36 (vars -> vars_id vars2 .)
    ELSE            reduce using rule 36 (vars -> vars_id vars2 .)


state 41

    (43) vars2 -> asignacion_equal . super_exp SEMICOLON
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    super_exp                      shift and go to state 76
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 42

    (44) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 44 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 44 (vars2 -> SEMICOLON .)
    MAIN            reduce using rule 44 (vars2 -> SEMICOLON .)
    ID              reduce using rule 44 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 44 (vars2 -> SEMICOLON .)
    IF              reduce using rule 44 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 44 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 44 (vars2 -> SEMICOLON .)
    INT             reduce using rule 44 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 44 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 44 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 44 (vars2 -> SEMICOLON .)
    END             reduce using rule 44 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 44 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 44 (vars2 -> SEMICOLON .)


state 43

    (32) asignacion_equal -> EQUAL .

    LPAREN          reduce using rule 32 (asignacion_equal -> EQUAL .)
    PLUS            reduce using rule 32 (asignacion_equal -> EQUAL .)
    MINUS           reduce using rule 32 (asignacion_equal -> EQUAL .)
    ID              reduce using rule 32 (asignacion_equal -> EQUAL .)
    CTE_I           reduce using rule 32 (asignacion_equal -> EQUAL .)
    CTE_F           reduce using rule 32 (asignacion_equal -> EQUAL .)
    TRUE            reduce using rule 32 (asignacion_equal -> EQUAL .)
    FALSE           reduce using rule 32 (asignacion_equal -> EQUAL .)


state 44

    (38) vars_id -> data_type ID .

    SEMICOLON       reduce using rule 38 (vars_id -> data_type ID .)
    EQUAL           reduce using rule 38 (vars_id -> data_type ID .)


state 45

    (39) vars_aux -> array ID . vars3
    (45) vars3 -> . EQUAL def_array SEMICOLON
    (46) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 98
    SEMICOLON       shift and go to state 99

    vars3                          shift and go to state 97

state 46

    (40) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    data_type                      shift and go to state 100

state 47

    (20) main -> main_1 bloque . END

    END             shift and go to state 101


state 48

    (11) bloque -> estatuto . bloque
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 153 (empty -> .)
    RETURN          reduce using rule 153 (empty -> .)
    ELSE            reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    estatuto                       shift and go to state 48
    bloque                         shift and go to state 102
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 49

    (12) bloque -> empty .

    END             reduce using rule 12 (bloque -> empty .)
    RETURN          reduce using rule 12 (bloque -> empty .)
    ELSE            reduce using rule 12 (bloque -> empty .)


state 50

    (22) estatuto -> asignacion .

    ID              reduce using rule 22 (estatuto -> asignacion .)
    DRAW            reduce using rule 22 (estatuto -> asignacion .)
    IF              reduce using rule 22 (estatuto -> asignacion .)
    FOR             reduce using rule 22 (estatuto -> asignacion .)
    WHILE           reduce using rule 22 (estatuto -> asignacion .)
    INT             reduce using rule 22 (estatuto -> asignacion .)
    FLOAT           reduce using rule 22 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 22 (estatuto -> asignacion .)
    ARRAY           reduce using rule 22 (estatuto -> asignacion .)
    END             reduce using rule 22 (estatuto -> asignacion .)
    RETURN          reduce using rule 22 (estatuto -> asignacion .)
    ELSE            reduce using rule 22 (estatuto -> asignacion .)


state 51

    (23) estatuto -> condicion .

    ID              reduce using rule 23 (estatuto -> condicion .)
    DRAW            reduce using rule 23 (estatuto -> condicion .)
    IF              reduce using rule 23 (estatuto -> condicion .)
    FOR             reduce using rule 23 (estatuto -> condicion .)
    WHILE           reduce using rule 23 (estatuto -> condicion .)
    INT             reduce using rule 23 (estatuto -> condicion .)
    FLOAT           reduce using rule 23 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 23 (estatuto -> condicion .)
    ARRAY           reduce using rule 23 (estatuto -> condicion .)
    END             reduce using rule 23 (estatuto -> condicion .)
    RETURN          reduce using rule 23 (estatuto -> condicion .)
    ELSE            reduce using rule 23 (estatuto -> condicion .)


state 52

    (24) estatuto -> ciclo .

    ID              reduce using rule 24 (estatuto -> ciclo .)
    DRAW            reduce using rule 24 (estatuto -> ciclo .)
    IF              reduce using rule 24 (estatuto -> ciclo .)
    FOR             reduce using rule 24 (estatuto -> ciclo .)
    WHILE           reduce using rule 24 (estatuto -> ciclo .)
    INT             reduce using rule 24 (estatuto -> ciclo .)
    FLOAT           reduce using rule 24 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 24 (estatuto -> ciclo .)
    ARRAY           reduce using rule 24 (estatuto -> ciclo .)
    END             reduce using rule 24 (estatuto -> ciclo .)
    RETURN          reduce using rule 24 (estatuto -> ciclo .)
    ELSE            reduce using rule 24 (estatuto -> ciclo .)


state 53

    (25) estatuto -> accion .

    ID              reduce using rule 25 (estatuto -> accion .)
    DRAW            reduce using rule 25 (estatuto -> accion .)
    IF              reduce using rule 25 (estatuto -> accion .)
    FOR             reduce using rule 25 (estatuto -> accion .)
    WHILE           reduce using rule 25 (estatuto -> accion .)
    INT             reduce using rule 25 (estatuto -> accion .)
    FLOAT           reduce using rule 25 (estatuto -> accion .)
    BOOLEAN         reduce using rule 25 (estatuto -> accion .)
    ARRAY           reduce using rule 25 (estatuto -> accion .)
    END             reduce using rule 25 (estatuto -> accion .)
    RETURN          reduce using rule 25 (estatuto -> accion .)
    ELSE            reduce using rule 25 (estatuto -> accion .)


state 54

    (26) estatuto -> vars .

    ID              reduce using rule 26 (estatuto -> vars .)
    DRAW            reduce using rule 26 (estatuto -> vars .)
    IF              reduce using rule 26 (estatuto -> vars .)
    FOR             reduce using rule 26 (estatuto -> vars .)
    WHILE           reduce using rule 26 (estatuto -> vars .)
    INT             reduce using rule 26 (estatuto -> vars .)
    FLOAT           reduce using rule 26 (estatuto -> vars .)
    BOOLEAN         reduce using rule 26 (estatuto -> vars .)
    ARRAY           reduce using rule 26 (estatuto -> vars .)
    END             reduce using rule 26 (estatuto -> vars .)
    RETURN          reduce using rule 26 (estatuto -> vars .)
    ELSE            reduce using rule 26 (estatuto -> vars .)


state 55

    (27) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 103


state 56

    (28) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (30) asignacion_2 -> . asignacion_equal super_exp
    (31) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL super_exp
    (32) asignacion_equal -> . EQUAL

    LBRACKET        shift and go to state 106
    EQUAL           shift and go to state 43

    asignacion_2                   shift and go to state 104
    asignacion_equal               shift and go to state 105

state 57

    (97) condicion -> condicion_id . LPAREN super_exp rparen_condicion bloque condicion_2

    LPAREN          shift and go to state 107


state 58

    (104) ciclo -> for .

    ID              reduce using rule 104 (ciclo -> for .)
    DRAW            reduce using rule 104 (ciclo -> for .)
    IF              reduce using rule 104 (ciclo -> for .)
    FOR             reduce using rule 104 (ciclo -> for .)
    WHILE           reduce using rule 104 (ciclo -> for .)
    INT             reduce using rule 104 (ciclo -> for .)
    FLOAT           reduce using rule 104 (ciclo -> for .)
    BOOLEAN         reduce using rule 104 (ciclo -> for .)
    ARRAY           reduce using rule 104 (ciclo -> for .)
    END             reduce using rule 104 (ciclo -> for .)
    RETURN          reduce using rule 104 (ciclo -> for .)
    ELSE            reduce using rule 104 (ciclo -> for .)


state 59

    (105) ciclo -> while .

    ID              reduce using rule 105 (ciclo -> while .)
    DRAW            reduce using rule 105 (ciclo -> while .)
    IF              reduce using rule 105 (ciclo -> while .)
    FOR             reduce using rule 105 (ciclo -> while .)
    WHILE           reduce using rule 105 (ciclo -> while .)
    INT             reduce using rule 105 (ciclo -> while .)
    FLOAT           reduce using rule 105 (ciclo -> while .)
    BOOLEAN         reduce using rule 105 (ciclo -> while .)
    ARRAY           reduce using rule 105 (ciclo -> while .)
    END             reduce using rule 105 (ciclo -> while .)
    RETURN          reduce using rule 105 (ciclo -> while .)
    ELSE            reduce using rule 105 (ciclo -> while .)


state 60

    (106) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (29) asignacion_id -> ID .
    (48) llamada_id -> ID .

    POINT           shift and go to state 108
    LBRACKET        reduce using rule 29 (asignacion_id -> ID .)
    EQUAL           reduce using rule 29 (asignacion_id -> ID .)
    LPAREN          reduce using rule 48 (llamada_id -> ID .)


state 61

    (47) llamada -> llamada_id . LPAREN llamada_2

    LPAREN          shift and go to state 109


state 62

    (99) condicion_id -> IF .

    LPAREN          reduce using rule 99 (condicion_id -> IF .)


state 63

    (125) for -> for_init . LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end

    LPAREN          shift and go to state 110


state 64

    (131) while -> while_init . LPAREN super_exp rparen_while bloque while_end

    LPAREN          shift and go to state 111


state 65

    (129) for_init -> FOR .

    LPAREN          reduce using rule 129 (for_init -> FOR .)


state 66

    (132) while_init -> WHILE .

    LPAREN          reduce using rule 132 (while_init -> WHILE .)


state 67

    (21) main_1 -> MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 112


state 68

    (135) funcion -> funcion_1 var_local bloque . funcion_2
    (137) funcion_2 -> . RETURN super_exp SEMICOLON funcion_end
    (138) funcion_2 -> . funcion_end
    (139) funcion_end -> . END

    RETURN          shift and go to state 114
    END             shift and go to state 116

    funcion_2                      shift and go to state 113
    funcion_end                    shift and go to state 115

state 69

    (140) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 117


state 70

    (141) var_local_2 -> var_local_2_1 . var_local_3
    (144) var_local_3 -> . COMMA var_local_2
    (145) var_local_3 -> . empty
    (153) empty -> .

    COMMA           shift and go to state 119
    RPAREN          reduce using rule 153 (empty -> .)

    var_local_3                    shift and go to state 118
    empty                          shift and go to state 120

state 71

    (142) var_local_2 -> empty .

    RPAREN          reduce using rule 142 (var_local_2 -> empty .)


state 72

    (143) var_local_2_1 -> data_type . ID

    ID              shift and go to state 121


state 73

    (136) funcion_1 -> DEF data_type_func ID .

    LPAREN          reduce using rule 136 (funcion_1 -> DEF data_type_func ID .)


state 74

    (8) globales_2 -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (153) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 153 (empty -> .)
    MAIN            reduce using rule 153 (empty -> .)

    global_1                       shift and go to state 36
    globales_2                     shift and go to state 122
    empty                          shift and go to state 38

state 75

    (35) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 123


state 76

    (43) vars2 -> asignacion_equal super_exp . SEMICOLON

    SEMICOLON       shift and go to state 124


state 77

    (60) super_exp -> expresion . super_exp_2
    (61) super_exp_2 -> . logicop super_exp_2
    (62) super_exp_2 -> . empty
    (151) logicop -> . AND
    (152) logicop -> . OR
    (153) empty -> .

    AND             shift and go to state 128
    OR              shift and go to state 129
    SEMICOLON       reduce using rule 153 (empty -> .)
    RPAREN          reduce using rule 153 (empty -> .)
    COMMA           reduce using rule 153 (empty -> .)

    super_exp_2                    shift and go to state 125
    logicop                        shift and go to state 126
    empty                          shift and go to state 127

state 78

    (63) expresion -> exp . expresion_2
    (64) expresion_2 -> . relop exp
    (65) expresion_2 -> . empty
    (66) relop -> . GREATER
    (67) relop -> . GREATEREQUAL
    (68) relop -> . LESS
    (69) relop -> . LESSEQUAL
    (70) relop -> . DEQUAL
    (71) relop -> . DISTINT
    (153) empty -> .

    GREATER         shift and go to state 133
    GREATEREQUAL    shift and go to state 134
    LESS            shift and go to state 135
    LESSEQUAL       shift and go to state 136
    DEQUAL          shift and go to state 137
    DISTINT         shift and go to state 138
    AND             reduce using rule 153 (empty -> .)
    OR              reduce using rule 153 (empty -> .)
    SEMICOLON       reduce using rule 153 (empty -> .)
    RPAREN          reduce using rule 153 (empty -> .)
    COMMA           reduce using rule 153 (empty -> .)

    expresion_2                    shift and go to state 130
    relop                          shift and go to state 131
    empty                          shift and go to state 132

state 79

    (72) exp -> termino . exp_2
    (73) exp_2 -> . addop exp
    (74) exp_2 -> . empty
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (153) empty -> .

    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    GREATER         reduce using rule 153 (empty -> .)
    GREATEREQUAL    reduce using rule 153 (empty -> .)
    LESS            reduce using rule 153 (empty -> .)
    LESSEQUAL       reduce using rule 153 (empty -> .)
    DEQUAL          reduce using rule 153 (empty -> .)
    DISTINT         reduce using rule 153 (empty -> .)
    AND             reduce using rule 153 (empty -> .)
    OR              reduce using rule 153 (empty -> .)
    SEMICOLON       reduce using rule 153 (empty -> .)
    RPAREN          reduce using rule 153 (empty -> .)
    RBRACKET        reduce using rule 153 (empty -> .)
    COMMA           reduce using rule 153 (empty -> .)

    exp_2                          shift and go to state 139
    addop                          shift and go to state 140
    empty                          shift and go to state 141

state 80

    (75) termino -> factor . termino_2
    (76) termino_2 -> . timesop termino
    (77) termino_2 -> . empty
    (148) timesop -> . TIMES
    (149) timesop -> . DIVIDE
    (150) timesop -> . PERCENT
    (153) empty -> .

    TIMES           shift and go to state 145
    DIVIDE          shift and go to state 146
    PERCENT         shift and go to state 147
    PLUS            reduce using rule 153 (empty -> .)
    MINUS           reduce using rule 153 (empty -> .)
    GREATER         reduce using rule 153 (empty -> .)
    GREATEREQUAL    reduce using rule 153 (empty -> .)
    LESS            reduce using rule 153 (empty -> .)
    LESSEQUAL       reduce using rule 153 (empty -> .)
    DEQUAL          reduce using rule 153 (empty -> .)
    DISTINT         reduce using rule 153 (empty -> .)
    AND             reduce using rule 153 (empty -> .)
    OR              reduce using rule 153 (empty -> .)
    SEMICOLON       reduce using rule 153 (empty -> .)
    RPAREN          reduce using rule 153 (empty -> .)
    RBRACKET        reduce using rule 153 (empty -> .)
    COMMA           reduce using rule 153 (empty -> .)

    termino_2                      shift and go to state 142
    timesop                        shift and go to state 143
    empty                          shift and go to state 144

state 81

    (92) factor -> lparen_factor . super_exp rparen_factor
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    lparen_factor                  shift and go to state 81
    super_exp                      shift and go to state 148
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 82

    (93) factor -> addop . var_cte
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    var_cte                        shift and go to state 149
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 83

    (94) factor -> var_cte .

    TIMES           reduce using rule 94 (factor -> var_cte .)
    DIVIDE          reduce using rule 94 (factor -> var_cte .)
    PERCENT         reduce using rule 94 (factor -> var_cte .)
    PLUS            reduce using rule 94 (factor -> var_cte .)
    MINUS           reduce using rule 94 (factor -> var_cte .)
    GREATER         reduce using rule 94 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 94 (factor -> var_cte .)
    LESS            reduce using rule 94 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 94 (factor -> var_cte .)
    DEQUAL          reduce using rule 94 (factor -> var_cte .)
    DISTINT         reduce using rule 94 (factor -> var_cte .)
    AND             reduce using rule 94 (factor -> var_cte .)
    OR              reduce using rule 94 (factor -> var_cte .)
    SEMICOLON       reduce using rule 94 (factor -> var_cte .)
    RPAREN          reduce using rule 94 (factor -> var_cte .)
    RBRACKET        reduce using rule 94 (factor -> var_cte .)
    COMMA           reduce using rule 94 (factor -> var_cte .)


state 84

    (95) lparen_factor -> LPAREN .

    LPAREN          reduce using rule 95 (lparen_factor -> LPAREN .)
    PLUS            reduce using rule 95 (lparen_factor -> LPAREN .)
    MINUS           reduce using rule 95 (lparen_factor -> LPAREN .)
    ID              reduce using rule 95 (lparen_factor -> LPAREN .)
    CTE_I           reduce using rule 95 (lparen_factor -> LPAREN .)
    CTE_F           reduce using rule 95 (lparen_factor -> LPAREN .)
    TRUE            reduce using rule 95 (lparen_factor -> LPAREN .)
    FALSE           reduce using rule 95 (lparen_factor -> LPAREN .)


state 85

    (146) addop -> PLUS .

    ID              reduce using rule 146 (addop -> PLUS .)
    CTE_I           reduce using rule 146 (addop -> PLUS .)
    CTE_F           reduce using rule 146 (addop -> PLUS .)
    TRUE            reduce using rule 146 (addop -> PLUS .)
    FALSE           reduce using rule 146 (addop -> PLUS .)
    LPAREN          reduce using rule 146 (addop -> PLUS .)
    PLUS            reduce using rule 146 (addop -> PLUS .)
    MINUS           reduce using rule 146 (addop -> PLUS .)


state 86

    (147) addop -> MINUS .

    ID              reduce using rule 147 (addop -> MINUS .)
    CTE_I           reduce using rule 147 (addop -> MINUS .)
    CTE_F           reduce using rule 147 (addop -> MINUS .)
    TRUE            reduce using rule 147 (addop -> MINUS .)
    FALSE           reduce using rule 147 (addop -> MINUS .)
    LPAREN          reduce using rule 147 (addop -> MINUS .)
    PLUS            reduce using rule 147 (addop -> MINUS .)
    MINUS           reduce using rule 147 (addop -> MINUS .)


state 87

    (78) var_cte -> var_cte_1 .

    TIMES           reduce using rule 78 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 78 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 78 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 78 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 78 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 78 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 78 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 78 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 78 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 78 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 78 (var_cte -> var_cte_1 .)
    AND             reduce using rule 78 (var_cte -> var_cte_1 .)
    OR              reduce using rule 78 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 78 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 78 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 78 (var_cte -> var_cte_1 .)
    COMMA           reduce using rule 78 (var_cte -> var_cte_1 .)


state 88

    (79) var_cte -> var_cte_i .

    TIMES           reduce using rule 79 (var_cte -> var_cte_i .)
    DIVIDE          reduce using rule 79 (var_cte -> var_cte_i .)
    PERCENT         reduce using rule 79 (var_cte -> var_cte_i .)
    PLUS            reduce using rule 79 (var_cte -> var_cte_i .)
    MINUS           reduce using rule 79 (var_cte -> var_cte_i .)
    GREATER         reduce using rule 79 (var_cte -> var_cte_i .)
    GREATEREQUAL    reduce using rule 79 (var_cte -> var_cte_i .)
    LESS            reduce using rule 79 (var_cte -> var_cte_i .)
    LESSEQUAL       reduce using rule 79 (var_cte -> var_cte_i .)
    DEQUAL          reduce using rule 79 (var_cte -> var_cte_i .)
    DISTINT         reduce using rule 79 (var_cte -> var_cte_i .)
    AND             reduce using rule 79 (var_cte -> var_cte_i .)
    OR              reduce using rule 79 (var_cte -> var_cte_i .)
    SEMICOLON       reduce using rule 79 (var_cte -> var_cte_i .)
    RPAREN          reduce using rule 79 (var_cte -> var_cte_i .)
    RBRACKET        reduce using rule 79 (var_cte -> var_cte_i .)
    COMMA           reduce using rule 79 (var_cte -> var_cte_i .)


state 89

    (80) var_cte -> var_cte_f .

    TIMES           reduce using rule 80 (var_cte -> var_cte_f .)
    DIVIDE          reduce using rule 80 (var_cte -> var_cte_f .)
    PERCENT         reduce using rule 80 (var_cte -> var_cte_f .)
    PLUS            reduce using rule 80 (var_cte -> var_cte_f .)
    MINUS           reduce using rule 80 (var_cte -> var_cte_f .)
    GREATER         reduce using rule 80 (var_cte -> var_cte_f .)
    GREATEREQUAL    reduce using rule 80 (var_cte -> var_cte_f .)
    LESS            reduce using rule 80 (var_cte -> var_cte_f .)
    LESSEQUAL       reduce using rule 80 (var_cte -> var_cte_f .)
    DEQUAL          reduce using rule 80 (var_cte -> var_cte_f .)
    DISTINT         reduce using rule 80 (var_cte -> var_cte_f .)
    AND             reduce using rule 80 (var_cte -> var_cte_f .)
    OR              reduce using rule 80 (var_cte -> var_cte_f .)
    SEMICOLON       reduce using rule 80 (var_cte -> var_cte_f .)
    RPAREN          reduce using rule 80 (var_cte -> var_cte_f .)
    RBRACKET        reduce using rule 80 (var_cte -> var_cte_f .)
    COMMA           reduce using rule 80 (var_cte -> var_cte_f .)


state 90

    (81) var_cte -> var_cte_b .

    TIMES           reduce using rule 81 (var_cte -> var_cte_b .)
    DIVIDE          reduce using rule 81 (var_cte -> var_cte_b .)
    PERCENT         reduce using rule 81 (var_cte -> var_cte_b .)
    PLUS            reduce using rule 81 (var_cte -> var_cte_b .)
    MINUS           reduce using rule 81 (var_cte -> var_cte_b .)
    GREATER         reduce using rule 81 (var_cte -> var_cte_b .)
    GREATEREQUAL    reduce using rule 81 (var_cte -> var_cte_b .)
    LESS            reduce using rule 81 (var_cte -> var_cte_b .)
    LESSEQUAL       reduce using rule 81 (var_cte -> var_cte_b .)
    DEQUAL          reduce using rule 81 (var_cte -> var_cte_b .)
    DISTINT         reduce using rule 81 (var_cte -> var_cte_b .)
    AND             reduce using rule 81 (var_cte -> var_cte_b .)
    OR              reduce using rule 81 (var_cte -> var_cte_b .)
    SEMICOLON       reduce using rule 81 (var_cte -> var_cte_b .)
    RPAREN          reduce using rule 81 (var_cte -> var_cte_b .)
    RBRACKET        reduce using rule 81 (var_cte -> var_cte_b .)
    COMMA           reduce using rule 81 (var_cte -> var_cte_b .)


state 91

    (82) var_cte -> llamada .

    TIMES           reduce using rule 82 (var_cte -> llamada .)
    DIVIDE          reduce using rule 82 (var_cte -> llamada .)
    PERCENT         reduce using rule 82 (var_cte -> llamada .)
    PLUS            reduce using rule 82 (var_cte -> llamada .)
    MINUS           reduce using rule 82 (var_cte -> llamada .)
    GREATER         reduce using rule 82 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 82 (var_cte -> llamada .)
    LESS            reduce using rule 82 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 82 (var_cte -> llamada .)
    DEQUAL          reduce using rule 82 (var_cte -> llamada .)
    DISTINT         reduce using rule 82 (var_cte -> llamada .)
    AND             reduce using rule 82 (var_cte -> llamada .)
    OR              reduce using rule 82 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 82 (var_cte -> llamada .)
    RPAREN          reduce using rule 82 (var_cte -> llamada .)
    RBRACKET        reduce using rule 82 (var_cte -> llamada .)
    COMMA           reduce using rule 82 (var_cte -> llamada .)


state 92

    (87) var_cte_1 -> ID . var_cte_2
    (48) llamada_id -> ID .
    (88) var_cte_2 -> . LBRACKET exp var_cte_3
    (89) var_cte_2 -> . empty
    (153) empty -> .

    LPAREN          reduce using rule 48 (llamada_id -> ID .)
    LBRACKET        shift and go to state 151
    TIMES           reduce using rule 153 (empty -> .)
    DIVIDE          reduce using rule 153 (empty -> .)
    PERCENT         reduce using rule 153 (empty -> .)
    PLUS            reduce using rule 153 (empty -> .)
    MINUS           reduce using rule 153 (empty -> .)
    GREATER         reduce using rule 153 (empty -> .)
    GREATEREQUAL    reduce using rule 153 (empty -> .)
    LESS            reduce using rule 153 (empty -> .)
    LESSEQUAL       reduce using rule 153 (empty -> .)
    DEQUAL          reduce using rule 153 (empty -> .)
    DISTINT         reduce using rule 153 (empty -> .)
    AND             reduce using rule 153 (empty -> .)
    OR              reduce using rule 153 (empty -> .)
    SEMICOLON       reduce using rule 153 (empty -> .)
    RPAREN          reduce using rule 153 (empty -> .)
    RBRACKET        reduce using rule 153 (empty -> .)
    COMMA           reduce using rule 153 (empty -> .)

    var_cte_2                      shift and go to state 150
    empty                          shift and go to state 152

state 93

    (83) var_cte_i -> CTE_I .

    TIMES           reduce using rule 83 (var_cte_i -> CTE_I .)
    DIVIDE          reduce using rule 83 (var_cte_i -> CTE_I .)
    PERCENT         reduce using rule 83 (var_cte_i -> CTE_I .)
    PLUS            reduce using rule 83 (var_cte_i -> CTE_I .)
    MINUS           reduce using rule 83 (var_cte_i -> CTE_I .)
    GREATER         reduce using rule 83 (var_cte_i -> CTE_I .)
    GREATEREQUAL    reduce using rule 83 (var_cte_i -> CTE_I .)
    LESS            reduce using rule 83 (var_cte_i -> CTE_I .)
    LESSEQUAL       reduce using rule 83 (var_cte_i -> CTE_I .)
    DEQUAL          reduce using rule 83 (var_cte_i -> CTE_I .)
    DISTINT         reduce using rule 83 (var_cte_i -> CTE_I .)
    AND             reduce using rule 83 (var_cte_i -> CTE_I .)
    OR              reduce using rule 83 (var_cte_i -> CTE_I .)
    SEMICOLON       reduce using rule 83 (var_cte_i -> CTE_I .)
    RPAREN          reduce using rule 83 (var_cte_i -> CTE_I .)
    RBRACKET        reduce using rule 83 (var_cte_i -> CTE_I .)
    COMMA           reduce using rule 83 (var_cte_i -> CTE_I .)


state 94

    (84) var_cte_f -> CTE_F .

    TIMES           reduce using rule 84 (var_cte_f -> CTE_F .)
    DIVIDE          reduce using rule 84 (var_cte_f -> CTE_F .)
    PERCENT         reduce using rule 84 (var_cte_f -> CTE_F .)
    PLUS            reduce using rule 84 (var_cte_f -> CTE_F .)
    MINUS           reduce using rule 84 (var_cte_f -> CTE_F .)
    GREATER         reduce using rule 84 (var_cte_f -> CTE_F .)
    GREATEREQUAL    reduce using rule 84 (var_cte_f -> CTE_F .)
    LESS            reduce using rule 84 (var_cte_f -> CTE_F .)
    LESSEQUAL       reduce using rule 84 (var_cte_f -> CTE_F .)
    DEQUAL          reduce using rule 84 (var_cte_f -> CTE_F .)
    DISTINT         reduce using rule 84 (var_cte_f -> CTE_F .)
    AND             reduce using rule 84 (var_cte_f -> CTE_F .)
    OR              reduce using rule 84 (var_cte_f -> CTE_F .)
    SEMICOLON       reduce using rule 84 (var_cte_f -> CTE_F .)
    RPAREN          reduce using rule 84 (var_cte_f -> CTE_F .)
    RBRACKET        reduce using rule 84 (var_cte_f -> CTE_F .)
    COMMA           reduce using rule 84 (var_cte_f -> CTE_F .)


state 95

    (85) var_cte_b -> TRUE .

    TIMES           reduce using rule 85 (var_cte_b -> TRUE .)
    DIVIDE          reduce using rule 85 (var_cte_b -> TRUE .)
    PERCENT         reduce using rule 85 (var_cte_b -> TRUE .)
    PLUS            reduce using rule 85 (var_cte_b -> TRUE .)
    MINUS           reduce using rule 85 (var_cte_b -> TRUE .)
    GREATER         reduce using rule 85 (var_cte_b -> TRUE .)
    GREATEREQUAL    reduce using rule 85 (var_cte_b -> TRUE .)
    LESS            reduce using rule 85 (var_cte_b -> TRUE .)
    LESSEQUAL       reduce using rule 85 (var_cte_b -> TRUE .)
    DEQUAL          reduce using rule 85 (var_cte_b -> TRUE .)
    DISTINT         reduce using rule 85 (var_cte_b -> TRUE .)
    AND             reduce using rule 85 (var_cte_b -> TRUE .)
    OR              reduce using rule 85 (var_cte_b -> TRUE .)
    SEMICOLON       reduce using rule 85 (var_cte_b -> TRUE .)
    RPAREN          reduce using rule 85 (var_cte_b -> TRUE .)
    RBRACKET        reduce using rule 85 (var_cte_b -> TRUE .)
    COMMA           reduce using rule 85 (var_cte_b -> TRUE .)


state 96

    (86) var_cte_b -> FALSE .

    TIMES           reduce using rule 86 (var_cte_b -> FALSE .)
    DIVIDE          reduce using rule 86 (var_cte_b -> FALSE .)
    PERCENT         reduce using rule 86 (var_cte_b -> FALSE .)
    PLUS            reduce using rule 86 (var_cte_b -> FALSE .)
    MINUS           reduce using rule 86 (var_cte_b -> FALSE .)
    GREATER         reduce using rule 86 (var_cte_b -> FALSE .)
    GREATEREQUAL    reduce using rule 86 (var_cte_b -> FALSE .)
    LESS            reduce using rule 86 (var_cte_b -> FALSE .)
    LESSEQUAL       reduce using rule 86 (var_cte_b -> FALSE .)
    DEQUAL          reduce using rule 86 (var_cte_b -> FALSE .)
    DISTINT         reduce using rule 86 (var_cte_b -> FALSE .)
    AND             reduce using rule 86 (var_cte_b -> FALSE .)
    OR              reduce using rule 86 (var_cte_b -> FALSE .)
    SEMICOLON       reduce using rule 86 (var_cte_b -> FALSE .)
    RPAREN          reduce using rule 86 (var_cte_b -> FALSE .)
    RBRACKET        reduce using rule 86 (var_cte_b -> FALSE .)
    COMMA           reduce using rule 86 (var_cte_b -> FALSE .)


state 97

    (39) vars_aux -> array ID vars3 .

    GLOBAL          reduce using rule 39 (vars_aux -> array ID vars3 .)
    DEF             reduce using rule 39 (vars_aux -> array ID vars3 .)
    MAIN            reduce using rule 39 (vars_aux -> array ID vars3 .)
    ID              reduce using rule 39 (vars_aux -> array ID vars3 .)
    DRAW            reduce using rule 39 (vars_aux -> array ID vars3 .)
    IF              reduce using rule 39 (vars_aux -> array ID vars3 .)
    FOR             reduce using rule 39 (vars_aux -> array ID vars3 .)
    WHILE           reduce using rule 39 (vars_aux -> array ID vars3 .)
    INT             reduce using rule 39 (vars_aux -> array ID vars3 .)
    FLOAT           reduce using rule 39 (vars_aux -> array ID vars3 .)
    BOOLEAN         reduce using rule 39 (vars_aux -> array ID vars3 .)
    ARRAY           reduce using rule 39 (vars_aux -> array ID vars3 .)
    END             reduce using rule 39 (vars_aux -> array ID vars3 .)
    RETURN          reduce using rule 39 (vars_aux -> array ID vars3 .)
    ELSE            reduce using rule 39 (vars_aux -> array ID vars3 .)


state 98

    (45) vars3 -> EQUAL . def_array SEMICOLON
    (54) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 154

    def_array                      shift and go to state 153

state 99

    (46) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 46 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 46 (vars3 -> SEMICOLON .)
    MAIN            reduce using rule 46 (vars3 -> SEMICOLON .)
    ID              reduce using rule 46 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 46 (vars3 -> SEMICOLON .)
    IF              reduce using rule 46 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 46 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 46 (vars3 -> SEMICOLON .)
    INT             reduce using rule 46 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 46 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 46 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 46 (vars3 -> SEMICOLON .)
    END             reduce using rule 46 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 46 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 46 (vars3 -> SEMICOLON .)


state 100

    (40) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 155


state 101

    (20) main -> main_1 bloque END .

    $end            reduce using rule 20 (main -> main_1 bloque END .)


state 102

    (11) bloque -> estatuto bloque .

    END             reduce using rule 11 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 11 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 11 (bloque -> estatuto bloque .)


state 103

    (27) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 27 (estatuto -> llamada SEMICOLON .)


state 104

    (28) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 156


state 105

    (30) asignacion_2 -> asignacion_equal . super_exp
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    super_exp                      shift and go to state 157
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 106

    (31) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL super_exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    exp                            shift and go to state 158
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 107

    (97) condicion -> condicion_id LPAREN . super_exp rparen_condicion bloque condicion_2
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    super_exp                      shift and go to state 159
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 108

    (106) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (113) accion_nombre -> . SETPOSITION
    (114) accion_nombre -> . CIRCLE
    (115) accion_nombre -> . RIGHT
    (116) accion_nombre -> . LEFT
    (117) accion_nombre -> . HIDE
    (118) accion_nombre -> . SQUARE
    (119) accion_nombre -> . CLEAR
    (120) accion_nombre -> . SHOW
    (121) accion_nombre -> . BACK
    (122) accion_nombre -> . SPEED
    (123) accion_nombre -> . FORWARD
    (124) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 161
    CIRCLE          shift and go to state 162
    RIGHT           shift and go to state 163
    LEFT            shift and go to state 164
    HIDE            shift and go to state 165
    SQUARE          shift and go to state 166
    CLEAR           shift and go to state 167
    SHOW            shift and go to state 168
    BACK            shift and go to state 169
    SPEED           shift and go to state 170
    FORWARD         shift and go to state 171
    SETCOLOR        shift and go to state 172

    accion_nombre                  shift and go to state 160

state 109

    (47) llamada -> llamada_id LPAREN . llamada_2
    (49) llamada_2 -> . llamada_exp RPAREN
    (50) llamada_2 -> . RPAREN
    (51) llamada_exp -> . super_exp llamada_exp2
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    RPAREN          shift and go to state 175
    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    llamada_id                     shift and go to state 61
    llamada_2                      shift and go to state 173
    llamada_exp                    shift and go to state 174
    super_exp                      shift and go to state 176
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91

state 110

    (125) for -> for_init LPAREN . for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (126) for_exp -> . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    for_exp                        shift and go to state 177
    exp                            shift and go to state 178
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 111

    (131) while -> while_init LPAREN . super_exp rparen_while bloque while_end
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    super_exp                      shift and go to state 179
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 112

    (21) main_1 -> MAIN LPAREN RPAREN .

    ID              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    IF              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FOR             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    INT             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    END             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)


state 113

    (135) funcion -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 135 (funcion -> funcion_1 var_local bloque funcion_2 .)
    MAIN            reduce using rule 135 (funcion -> funcion_1 var_local bloque funcion_2 .)


state 114

    (137) funcion_2 -> RETURN . super_exp SEMICOLON funcion_end
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    super_exp                      shift and go to state 180
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 115

    (138) funcion_2 -> funcion_end .

    DEF             reduce using rule 138 (funcion_2 -> funcion_end .)
    MAIN            reduce using rule 138 (funcion_2 -> funcion_end .)


state 116

    (139) funcion_end -> END .

    DEF             reduce using rule 139 (funcion_end -> END .)
    MAIN            reduce using rule 139 (funcion_end -> END .)


state 117

    (140) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 140 (var_local -> LPAREN var_local_2 RPAREN .)


state 118

    (141) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 141 (var_local_2 -> var_local_2_1 var_local_3 .)


state 119

    (144) var_local_3 -> COMMA . var_local_2
    (141) var_local_2 -> . var_local_2_1 var_local_3
    (142) var_local_2 -> . empty
    (143) var_local_2_1 -> . data_type ID
    (153) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 153 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    var_local_2                    shift and go to state 181
    var_local_2_1                  shift and go to state 70
    empty                          shift and go to state 71
    data_type                      shift and go to state 72

state 120

    (145) var_local_3 -> empty .

    RPAREN          reduce using rule 145 (var_local_3 -> empty .)


state 121

    (143) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 143 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 143 (var_local_2_1 -> data_type ID .)


state 122

    (8) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)
    MAIN            reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)


state 123

    (35) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 182


state 124

    (43) vars2 -> asignacion_equal super_exp SEMICOLON .

    GLOBAL          reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DEF             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    MAIN            reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ID              reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DRAW            reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    IF              reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FOR             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    WHILE           reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    INT             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FLOAT           reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    BOOLEAN         reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ARRAY           reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    END             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    RETURN          reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ELSE            reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)


state 125

    (60) super_exp -> expresion super_exp_2 .

    SEMICOLON       reduce using rule 60 (super_exp -> expresion super_exp_2 .)
    RPAREN          reduce using rule 60 (super_exp -> expresion super_exp_2 .)
    COMMA           reduce using rule 60 (super_exp -> expresion super_exp_2 .)


state 126

    (61) super_exp_2 -> logicop . super_exp_2
    (61) super_exp_2 -> . logicop super_exp_2
    (62) super_exp_2 -> . empty
    (151) logicop -> . AND
    (152) logicop -> . OR
    (153) empty -> .

    AND             shift and go to state 128
    OR              shift and go to state 129
    SEMICOLON       reduce using rule 153 (empty -> .)
    RPAREN          reduce using rule 153 (empty -> .)
    COMMA           reduce using rule 153 (empty -> .)

    logicop                        shift and go to state 126
    super_exp_2                    shift and go to state 183
    empty                          shift and go to state 127

state 127

    (62) super_exp_2 -> empty .

    SEMICOLON       reduce using rule 62 (super_exp_2 -> empty .)
    RPAREN          reduce using rule 62 (super_exp_2 -> empty .)
    COMMA           reduce using rule 62 (super_exp_2 -> empty .)


state 128

    (151) logicop -> AND .

    AND             reduce using rule 151 (logicop -> AND .)
    OR              reduce using rule 151 (logicop -> AND .)
    SEMICOLON       reduce using rule 151 (logicop -> AND .)
    RPAREN          reduce using rule 151 (logicop -> AND .)
    COMMA           reduce using rule 151 (logicop -> AND .)


state 129

    (152) logicop -> OR .

    AND             reduce using rule 152 (logicop -> OR .)
    OR              reduce using rule 152 (logicop -> OR .)
    SEMICOLON       reduce using rule 152 (logicop -> OR .)
    RPAREN          reduce using rule 152 (logicop -> OR .)
    COMMA           reduce using rule 152 (logicop -> OR .)


state 130

    (63) expresion -> exp expresion_2 .

    AND             reduce using rule 63 (expresion -> exp expresion_2 .)
    OR              reduce using rule 63 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 63 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 63 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 63 (expresion -> exp expresion_2 .)


state 131

    (64) expresion_2 -> relop . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    exp                            shift and go to state 184
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 132

    (65) expresion_2 -> empty .

    AND             reduce using rule 65 (expresion_2 -> empty .)
    OR              reduce using rule 65 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 65 (expresion_2 -> empty .)
    RPAREN          reduce using rule 65 (expresion_2 -> empty .)
    COMMA           reduce using rule 65 (expresion_2 -> empty .)


state 133

    (66) relop -> GREATER .

    LPAREN          reduce using rule 66 (relop -> GREATER .)
    PLUS            reduce using rule 66 (relop -> GREATER .)
    MINUS           reduce using rule 66 (relop -> GREATER .)
    ID              reduce using rule 66 (relop -> GREATER .)
    CTE_I           reduce using rule 66 (relop -> GREATER .)
    CTE_F           reduce using rule 66 (relop -> GREATER .)
    TRUE            reduce using rule 66 (relop -> GREATER .)
    FALSE           reduce using rule 66 (relop -> GREATER .)


state 134

    (67) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 67 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 67 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 67 (relop -> GREATEREQUAL .)
    ID              reduce using rule 67 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 67 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 67 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 67 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 67 (relop -> GREATEREQUAL .)


state 135

    (68) relop -> LESS .

    LPAREN          reduce using rule 68 (relop -> LESS .)
    PLUS            reduce using rule 68 (relop -> LESS .)
    MINUS           reduce using rule 68 (relop -> LESS .)
    ID              reduce using rule 68 (relop -> LESS .)
    CTE_I           reduce using rule 68 (relop -> LESS .)
    CTE_F           reduce using rule 68 (relop -> LESS .)
    TRUE            reduce using rule 68 (relop -> LESS .)
    FALSE           reduce using rule 68 (relop -> LESS .)


state 136

    (69) relop -> LESSEQUAL .

    LPAREN          reduce using rule 69 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 69 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 69 (relop -> LESSEQUAL .)
    ID              reduce using rule 69 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 69 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 69 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 69 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 69 (relop -> LESSEQUAL .)


state 137

    (70) relop -> DEQUAL .

    LPAREN          reduce using rule 70 (relop -> DEQUAL .)
    PLUS            reduce using rule 70 (relop -> DEQUAL .)
    MINUS           reduce using rule 70 (relop -> DEQUAL .)
    ID              reduce using rule 70 (relop -> DEQUAL .)
    CTE_I           reduce using rule 70 (relop -> DEQUAL .)
    CTE_F           reduce using rule 70 (relop -> DEQUAL .)
    TRUE            reduce using rule 70 (relop -> DEQUAL .)
    FALSE           reduce using rule 70 (relop -> DEQUAL .)


state 138

    (71) relop -> DISTINT .

    LPAREN          reduce using rule 71 (relop -> DISTINT .)
    PLUS            reduce using rule 71 (relop -> DISTINT .)
    MINUS           reduce using rule 71 (relop -> DISTINT .)
    ID              reduce using rule 71 (relop -> DISTINT .)
    CTE_I           reduce using rule 71 (relop -> DISTINT .)
    CTE_F           reduce using rule 71 (relop -> DISTINT .)
    TRUE            reduce using rule 71 (relop -> DISTINT .)
    FALSE           reduce using rule 71 (relop -> DISTINT .)


state 139

    (72) exp -> termino exp_2 .

    GREATER         reduce using rule 72 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 72 (exp -> termino exp_2 .)
    LESS            reduce using rule 72 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 72 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 72 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 72 (exp -> termino exp_2 .)
    AND             reduce using rule 72 (exp -> termino exp_2 .)
    OR              reduce using rule 72 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 72 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 72 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 72 (exp -> termino exp_2 .)
    COMMA           reduce using rule 72 (exp -> termino exp_2 .)


state 140

    (73) exp_2 -> addop . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    addop                          shift and go to state 82
    exp                            shift and go to state 185
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 141

    (74) exp_2 -> empty .

    GREATER         reduce using rule 74 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 74 (exp_2 -> empty .)
    LESS            reduce using rule 74 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 74 (exp_2 -> empty .)
    DEQUAL          reduce using rule 74 (exp_2 -> empty .)
    DISTINT         reduce using rule 74 (exp_2 -> empty .)
    AND             reduce using rule 74 (exp_2 -> empty .)
    OR              reduce using rule 74 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 74 (exp_2 -> empty .)
    RPAREN          reduce using rule 74 (exp_2 -> empty .)
    RBRACKET        reduce using rule 74 (exp_2 -> empty .)
    COMMA           reduce using rule 74 (exp_2 -> empty .)


state 142

    (75) termino -> factor termino_2 .

    PLUS            reduce using rule 75 (termino -> factor termino_2 .)
    MINUS           reduce using rule 75 (termino -> factor termino_2 .)
    GREATER         reduce using rule 75 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 75 (termino -> factor termino_2 .)
    LESS            reduce using rule 75 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 75 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 75 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 75 (termino -> factor termino_2 .)
    AND             reduce using rule 75 (termino -> factor termino_2 .)
    OR              reduce using rule 75 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 75 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 75 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 75 (termino -> factor termino_2 .)
    COMMA           reduce using rule 75 (termino -> factor termino_2 .)


state 143

    (76) termino_2 -> timesop . termino
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    termino                        shift and go to state 186
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 144

    (77) termino_2 -> empty .

    PLUS            reduce using rule 77 (termino_2 -> empty .)
    MINUS           reduce using rule 77 (termino_2 -> empty .)
    GREATER         reduce using rule 77 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 77 (termino_2 -> empty .)
    LESS            reduce using rule 77 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 77 (termino_2 -> empty .)
    DEQUAL          reduce using rule 77 (termino_2 -> empty .)
    DISTINT         reduce using rule 77 (termino_2 -> empty .)
    AND             reduce using rule 77 (termino_2 -> empty .)
    OR              reduce using rule 77 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 77 (termino_2 -> empty .)
    RPAREN          reduce using rule 77 (termino_2 -> empty .)
    RBRACKET        reduce using rule 77 (termino_2 -> empty .)
    COMMA           reduce using rule 77 (termino_2 -> empty .)


state 145

    (148) timesop -> TIMES .

    LPAREN          reduce using rule 148 (timesop -> TIMES .)
    PLUS            reduce using rule 148 (timesop -> TIMES .)
    MINUS           reduce using rule 148 (timesop -> TIMES .)
    ID              reduce using rule 148 (timesop -> TIMES .)
    CTE_I           reduce using rule 148 (timesop -> TIMES .)
    CTE_F           reduce using rule 148 (timesop -> TIMES .)
    TRUE            reduce using rule 148 (timesop -> TIMES .)
    FALSE           reduce using rule 148 (timesop -> TIMES .)


state 146

    (149) timesop -> DIVIDE .

    LPAREN          reduce using rule 149 (timesop -> DIVIDE .)
    PLUS            reduce using rule 149 (timesop -> DIVIDE .)
    MINUS           reduce using rule 149 (timesop -> DIVIDE .)
    ID              reduce using rule 149 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 149 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 149 (timesop -> DIVIDE .)
    TRUE            reduce using rule 149 (timesop -> DIVIDE .)
    FALSE           reduce using rule 149 (timesop -> DIVIDE .)


state 147

    (150) timesop -> PERCENT .

    LPAREN          reduce using rule 150 (timesop -> PERCENT .)
    PLUS            reduce using rule 150 (timesop -> PERCENT .)
    MINUS           reduce using rule 150 (timesop -> PERCENT .)
    ID              reduce using rule 150 (timesop -> PERCENT .)
    CTE_I           reduce using rule 150 (timesop -> PERCENT .)
    CTE_F           reduce using rule 150 (timesop -> PERCENT .)
    TRUE            reduce using rule 150 (timesop -> PERCENT .)
    FALSE           reduce using rule 150 (timesop -> PERCENT .)


state 148

    (92) factor -> lparen_factor super_exp . rparen_factor
    (96) rparen_factor -> . RPAREN

    RPAREN          shift and go to state 188

    rparen_factor                  shift and go to state 187

state 149

    (93) factor -> addop var_cte .

    TIMES           reduce using rule 93 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 93 (factor -> addop var_cte .)
    PERCENT         reduce using rule 93 (factor -> addop var_cte .)
    PLUS            reduce using rule 93 (factor -> addop var_cte .)
    MINUS           reduce using rule 93 (factor -> addop var_cte .)
    GREATER         reduce using rule 93 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 93 (factor -> addop var_cte .)
    LESS            reduce using rule 93 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 93 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 93 (factor -> addop var_cte .)
    DISTINT         reduce using rule 93 (factor -> addop var_cte .)
    AND             reduce using rule 93 (factor -> addop var_cte .)
    OR              reduce using rule 93 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 93 (factor -> addop var_cte .)
    RPAREN          reduce using rule 93 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 93 (factor -> addop var_cte .)
    COMMA           reduce using rule 93 (factor -> addop var_cte .)


state 150

    (87) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    AND             reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    OR              reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 87 (var_cte_1 -> ID var_cte_2 .)


state 151

    (88) var_cte_2 -> LBRACKET . exp var_cte_3
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    exp                            shift and go to state 189
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 152

    (89) var_cte_2 -> empty .

    TIMES           reduce using rule 89 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 89 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 89 (var_cte_2 -> empty .)
    PLUS            reduce using rule 89 (var_cte_2 -> empty .)
    MINUS           reduce using rule 89 (var_cte_2 -> empty .)
    GREATER         reduce using rule 89 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 89 (var_cte_2 -> empty .)
    LESS            reduce using rule 89 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 89 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 89 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 89 (var_cte_2 -> empty .)
    AND             reduce using rule 89 (var_cte_2 -> empty .)
    OR              reduce using rule 89 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 89 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 89 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 89 (var_cte_2 -> empty .)
    COMMA           reduce using rule 89 (var_cte_2 -> empty .)


state 153

    (45) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 190


state 154

    (54) def_array -> LBRACKET . def_array_2
    (55) def_array_2 -> . def_array_cte RBRACKET
    (56) def_array_2 -> . RBRACKET
    (57) def_array_cte -> . var_cte def_array_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    RBRACKET        shift and go to state 193
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    def_array_2                    shift and go to state 191
    def_array_cte                  shift and go to state 192
    var_cte                        shift and go to state 194
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 155

    (40) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 195


state 156

    (28) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 157

    (30) asignacion_2 -> asignacion_equal super_exp .

    SEMICOLON       reduce using rule 30 (asignacion_2 -> asignacion_equal super_exp .)


state 158

    (31) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL super_exp
    (33) asignacion_3 -> . RBRACKET
    (34) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 197
    COMMA           shift and go to state 198

    asignacion_3                   shift and go to state 196

state 159

    (97) condicion -> condicion_id LPAREN super_exp . rparen_condicion bloque condicion_2
    (98) rparen_condicion -> . RPAREN

    RPAREN          shift and go to state 200

    rparen_condicion               shift and go to state 199

state 160

    (106) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (107) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 202

    accion_params                  shift and go to state 201

state 161

    (113) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 113 (accion_nombre -> SETPOSITION .)


state 162

    (114) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 114 (accion_nombre -> CIRCLE .)


state 163

    (115) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 115 (accion_nombre -> RIGHT .)


state 164

    (116) accion_nombre -> LEFT .

    LPAREN          reduce using rule 116 (accion_nombre -> LEFT .)


state 165

    (117) accion_nombre -> HIDE .

    LPAREN          reduce using rule 117 (accion_nombre -> HIDE .)


state 166

    (118) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 118 (accion_nombre -> SQUARE .)


state 167

    (119) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 119 (accion_nombre -> CLEAR .)


state 168

    (120) accion_nombre -> SHOW .

    LPAREN          reduce using rule 120 (accion_nombre -> SHOW .)


state 169

    (121) accion_nombre -> BACK .

    LPAREN          reduce using rule 121 (accion_nombre -> BACK .)


state 170

    (122) accion_nombre -> SPEED .

    LPAREN          reduce using rule 122 (accion_nombre -> SPEED .)


state 171

    (123) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 123 (accion_nombre -> FORWARD .)


state 172

    (124) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 124 (accion_nombre -> SETCOLOR .)


state 173

    (47) llamada -> llamada_id LPAREN llamada_2 .

    SEMICOLON       reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    TIMES           reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    DIVIDE          reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    PERCENT         reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    PLUS            reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    MINUS           reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATER         reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    LESS            reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    DEQUAL          reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    DISTINT         reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    AND             reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    OR              reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    RPAREN          reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    RBRACKET        reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    COMMA           reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)


state 174

    (49) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 203


state 175

    (50) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 50 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 50 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 50 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 50 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 50 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 50 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 50 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 50 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 50 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 50 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 50 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 50 (llamada_2 -> RPAREN .)
    AND             reduce using rule 50 (llamada_2 -> RPAREN .)
    OR              reduce using rule 50 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 50 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 50 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 50 (llamada_2 -> RPAREN .)


state 176

    (51) llamada_exp -> super_exp . llamada_exp2
    (52) llamada_exp2 -> . COMMA llamada_exp
    (53) llamada_exp2 -> . empty
    (153) empty -> .

    COMMA           shift and go to state 205
    RPAREN          reduce using rule 153 (empty -> .)

    llamada_exp2                   shift and go to state 204
    empty                          shift and go to state 206

state 177

    (125) for -> for_init LPAREN for_exp . COMMA for_exp COMMA for_exp2 for_rparen bloque for_end

    COMMA           shift and go to state 207


state 178

    (126) for_exp -> exp .

    COMMA           reduce using rule 126 (for_exp -> exp .)


state 179

    (131) while -> while_init LPAREN super_exp . rparen_while bloque while_end
    (133) rparen_while -> . RPAREN

    RPAREN          shift and go to state 209

    rparen_while                   shift and go to state 208

state 180

    (137) funcion_2 -> RETURN super_exp . SEMICOLON funcion_end

    SEMICOLON       shift and go to state 210


state 181

    (144) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 144 (var_local_3 -> COMMA var_local_2 .)


state 182

    (35) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 211


state 183

    (61) super_exp_2 -> logicop super_exp_2 .

    SEMICOLON       reduce using rule 61 (super_exp_2 -> logicop super_exp_2 .)
    RPAREN          reduce using rule 61 (super_exp_2 -> logicop super_exp_2 .)
    COMMA           reduce using rule 61 (super_exp_2 -> logicop super_exp_2 .)


state 184

    (64) expresion_2 -> relop exp .

    AND             reduce using rule 64 (expresion_2 -> relop exp .)
    OR              reduce using rule 64 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 64 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 64 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 64 (expresion_2 -> relop exp .)


state 185

    (73) exp_2 -> addop exp .

    GREATER         reduce using rule 73 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 73 (exp_2 -> addop exp .)
    LESS            reduce using rule 73 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 73 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 73 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 73 (exp_2 -> addop exp .)
    AND             reduce using rule 73 (exp_2 -> addop exp .)
    OR              reduce using rule 73 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 73 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 73 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 73 (exp_2 -> addop exp .)
    COMMA           reduce using rule 73 (exp_2 -> addop exp .)


state 186

    (76) termino_2 -> timesop termino .

    PLUS            reduce using rule 76 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 76 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 76 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 76 (termino_2 -> timesop termino .)
    LESS            reduce using rule 76 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 76 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 76 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 76 (termino_2 -> timesop termino .)
    AND             reduce using rule 76 (termino_2 -> timesop termino .)
    OR              reduce using rule 76 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 76 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 76 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 76 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 76 (termino_2 -> timesop termino .)


state 187

    (92) factor -> lparen_factor super_exp rparen_factor .

    TIMES           reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    DIVIDE          reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    PERCENT         reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    PLUS            reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    MINUS           reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    GREATER         reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    GREATEREQUAL    reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    LESS            reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    LESSEQUAL       reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    DEQUAL          reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    DISTINT         reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    AND             reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    OR              reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    SEMICOLON       reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    RPAREN          reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    RBRACKET        reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)
    COMMA           reduce using rule 92 (factor -> lparen_factor super_exp rparen_factor .)


state 188

    (96) rparen_factor -> RPAREN .

    TIMES           reduce using rule 96 (rparen_factor -> RPAREN .)
    DIVIDE          reduce using rule 96 (rparen_factor -> RPAREN .)
    PERCENT         reduce using rule 96 (rparen_factor -> RPAREN .)
    PLUS            reduce using rule 96 (rparen_factor -> RPAREN .)
    MINUS           reduce using rule 96 (rparen_factor -> RPAREN .)
    GREATER         reduce using rule 96 (rparen_factor -> RPAREN .)
    GREATEREQUAL    reduce using rule 96 (rparen_factor -> RPAREN .)
    LESS            reduce using rule 96 (rparen_factor -> RPAREN .)
    LESSEQUAL       reduce using rule 96 (rparen_factor -> RPAREN .)
    DEQUAL          reduce using rule 96 (rparen_factor -> RPAREN .)
    DISTINT         reduce using rule 96 (rparen_factor -> RPAREN .)
    AND             reduce using rule 96 (rparen_factor -> RPAREN .)
    OR              reduce using rule 96 (rparen_factor -> RPAREN .)
    SEMICOLON       reduce using rule 96 (rparen_factor -> RPAREN .)
    RPAREN          reduce using rule 96 (rparen_factor -> RPAREN .)
    RBRACKET        reduce using rule 96 (rparen_factor -> RPAREN .)
    COMMA           reduce using rule 96 (rparen_factor -> RPAREN .)


state 189

    (88) var_cte_2 -> LBRACKET exp . var_cte_3
    (90) var_cte_3 -> . RBRACKET
    (91) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 213
    COMMA           shift and go to state 214

    var_cte_3                      shift and go to state 212

state 190

    (45) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    MAIN            reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)


state 191

    (54) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 54 (def_array -> LBRACKET def_array_2 .)


state 192

    (55) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 215


state 193

    (56) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 56 (def_array_2 -> RBRACKET .)


state 194

    (57) def_array_cte -> var_cte . def_array_cte_2
    (58) def_array_cte_2 -> . COMMA def_array_cte
    (59) def_array_cte_2 -> . empty
    (153) empty -> .

    COMMA           shift and go to state 217
    RBRACKET        reduce using rule 153 (empty -> .)

    def_array_cte_2                shift and go to state 216
    empty                          shift and go to state 218

state 195

    (40) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (41) array_2 -> . COMMA CTE_I
    (42) array_2 -> . empty
    (153) empty -> .

    COMMA           shift and go to state 219
    GREATER         reduce using rule 153 (empty -> .)

    array_2                        shift and go to state 220
    empty                          shift and go to state 221

state 196

    (31) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL super_exp

    EQUAL           shift and go to state 222


state 197

    (33) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 33 (asignacion_3 -> RBRACKET .)


state 198

    (34) asignacion_3 -> COMMA . exp RBRACKET
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    exp                            shift and go to state 223
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 199

    (97) condicion -> condicion_id LPAREN super_exp rparen_condicion . bloque condicion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 153 (empty -> .)
    ELSE            reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    condicion_id                   shift and go to state 57
    bloque                         shift and go to state 224
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 200

    (98) rparen_condicion -> RPAREN .

    ID              reduce using rule 98 (rparen_condicion -> RPAREN .)
    DRAW            reduce using rule 98 (rparen_condicion -> RPAREN .)
    IF              reduce using rule 98 (rparen_condicion -> RPAREN .)
    FOR             reduce using rule 98 (rparen_condicion -> RPAREN .)
    WHILE           reduce using rule 98 (rparen_condicion -> RPAREN .)
    INT             reduce using rule 98 (rparen_condicion -> RPAREN .)
    FLOAT           reduce using rule 98 (rparen_condicion -> RPAREN .)
    BOOLEAN         reduce using rule 98 (rparen_condicion -> RPAREN .)
    ARRAY           reduce using rule 98 (rparen_condicion -> RPAREN .)
    END             reduce using rule 98 (rparen_condicion -> RPAREN .)
    ELSE            reduce using rule 98 (rparen_condicion -> RPAREN .)


state 201

    (106) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 225


state 202

    (107) accion_params -> LPAREN . accion_params_2
    (108) accion_params_2 -> . accion_params_cte RPAREN
    (109) accion_params_2 -> . RPAREN
    (110) accion_params_cte -> . var_cte accion_params_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    RPAREN          shift and go to state 228
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    accion_params_2                shift and go to state 226
    accion_params_cte              shift and go to state 227
    var_cte                        shift and go to state 229
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 203

    (49) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    AND             reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    OR              reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)


state 204

    (51) llamada_exp -> super_exp llamada_exp2 .

    RPAREN          reduce using rule 51 (llamada_exp -> super_exp llamada_exp2 .)


state 205

    (52) llamada_exp2 -> COMMA . llamada_exp
    (51) llamada_exp -> . super_exp llamada_exp2
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    llamada_exp                    shift and go to state 230
    super_exp                      shift and go to state 176
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 206

    (53) llamada_exp2 -> empty .

    RPAREN          reduce using rule 53 (llamada_exp2 -> empty .)


state 207

    (125) for -> for_init LPAREN for_exp COMMA . for_exp COMMA for_exp2 for_rparen bloque for_end
    (126) for_exp -> . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    for_exp                        shift and go to state 231
    exp                            shift and go to state 178
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 208

    (131) while -> while_init LPAREN super_exp rparen_while . bloque while_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    while_init                     shift and go to state 64
    bloque                         shift and go to state 232
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 209

    (133) rparen_while -> RPAREN .

    ID              reduce using rule 133 (rparen_while -> RPAREN .)
    DRAW            reduce using rule 133 (rparen_while -> RPAREN .)
    IF              reduce using rule 133 (rparen_while -> RPAREN .)
    FOR             reduce using rule 133 (rparen_while -> RPAREN .)
    WHILE           reduce using rule 133 (rparen_while -> RPAREN .)
    INT             reduce using rule 133 (rparen_while -> RPAREN .)
    FLOAT           reduce using rule 133 (rparen_while -> RPAREN .)
    BOOLEAN         reduce using rule 133 (rparen_while -> RPAREN .)
    ARRAY           reduce using rule 133 (rparen_while -> RPAREN .)
    END             reduce using rule 133 (rparen_while -> RPAREN .)


state 210

    (137) funcion_2 -> RETURN super_exp SEMICOLON . funcion_end
    (139) funcion_end -> . END

    END             shift and go to state 116

    funcion_end                    shift and go to state 233

state 211

    (35) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 234


state 212

    (88) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    AND             reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    OR              reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 88 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 213

    (90) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 90 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 90 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 90 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 90 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 90 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 90 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 90 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 90 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 90 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 90 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 90 (var_cte_3 -> RBRACKET .)
    AND             reduce using rule 90 (var_cte_3 -> RBRACKET .)
    OR              reduce using rule 90 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 90 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 90 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 90 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 90 (var_cte_3 -> RBRACKET .)


state 214

    (91) var_cte_3 -> COMMA . exp RBRACKET
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    exp                            shift and go to state 235
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 215

    (55) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 55 (def_array_2 -> def_array_cte RBRACKET .)


state 216

    (57) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 57 (def_array_cte -> var_cte def_array_cte_2 .)


state 217

    (58) def_array_cte_2 -> COMMA . def_array_cte
    (57) def_array_cte -> . var_cte def_array_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    def_array_cte                  shift and go to state 236
    var_cte                        shift and go to state 194
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 218

    (59) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 59 (def_array_cte_2 -> empty .)


state 219

    (41) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 237


state 220

    (40) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 238


state 221

    (42) array_2 -> empty .

    GREATER         reduce using rule 42 (array_2 -> empty .)


state 222

    (31) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . super_exp
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    exp                            shift and go to state 78
    super_exp                      shift and go to state 239
    expresion                      shift and go to state 77
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 223

    (34) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 240


state 224

    (97) condicion -> condicion_id LPAREN super_exp rparen_condicion bloque . condicion_2
    (100) condicion_2 -> . condicion_end
    (101) condicion_2 -> . condicion_else bloque condicion_end
    (103) condicion_end -> . END
    (102) condicion_else -> . ELSE

    END             shift and go to state 244
    ELSE            shift and go to state 245

    condicion_2                    shift and go to state 241
    condicion_end                  shift and go to state 242
    condicion_else                 shift and go to state 243

state 225

    (106) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 106 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 226

    (107) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 107 (accion_params -> LPAREN accion_params_2 .)


state 227

    (108) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 246


state 228

    (109) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 109 (accion_params_2 -> RPAREN .)


state 229

    (110) accion_params_cte -> var_cte . accion_params_cte_2
    (111) accion_params_cte_2 -> . COMMA accion_params_cte
    (112) accion_params_cte_2 -> . empty
    (153) empty -> .

    COMMA           shift and go to state 248
    RPAREN          reduce using rule 153 (empty -> .)

    accion_params_cte_2            shift and go to state 247
    empty                          shift and go to state 249

state 230

    (52) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 52 (llamada_exp2 -> COMMA llamada_exp .)


state 231

    (125) for -> for_init LPAREN for_exp COMMA for_exp . COMMA for_exp2 for_rparen bloque for_end

    COMMA           shift and go to state 250


state 232

    (131) while -> while_init LPAREN super_exp rparen_while bloque . while_end
    (134) while_end -> . END

    END             shift and go to state 252

    while_end                      shift and go to state 251

state 233

    (137) funcion_2 -> RETURN super_exp SEMICOLON funcion_end .

    DEF             reduce using rule 137 (funcion_2 -> RETURN super_exp SEMICOLON funcion_end .)
    MAIN            reduce using rule 137 (funcion_2 -> RETURN super_exp SEMICOLON funcion_end .)


state 234

    (35) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    GLOBAL          reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    MAIN            reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 235

    (91) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 253


state 236

    (58) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 58 (def_array_cte_2 -> COMMA def_array_cte .)


state 237

    (41) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 41 (array_2 -> COMMA CTE_I .)


state 238

    (40) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 40 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 239

    (31) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .

    SEMICOLON       reduce using rule 31 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .)


state 240

    (34) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 34 (asignacion_3 -> COMMA exp RBRACKET .)


state 241

    (97) condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .

    ID              reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    DRAW            reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    IF              reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    FOR             reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    WHILE           reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    INT             reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    FLOAT           reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    BOOLEAN         reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    ARRAY           reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    END             reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    RETURN          reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    ELSE            reduce using rule 97 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)


state 242

    (100) condicion_2 -> condicion_end .

    ID              reduce using rule 100 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 100 (condicion_2 -> condicion_end .)
    IF              reduce using rule 100 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 100 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 100 (condicion_2 -> condicion_end .)
    INT             reduce using rule 100 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 100 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 100 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 100 (condicion_2 -> condicion_end .)
    END             reduce using rule 100 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 100 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 100 (condicion_2 -> condicion_end .)


state 243

    (101) condicion_2 -> condicion_else . bloque condicion_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    bloque                         shift and go to state 254
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 244

    (103) condicion_end -> END .

    ID              reduce using rule 103 (condicion_end -> END .)
    DRAW            reduce using rule 103 (condicion_end -> END .)
    IF              reduce using rule 103 (condicion_end -> END .)
    FOR             reduce using rule 103 (condicion_end -> END .)
    WHILE           reduce using rule 103 (condicion_end -> END .)
    INT             reduce using rule 103 (condicion_end -> END .)
    FLOAT           reduce using rule 103 (condicion_end -> END .)
    BOOLEAN         reduce using rule 103 (condicion_end -> END .)
    ARRAY           reduce using rule 103 (condicion_end -> END .)
    END             reduce using rule 103 (condicion_end -> END .)
    RETURN          reduce using rule 103 (condicion_end -> END .)
    ELSE            reduce using rule 103 (condicion_end -> END .)


state 245

    (102) condicion_else -> ELSE .

    ID              reduce using rule 102 (condicion_else -> ELSE .)
    DRAW            reduce using rule 102 (condicion_else -> ELSE .)
    IF              reduce using rule 102 (condicion_else -> ELSE .)
    FOR             reduce using rule 102 (condicion_else -> ELSE .)
    WHILE           reduce using rule 102 (condicion_else -> ELSE .)
    INT             reduce using rule 102 (condicion_else -> ELSE .)
    FLOAT           reduce using rule 102 (condicion_else -> ELSE .)
    BOOLEAN         reduce using rule 102 (condicion_else -> ELSE .)
    ARRAY           reduce using rule 102 (condicion_else -> ELSE .)
    END             reduce using rule 102 (condicion_else -> ELSE .)


state 246

    (108) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 108 (accion_params_2 -> accion_params_cte RPAREN .)


state 247

    (110) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 110 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 248

    (111) accion_params_cte_2 -> COMMA . accion_params_cte
    (110) accion_params_cte -> . var_cte accion_params_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    accion_params_cte              shift and go to state 255
    var_cte                        shift and go to state 229
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 249

    (112) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 112 (accion_params_cte_2 -> empty .)


state 250

    (125) for -> for_init LPAREN for_exp COMMA for_exp COMMA . for_exp2 for_rparen bloque for_end
    (127) for_exp2 -> . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (92) factor -> . lparen_factor super_exp rparen_factor
    (93) factor -> . addop var_cte
    (94) factor -> . var_cte
    (95) lparen_factor -> . LPAREN
    (146) addop -> . PLUS
    (147) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . var_cte_i
    (80) var_cte -> . var_cte_f
    (81) var_cte -> . var_cte_b
    (82) var_cte -> . llamada
    (87) var_cte_1 -> . ID var_cte_2
    (83) var_cte_i -> . CTE_I
    (84) var_cte_f -> . CTE_F
    (85) var_cte_b -> . TRUE
    (86) var_cte_b -> . FALSE
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    ID              shift and go to state 92
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96

    for_exp2                       shift and go to state 256
    exp                            shift and go to state 257
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    lparen_factor                  shift and go to state 81
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 87
    var_cte_i                      shift and go to state 88
    var_cte_f                      shift and go to state 89
    var_cte_b                      shift and go to state 90
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 251

    (131) while -> while_init LPAREN super_exp rparen_while bloque while_end .

    ID              reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    DRAW            reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    IF              reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    FOR             reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    WHILE           reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    INT             reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    FLOAT           reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    BOOLEAN         reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    ARRAY           reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    END             reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    RETURN          reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    ELSE            reduce using rule 131 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)


state 252

    (134) while_end -> END .

    ID              reduce using rule 134 (while_end -> END .)
    DRAW            reduce using rule 134 (while_end -> END .)
    IF              reduce using rule 134 (while_end -> END .)
    FOR             reduce using rule 134 (while_end -> END .)
    WHILE           reduce using rule 134 (while_end -> END .)
    INT             reduce using rule 134 (while_end -> END .)
    FLOAT           reduce using rule 134 (while_end -> END .)
    BOOLEAN         reduce using rule 134 (while_end -> END .)
    ARRAY           reduce using rule 134 (while_end -> END .)
    END             reduce using rule 134 (while_end -> END .)
    RETURN          reduce using rule 134 (while_end -> END .)
    ELSE            reduce using rule 134 (while_end -> END .)


state 253

    (91) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    AND             reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    OR              reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 91 (var_cte_3 -> COMMA exp RBRACKET .)


state 254

    (101) condicion_2 -> condicion_else bloque . condicion_end
    (103) condicion_end -> . END

    END             shift and go to state 244

    condicion_end                  shift and go to state 258

state 255

    (111) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 111 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 256

    (125) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 . for_rparen bloque for_end
    (128) for_rparen -> . RPAREN

    RPAREN          shift and go to state 260

    for_rparen                     shift and go to state 259

state 257

    (127) for_exp2 -> exp .

    RPAREN          reduce using rule 127 (for_exp2 -> exp .)


state 258

    (101) condicion_2 -> condicion_else bloque condicion_end .

    ID              reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    DRAW            reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    IF              reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    FOR             reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    WHILE           reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    INT             reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    FLOAT           reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    BOOLEAN         reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    ARRAY           reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    END             reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    RETURN          reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)
    ELSE            reduce using rule 101 (condicion_2 -> condicion_else bloque condicion_end .)


state 259

    (125) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen . bloque for_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (153) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (97) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (104) ciclo -> . for
    (105) ciclo -> . while
    (106) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (99) condicion_id -> . IF
    (125) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (129) for_init -> . FOR
    (132) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 153 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    for_init                       shift and go to state 63
    bloque                         shift and go to state 261
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 260

    (128) for_rparen -> RPAREN .

    ID              reduce using rule 128 (for_rparen -> RPAREN .)
    DRAW            reduce using rule 128 (for_rparen -> RPAREN .)
    IF              reduce using rule 128 (for_rparen -> RPAREN .)
    FOR             reduce using rule 128 (for_rparen -> RPAREN .)
    WHILE           reduce using rule 128 (for_rparen -> RPAREN .)
    INT             reduce using rule 128 (for_rparen -> RPAREN .)
    FLOAT           reduce using rule 128 (for_rparen -> RPAREN .)
    BOOLEAN         reduce using rule 128 (for_rparen -> RPAREN .)
    ARRAY           reduce using rule 128 (for_rparen -> RPAREN .)
    END             reduce using rule 128 (for_rparen -> RPAREN .)


state 261

    (125) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque . for_end
    (130) for_end -> . END

    END             shift and go to state 263

    for_end                        shift and go to state 262

state 262

    (125) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .

    ID              reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    DRAW            reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    IF              reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    FOR             reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    WHILE           reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    INT             reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    FLOAT           reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    BOOLEAN         reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    ARRAY           reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    END             reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    RETURN          reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    ELSE            reduce using rule 125 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)


state 263

    (130) for_end -> END .

    ID              reduce using rule 130 (for_end -> END .)
    DRAW            reduce using rule 130 (for_end -> END .)
    IF              reduce using rule 130 (for_end -> END .)
    FOR             reduce using rule 130 (for_end -> END .)
    WHILE           reduce using rule 130 (for_end -> END .)
    INT             reduce using rule 130 (for_end -> END .)
    FLOAT           reduce using rule 130 (for_end -> END .)
    BOOLEAN         reduce using rule 130 (for_end -> END .)
    ARRAY           reduce using rule 130 (for_end -> END .)
    END             reduce using rule 130 (for_end -> END .)
    RETURN          reduce using rule 130 (for_end -> END .)
    ELSE            reduce using rule 130 (for_end -> END .)

