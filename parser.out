Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones programa_end
Rule 2     programa -> funciones programa_end
Rule 3     programa_end -> empty
Rule 4     funciones -> funciones_2 main
Rule 5     funciones_2 -> funcion funciones_2
Rule 6     funciones_2 -> empty
Rule 7     globales -> global_1 vars globales_2
Rule 8     globales_2 -> global_1 vars globales_2
Rule 9     globales_2 -> empty
Rule 10    global_1 -> GLOBAL
Rule 11    bloque -> estatuto bloque
Rule 12    bloque -> empty
Rule 13    data_type -> INT
Rule 14    data_type -> FLOAT
Rule 15    data_type -> BOOLEAN
Rule 16    data_type_func -> INT
Rule 17    data_type_func -> FLOAT
Rule 18    data_type_func -> BOOLEAN
Rule 19    main -> main_1 bloque END
Rule 20    main_1 -> MAIN LPAREN RPAREN
Rule 21    estatuto -> asignacion
Rule 22    estatuto -> condicion
Rule 23    estatuto -> ciclo
Rule 24    estatuto -> accion
Rule 25    estatuto -> vars
Rule 26    estatuto -> llamada SEMICOLON
Rule 27    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 28    asignacion_id -> ID
Rule 29    asignacion_2 -> asignacion_equal super_exp
Rule 30    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp
Rule 31    asignacion_equal -> EQUAL
Rule 32    asignacion_3 -> RBRACKET
Rule 33    asignacion_3 -> COMMA exp RBRACKET
Rule 34    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 35    vars -> vars_id vars2
Rule 36    vars -> vars_aux
Rule 37    vars_id -> data_type ID
Rule 38    vars_aux -> array ID vars3
Rule 39    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 40    array_2 -> COMMA CTE_I
Rule 41    array_2 -> empty
Rule 42    vars2 -> asignacion_equal super_exp SEMICOLON
Rule 43    vars2 -> SEMICOLON
Rule 44    vars3 -> EQUAL def_array SEMICOLON
Rule 45    vars3 -> SEMICOLON
Rule 46    llamada -> llamada_id llamada_2
Rule 47    llamada_id -> ID LPAREN
Rule 48    llamada_2 -> llamada_exp llamada_rparen
Rule 49    llamada_2 -> llamada_rparen
Rule 50    llamada_rparen -> RPAREN
Rule 51    llamada_exp -> llamada_super_exp llamada_exp2
Rule 52    llamada_super_exp -> super_exp
Rule 53    llamada_exp2 -> llamada_comma llamada_exp
Rule 54    llamada_exp2 -> empty
Rule 55    llamada_comma -> COMMA
Rule 56    def_array -> LBRACKET def_array_2
Rule 57    def_array_2 -> def_array_cte RBRACKET
Rule 58    def_array_2 -> RBRACKET
Rule 59    def_array_cte -> var_cte def_array_cte_2
Rule 60    def_array_cte_2 -> COMMA def_array_cte
Rule 61    def_array_cte_2 -> empty
Rule 62    super_exp -> expresion super_exp_2
Rule 63    super_exp_2 -> logicop super_exp
Rule 64    super_exp_2 -> empty
Rule 65    expresion -> exp expresion_2
Rule 66    expresion_2 -> relop exp
Rule 67    expresion_2 -> empty
Rule 68    relop -> GREATER
Rule 69    relop -> GREATEREQUAL
Rule 70    relop -> LESS
Rule 71    relop -> LESSEQUAL
Rule 72    relop -> DEQUAL
Rule 73    relop -> DISTINT
Rule 74    exp -> termino exp_2
Rule 75    exp_2 -> addop exp
Rule 76    exp_2 -> empty
Rule 77    termino -> factor termino_2
Rule 78    termino_2 -> timesop termino
Rule 79    termino_2 -> empty
Rule 80    var_cte -> var_cte_1
Rule 81    var_cte -> var_cte_i
Rule 82    var_cte -> var_cte_f
Rule 83    var_cte -> var_cte_b
Rule 84    var_cte -> llamada
Rule 85    var_cte_i -> CTE_I
Rule 86    var_cte_f -> CTE_F
Rule 87    var_cte_b -> TRUE
Rule 88    var_cte_b -> FALSE
Rule 89    var_cte_1 -> ID var_cte_2
Rule 90    var_cte_2 -> LBRACKET exp var_cte_3
Rule 91    var_cte_2 -> empty
Rule 92    var_cte_3 -> RBRACKET
Rule 93    var_cte_3 -> COMMA exp RBRACKET
Rule 94    factor -> lparen_factor super_exp rparen_factor
Rule 95    factor -> addop var_cte
Rule 96    factor -> var_cte
Rule 97    lparen_factor -> LPAREN
Rule 98    rparen_factor -> RPAREN
Rule 99    condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
Rule 100   rparen_condicion -> RPAREN
Rule 101   condicion_id -> IF
Rule 102   condicion_2 -> condicion_end
Rule 103   condicion_2 -> condicion_else bloque condicion_end
Rule 104   condicion_else -> ELSE
Rule 105   condicion_end -> END
Rule 106   ciclo -> for
Rule 107   ciclo -> while
Rule 108   accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 109   accion_params -> LPAREN accion_params_2
Rule 110   accion_params_2 -> accion_params_cte RPAREN
Rule 111   accion_params_2 -> RPAREN
Rule 112   accion_params_cte -> var_cte accion_params_cte_2
Rule 113   accion_params_cte_2 -> COMMA accion_params_cte
Rule 114   accion_params_cte_2 -> empty
Rule 115   accion_nombre -> SETPOSITION
Rule 116   accion_nombre -> CIRCLE
Rule 117   accion_nombre -> RIGHT
Rule 118   accion_nombre -> LEFT
Rule 119   accion_nombre -> HIDE
Rule 120   accion_nombre -> SQUARE
Rule 121   accion_nombre -> CLEAR
Rule 122   accion_nombre -> SHOW
Rule 123   accion_nombre -> BACK
Rule 124   accion_nombre -> SPEED
Rule 125   accion_nombre -> FORWARD
Rule 126   accion_nombre -> SETCOLOR
Rule 127   for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
Rule 128   for_exp -> exp
Rule 129   for_exp2 -> exp
Rule 130   for_rparen -> RPAREN
Rule 131   for_init -> FOR
Rule 132   for_end -> END
Rule 133   while -> while_init LPAREN super_exp rparen_while bloque while_end
Rule 134   while_init -> WHILE
Rule 135   rparen_while -> RPAREN
Rule 136   while_end -> END
Rule 137   funcion -> DEF funcion_aux
Rule 138   funcion_aux -> funcion_1 var_local bloque funcion_2
Rule 139   funcion_aux -> funcion_void var_local bloque funcion_end
Rule 140   funcion_void -> VOID ID
Rule 141   funcion_1 -> data_type_func ID
Rule 142   funcion_2 -> RETURN super_exp SEMICOLON END
Rule 143   funcion_end -> END
Rule 144   var_local -> LPAREN var_local_2 RPAREN
Rule 145   var_local_2 -> var_local_2_1 var_local_3
Rule 146   var_local_2 -> empty
Rule 147   var_local_2_1 -> data_type ID
Rule 148   var_local_3 -> COMMA var_local_2
Rule 149   var_local_3 -> empty
Rule 150   addop -> PLUS
Rule 151   addop -> MINUS
Rule 152   timesop -> TIMES
Rule 153   timesop -> DIVIDE
Rule 154   timesop -> PERCENT
Rule 155   logicop -> AND
Rule 156   logicop -> OR
Rule 157   empty -> <empty>

Terminals, with rules where they appear

AND                  : 155
ARRAY                : 39
BACK                 : 123
BOOLEAN              : 15 18
CIRCLE               : 116
CLEAR                : 121
COMMA                : 33 39 40 55 60 93 113 127 127 148
CTE_F                : 86
CTE_I                : 39 40 85
DEF                  : 137
DEQUAL               : 72
DISTINT              : 73
DIVIDE               : 153
DRAW                 : 34
ELSE                 : 104
END                  : 19 105 132 136 142 143
EQUAL                : 30 31 34 44
FALSE                : 88
FLOAT                : 14 17
FOR                  : 131
FORWARD              : 125
GLOBAL               : 10
GREATER              : 39 68
GREATEREQUAL         : 69
HIDE                 : 119
ID                   : 28 34 37 38 47 89 108 140 141 147
IF                   : 101
INT                  : 13 16
LBRACKET             : 30 56 90
LEFT                 : 118
LESS                 : 39 70
LESSEQUAL            : 71
LPAREN               : 20 34 47 97 99 109 127 133 144
MAIN                 : 20
MINUS                : 151
NEWDRAW              : 34
OR                   : 156
PERCENT              : 154
PLUS                 : 150
POINT                : 108
RBRACKET             : 32 33 57 58 92 93
RETURN               : 142
RIGHT                : 117
RPAREN               : 20 34 50 98 100 110 111 130 135 144
SEMICOLON            : 26 27 34 42 43 44 45 108 142
SETCOLOR             : 126
SETPOSITION          : 115
SHOW                 : 122
SPEED                : 124
SQUARE               : 120
TIMES                : 152
TRUE                 : 87
VOID                 : 140
WHILE                : 134
error                : 

Nonterminals, with rules where they appear

accion               : 24
accion_nombre        : 108
accion_params        : 108
accion_params_2      : 109
accion_params_cte    : 110 113
accion_params_cte_2  : 112
addop                : 75 95
array                : 38
array_2              : 39
asignacion           : 21
asignacion_2         : 27
asignacion_3         : 30
asignacion_equal     : 29 42
asignacion_id        : 27
bloque               : 11 19 99 103 127 133 138 139
ciclo                : 23
condicion            : 22
condicion_2          : 99
condicion_else       : 103
condicion_end        : 102 103
condicion_id         : 99
data_type            : 37 39 147
data_type_func       : 141
def_array            : 44
def_array_2          : 56
def_array_cte        : 57 60
def_array_cte_2      : 59
empty                : 3 6 9 12 41 54 61 64 67 76 79 91 114 146 149
estatuto             : 11
exp                  : 30 33 65 66 75 90 93 128 129
exp_2                : 74
expresion            : 62
expresion_2          : 65
factor               : 77
for                  : 106
for_end              : 127
for_exp              : 127 127
for_exp2             : 127
for_init             : 127
for_rparen           : 127
funcion              : 5
funcion_1            : 138
funcion_2            : 138
funcion_aux          : 137
funcion_end          : 139
funcion_void         : 139
funciones            : 1 2
funciones_2          : 4 5
global_1             : 7 8
globales             : 1
globales_2           : 7 8
llamada              : 26 84
llamada_2            : 46
llamada_comma        : 53
llamada_exp          : 48 53
llamada_exp2         : 51
llamada_id           : 46
llamada_rparen       : 48 49
llamada_super_exp    : 51
logicop              : 63
lparen_factor        : 94
main                 : 4
main_1               : 19
programa             : 0
programa_end         : 1 2
relop                : 66
rparen_condicion     : 99
rparen_factor        : 94
rparen_while         : 133
super_exp            : 29 30 42 52 63 94 99 133 142
super_exp_2          : 62
termino              : 74 78
termino_2            : 77
timesop              : 78
var_cte              : 59 95 96 112
var_cte_1            : 80
var_cte_2            : 89
var_cte_3            : 90
var_cte_b            : 83
var_cte_f            : 82
var_cte_i            : 81
var_local            : 138 139
var_local_2          : 144 148
var_local_2_1        : 145
var_local_3          : 145
vars                 : 7 8 25
vars2                : 35
vars3                : 38
vars_aux             : 36
vars_id              : 35
while                : 107
while_end            : 133
while_init           : 133

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones programa_end
    (2) programa -> . funciones programa_end
    (7) globales -> . global_1 vars globales_2
    (4) funciones -> . funciones_2 main
    (10) global_1 -> . GLOBAL
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (137) funcion -> . DEF funcion_aux
    (157) empty -> .

    GLOBAL          shift and go to state 1
    DEF             shift and go to state 6
    MAIN            reduce using rule 157 (empty -> .)

    globales                       shift and go to state 2
    funciones_2                    shift and go to state 3
    global_1                       shift and go to state 4
    programa                       shift and go to state 5
    funciones                      shift and go to state 7
    empty                          shift and go to state 8
    funcion                        shift and go to state 9

state 1

    (10) global_1 -> GLOBAL .

    DRAW            reduce using rule 10 (global_1 -> GLOBAL .)
    INT             reduce using rule 10 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 10 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 10 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 10 (global_1 -> GLOBAL .)


state 2

    (1) programa -> globales . funciones programa_end
    (4) funciones -> . funciones_2 main
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (137) funcion -> . DEF funcion_aux
    (157) empty -> .

    DEF             shift and go to state 6
    MAIN            reduce using rule 157 (empty -> .)

    funciones                      shift and go to state 10
    funciones_2                    shift and go to state 3
    empty                          shift and go to state 8
    funcion                        shift and go to state 9

state 3

    (4) funciones -> funciones_2 . main
    (19) main -> . main_1 bloque END
    (20) main_1 -> . MAIN LPAREN RPAREN

    MAIN            shift and go to state 11

    main_1                         shift and go to state 12
    main                           shift and go to state 13

state 4

    (7) globales -> global_1 . vars globales_2
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 19
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    vars_id                        shift and go to state 14
    vars                           shift and go to state 15
    vars_aux                       shift and go to state 16
    data_type                      shift and go to state 20
    array                          shift and go to state 17

state 5

    (0) S' -> programa .



state 6

    (137) funcion -> DEF . funcion_aux
    (138) funcion_aux -> . funcion_1 var_local bloque funcion_2
    (139) funcion_aux -> . funcion_void var_local bloque funcion_end
    (141) funcion_1 -> . data_type_func ID
    (140) funcion_void -> . VOID ID
    (16) data_type_func -> . INT
    (17) data_type_func -> . FLOAT
    (18) data_type_func -> . BOOLEAN

    VOID            shift and go to state 26
    INT             shift and go to state 24
    FLOAT           shift and go to state 27
    BOOLEAN         shift and go to state 29

    funcion_void                   shift and go to state 25
    data_type_func                 shift and go to state 28
    funcion_aux                    shift and go to state 30
    funcion_1                      shift and go to state 31

state 7

    (2) programa -> funciones . programa_end
    (3) programa_end -> . empty
    (157) empty -> .

    $end            reduce using rule 157 (empty -> .)

    programa_end                   shift and go to state 32
    empty                          shift and go to state 33

state 8

    (6) funciones_2 -> empty .

    MAIN            reduce using rule 6 (funciones_2 -> empty .)


state 9

    (5) funciones_2 -> funcion . funciones_2
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (137) funcion -> . DEF funcion_aux
    (157) empty -> .

    DEF             shift and go to state 6
    MAIN            reduce using rule 157 (empty -> .)

    funciones_2                    shift and go to state 34
    empty                          shift and go to state 8
    funcion                        shift and go to state 9

state 10

    (1) programa -> globales funciones . programa_end
    (3) programa_end -> . empty
    (157) empty -> .

    $end            reduce using rule 157 (empty -> .)

    programa_end                   shift and go to state 35
    empty                          shift and go to state 33

state 11

    (20) main_1 -> MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 36


state 12

    (19) main -> main_1 . bloque END
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 42
    array                          shift and go to state 17
    ciclo                          shift and go to state 43
    for                            shift and go to state 52
    estatuto                       shift and go to state 44
    llamada                        shift and go to state 45
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55
    condicion_id                   shift and go to state 56

state 13

    (4) funciones -> funciones_2 main .

    $end            reduce using rule 4 (funciones -> funciones_2 main .)


state 14

    (35) vars -> vars_id . vars2
    (42) vars2 -> . asignacion_equal super_exp SEMICOLON
    (43) vars2 -> . SEMICOLON
    (31) asignacion_equal -> . EQUAL

    SEMICOLON       shift and go to state 57
    EQUAL           shift and go to state 58

    vars2                          shift and go to state 59
    asignacion_equal               shift and go to state 60

state 15

    (7) globales -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (157) empty -> .

    GLOBAL          shift and go to state 1
    DEF             reduce using rule 157 (empty -> .)
    MAIN            reduce using rule 157 (empty -> .)

    globales_2                     shift and go to state 61
    global_1                       shift and go to state 62
    empty                          shift and go to state 63

state 16

    (36) vars -> vars_aux .

    ID              reduce using rule 36 (vars -> vars_aux .)
    DRAW            reduce using rule 36 (vars -> vars_aux .)
    IF              reduce using rule 36 (vars -> vars_aux .)
    FOR             reduce using rule 36 (vars -> vars_aux .)
    WHILE           reduce using rule 36 (vars -> vars_aux .)
    INT             reduce using rule 36 (vars -> vars_aux .)
    FLOAT           reduce using rule 36 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 36 (vars -> vars_aux .)
    ARRAY           reduce using rule 36 (vars -> vars_aux .)
    END             reduce using rule 36 (vars -> vars_aux .)
    ELSE            reduce using rule 36 (vars -> vars_aux .)
    GLOBAL          reduce using rule 36 (vars -> vars_aux .)
    DEF             reduce using rule 36 (vars -> vars_aux .)
    MAIN            reduce using rule 36 (vars -> vars_aux .)
    RETURN          reduce using rule 36 (vars -> vars_aux .)


state 17

    (38) vars_aux -> array . ID vars3

    ID              shift and go to state 64


state 18

    (39) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 65


state 19

    (34) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 66


state 20

    (37) vars_id -> data_type . ID

    ID              shift and go to state 67


state 21

    (13) data_type -> INT .

    ID              reduce using rule 13 (data_type -> INT .)
    COMMA           reduce using rule 13 (data_type -> INT .)


state 22

    (14) data_type -> FLOAT .

    ID              reduce using rule 14 (data_type -> FLOAT .)
    COMMA           reduce using rule 14 (data_type -> FLOAT .)


state 23

    (15) data_type -> BOOLEAN .

    ID              reduce using rule 15 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 15 (data_type -> BOOLEAN .)


state 24

    (16) data_type_func -> INT .

    ID              reduce using rule 16 (data_type_func -> INT .)


state 25

    (139) funcion_aux -> funcion_void . var_local bloque funcion_end
    (144) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 69

    var_local                      shift and go to state 68

state 26

    (140) funcion_void -> VOID . ID

    ID              shift and go to state 70


state 27

    (17) data_type_func -> FLOAT .

    ID              reduce using rule 17 (data_type_func -> FLOAT .)


state 28

    (141) funcion_1 -> data_type_func . ID

    ID              shift and go to state 71


state 29

    (18) data_type_func -> BOOLEAN .

    ID              reduce using rule 18 (data_type_func -> BOOLEAN .)


state 30

    (137) funcion -> DEF funcion_aux .

    DEF             reduce using rule 137 (funcion -> DEF funcion_aux .)
    MAIN            reduce using rule 137 (funcion -> DEF funcion_aux .)


state 31

    (138) funcion_aux -> funcion_1 . var_local bloque funcion_2
    (144) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 69

    var_local                      shift and go to state 72

state 32

    (2) programa -> funciones programa_end .

    $end            reduce using rule 2 (programa -> funciones programa_end .)


state 33

    (3) programa_end -> empty .

    $end            reduce using rule 3 (programa_end -> empty .)


state 34

    (5) funciones_2 -> funcion funciones_2 .

    MAIN            reduce using rule 5 (funciones_2 -> funcion funciones_2 .)


state 35

    (1) programa -> globales funciones programa_end .

    $end            reduce using rule 1 (programa -> globales funciones programa_end .)


state 36

    (20) main_1 -> MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 73


state 37

    (27) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (29) asignacion_2 -> . asignacion_equal super_exp
    (30) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL super_exp
    (31) asignacion_equal -> . EQUAL

    LBRACKET        shift and go to state 75
    EQUAL           shift and go to state 58

    asignacion_2                   shift and go to state 74
    asignacion_equal               shift and go to state 76

state 38

    (25) estatuto -> vars .

    ID              reduce using rule 25 (estatuto -> vars .)
    DRAW            reduce using rule 25 (estatuto -> vars .)
    IF              reduce using rule 25 (estatuto -> vars .)
    FOR             reduce using rule 25 (estatuto -> vars .)
    WHILE           reduce using rule 25 (estatuto -> vars .)
    INT             reduce using rule 25 (estatuto -> vars .)
    FLOAT           reduce using rule 25 (estatuto -> vars .)
    BOOLEAN         reduce using rule 25 (estatuto -> vars .)
    ARRAY           reduce using rule 25 (estatuto -> vars .)
    END             reduce using rule 25 (estatuto -> vars .)
    RETURN          reduce using rule 25 (estatuto -> vars .)
    ELSE            reduce using rule 25 (estatuto -> vars .)


state 39

    (127) for -> for_init . LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end

    LPAREN          shift and go to state 77


state 40

    (134) while_init -> WHILE .

    LPAREN          reduce using rule 134 (while_init -> WHILE .)


state 41

    (131) for_init -> FOR .

    LPAREN          reduce using rule 131 (for_init -> FOR .)


state 42

    (19) main -> main_1 bloque . END

    END             shift and go to state 78


state 43

    (23) estatuto -> ciclo .

    ID              reduce using rule 23 (estatuto -> ciclo .)
    DRAW            reduce using rule 23 (estatuto -> ciclo .)
    IF              reduce using rule 23 (estatuto -> ciclo .)
    FOR             reduce using rule 23 (estatuto -> ciclo .)
    WHILE           reduce using rule 23 (estatuto -> ciclo .)
    INT             reduce using rule 23 (estatuto -> ciclo .)
    FLOAT           reduce using rule 23 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 23 (estatuto -> ciclo .)
    ARRAY           reduce using rule 23 (estatuto -> ciclo .)
    END             reduce using rule 23 (estatuto -> ciclo .)
    RETURN          reduce using rule 23 (estatuto -> ciclo .)
    ELSE            reduce using rule 23 (estatuto -> ciclo .)


state 44

    (11) bloque -> estatuto . bloque
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ELSE            reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 79
    array                          shift and go to state 17
    ciclo                          shift and go to state 43
    for                            shift and go to state 52
    llamada                        shift and go to state 45
    estatuto                       shift and go to state 44
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55
    condicion_id                   shift and go to state 56

state 45

    (26) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 80


state 46

    (22) estatuto -> condicion .

    ID              reduce using rule 22 (estatuto -> condicion .)
    DRAW            reduce using rule 22 (estatuto -> condicion .)
    IF              reduce using rule 22 (estatuto -> condicion .)
    FOR             reduce using rule 22 (estatuto -> condicion .)
    WHILE           reduce using rule 22 (estatuto -> condicion .)
    INT             reduce using rule 22 (estatuto -> condicion .)
    FLOAT           reduce using rule 22 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 22 (estatuto -> condicion .)
    ARRAY           reduce using rule 22 (estatuto -> condicion .)
    END             reduce using rule 22 (estatuto -> condicion .)
    RETURN          reduce using rule 22 (estatuto -> condicion .)
    ELSE            reduce using rule 22 (estatuto -> condicion .)


state 47

    (133) while -> while_init . LPAREN super_exp rparen_while bloque while_end

    LPAREN          shift and go to state 81


state 48

    (101) condicion_id -> IF .

    LPAREN          reduce using rule 101 (condicion_id -> IF .)


state 49

    (12) bloque -> empty .

    RETURN          reduce using rule 12 (bloque -> empty .)
    END             reduce using rule 12 (bloque -> empty .)
    ELSE            reduce using rule 12 (bloque -> empty .)


state 50

    (108) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (28) asignacion_id -> ID .
    (47) llamada_id -> ID . LPAREN

    POINT           shift and go to state 82
    LBRACKET        reduce using rule 28 (asignacion_id -> ID .)
    EQUAL           reduce using rule 28 (asignacion_id -> ID .)
    LPAREN          shift and go to state 83


state 51

    (24) estatuto -> accion .

    ID              reduce using rule 24 (estatuto -> accion .)
    DRAW            reduce using rule 24 (estatuto -> accion .)
    IF              reduce using rule 24 (estatuto -> accion .)
    FOR             reduce using rule 24 (estatuto -> accion .)
    WHILE           reduce using rule 24 (estatuto -> accion .)
    INT             reduce using rule 24 (estatuto -> accion .)
    FLOAT           reduce using rule 24 (estatuto -> accion .)
    BOOLEAN         reduce using rule 24 (estatuto -> accion .)
    ARRAY           reduce using rule 24 (estatuto -> accion .)
    END             reduce using rule 24 (estatuto -> accion .)
    RETURN          reduce using rule 24 (estatuto -> accion .)
    ELSE            reduce using rule 24 (estatuto -> accion .)


state 52

    (106) ciclo -> for .

    ID              reduce using rule 106 (ciclo -> for .)
    DRAW            reduce using rule 106 (ciclo -> for .)
    IF              reduce using rule 106 (ciclo -> for .)
    FOR             reduce using rule 106 (ciclo -> for .)
    WHILE           reduce using rule 106 (ciclo -> for .)
    INT             reduce using rule 106 (ciclo -> for .)
    FLOAT           reduce using rule 106 (ciclo -> for .)
    BOOLEAN         reduce using rule 106 (ciclo -> for .)
    ARRAY           reduce using rule 106 (ciclo -> for .)
    END             reduce using rule 106 (ciclo -> for .)
    RETURN          reduce using rule 106 (ciclo -> for .)
    ELSE            reduce using rule 106 (ciclo -> for .)


state 53

    (21) estatuto -> asignacion .

    ID              reduce using rule 21 (estatuto -> asignacion .)
    DRAW            reduce using rule 21 (estatuto -> asignacion .)
    IF              reduce using rule 21 (estatuto -> asignacion .)
    FOR             reduce using rule 21 (estatuto -> asignacion .)
    WHILE           reduce using rule 21 (estatuto -> asignacion .)
    INT             reduce using rule 21 (estatuto -> asignacion .)
    FLOAT           reduce using rule 21 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 21 (estatuto -> asignacion .)
    ARRAY           reduce using rule 21 (estatuto -> asignacion .)
    END             reduce using rule 21 (estatuto -> asignacion .)
    RETURN          reduce using rule 21 (estatuto -> asignacion .)
    ELSE            reduce using rule 21 (estatuto -> asignacion .)


state 54

    (107) ciclo -> while .

    ID              reduce using rule 107 (ciclo -> while .)
    DRAW            reduce using rule 107 (ciclo -> while .)
    IF              reduce using rule 107 (ciclo -> while .)
    FOR             reduce using rule 107 (ciclo -> while .)
    WHILE           reduce using rule 107 (ciclo -> while .)
    INT             reduce using rule 107 (ciclo -> while .)
    FLOAT           reduce using rule 107 (ciclo -> while .)
    BOOLEAN         reduce using rule 107 (ciclo -> while .)
    ARRAY           reduce using rule 107 (ciclo -> while .)
    END             reduce using rule 107 (ciclo -> while .)
    RETURN          reduce using rule 107 (ciclo -> while .)
    ELSE            reduce using rule 107 (ciclo -> while .)


state 55

    (46) llamada -> llamada_id . llamada_2
    (48) llamada_2 -> . llamada_exp llamada_rparen
    (49) llamada_2 -> . llamada_rparen
    (51) llamada_exp -> . llamada_super_exp llamada_exp2
    (50) llamada_rparen -> . RPAREN
    (52) llamada_super_exp -> . super_exp
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    RPAREN          shift and go to state 90
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    llamada_super_exp              shift and go to state 84
    llamada_2                      shift and go to state 85
    var_cte                        shift and go to state 86
    super_exp                      shift and go to state 89
    llamada_rparen                 shift and go to state 91
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    llamada_exp                    shift and go to state 100
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108
    termino                        shift and go to state 109

state 56

    (99) condicion -> condicion_id . LPAREN super_exp rparen_condicion bloque condicion_2

    LPAREN          shift and go to state 110


state 57

    (43) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 43 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 43 (vars2 -> SEMICOLON .)
    MAIN            reduce using rule 43 (vars2 -> SEMICOLON .)
    ID              reduce using rule 43 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 43 (vars2 -> SEMICOLON .)
    IF              reduce using rule 43 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 43 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 43 (vars2 -> SEMICOLON .)
    INT             reduce using rule 43 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 43 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 43 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 43 (vars2 -> SEMICOLON .)
    END             reduce using rule 43 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 43 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 43 (vars2 -> SEMICOLON .)


state 58

    (31) asignacion_equal -> EQUAL .

    LPAREN          reduce using rule 31 (asignacion_equal -> EQUAL .)
    PLUS            reduce using rule 31 (asignacion_equal -> EQUAL .)
    MINUS           reduce using rule 31 (asignacion_equal -> EQUAL .)
    ID              reduce using rule 31 (asignacion_equal -> EQUAL .)
    CTE_I           reduce using rule 31 (asignacion_equal -> EQUAL .)
    CTE_F           reduce using rule 31 (asignacion_equal -> EQUAL .)
    TRUE            reduce using rule 31 (asignacion_equal -> EQUAL .)
    FALSE           reduce using rule 31 (asignacion_equal -> EQUAL .)


state 59

    (35) vars -> vars_id vars2 .

    ID              reduce using rule 35 (vars -> vars_id vars2 .)
    DRAW            reduce using rule 35 (vars -> vars_id vars2 .)
    IF              reduce using rule 35 (vars -> vars_id vars2 .)
    FOR             reduce using rule 35 (vars -> vars_id vars2 .)
    WHILE           reduce using rule 35 (vars -> vars_id vars2 .)
    INT             reduce using rule 35 (vars -> vars_id vars2 .)
    FLOAT           reduce using rule 35 (vars -> vars_id vars2 .)
    BOOLEAN         reduce using rule 35 (vars -> vars_id vars2 .)
    ARRAY           reduce using rule 35 (vars -> vars_id vars2 .)
    END             reduce using rule 35 (vars -> vars_id vars2 .)
    ELSE            reduce using rule 35 (vars -> vars_id vars2 .)
    GLOBAL          reduce using rule 35 (vars -> vars_id vars2 .)
    DEF             reduce using rule 35 (vars -> vars_id vars2 .)
    MAIN            reduce using rule 35 (vars -> vars_id vars2 .)
    RETURN          reduce using rule 35 (vars -> vars_id vars2 .)


state 60

    (42) vars2 -> asignacion_equal . super_exp SEMICOLON
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    super_exp                      shift and go to state 111
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 61

    (7) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 7 (globales -> global_1 vars globales_2 .)
    MAIN            reduce using rule 7 (globales -> global_1 vars globales_2 .)


state 62

    (8) globales_2 -> global_1 . vars globales_2
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 19
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    vars_id                        shift and go to state 14
    vars                           shift and go to state 112
    vars_aux                       shift and go to state 16
    data_type                      shift and go to state 20
    array                          shift and go to state 17

state 63

    (9) globales_2 -> empty .

    DEF             reduce using rule 9 (globales_2 -> empty .)
    MAIN            reduce using rule 9 (globales_2 -> empty .)


state 64

    (38) vars_aux -> array ID . vars3
    (44) vars3 -> . EQUAL def_array SEMICOLON
    (45) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 114
    SEMICOLON       shift and go to state 113

    vars3                          shift and go to state 115

state 65

    (39) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23

    data_type                      shift and go to state 116

state 66

    (34) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 117


state 67

    (37) vars_id -> data_type ID .

    SEMICOLON       reduce using rule 37 (vars_id -> data_type ID .)
    EQUAL           reduce using rule 37 (vars_id -> data_type ID .)


state 68

    (139) funcion_aux -> funcion_void var_local . bloque funcion_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 118
    array                          shift and go to state 17
    ciclo                          shift and go to state 43
    condicion_id                   shift and go to state 56
    for                            shift and go to state 52
    estatuto                       shift and go to state 44
    llamada                        shift and go to state 45
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55

state 69

    (144) var_local -> LPAREN . var_local_2 RPAREN
    (145) var_local_2 -> . var_local_2_1 var_local_3
    (146) var_local_2 -> . empty
    (147) var_local_2_1 -> . data_type ID
    (157) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 157 (empty -> .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23

    var_local_2_1                  shift and go to state 121
    var_local_2                    shift and go to state 120
    data_type                      shift and go to state 119
    empty                          shift and go to state 122

state 70

    (140) funcion_void -> VOID ID .

    LPAREN          reduce using rule 140 (funcion_void -> VOID ID .)


state 71

    (141) funcion_1 -> data_type_func ID .

    LPAREN          reduce using rule 141 (funcion_1 -> data_type_func ID .)


state 72

    (138) funcion_aux -> funcion_1 var_local . bloque funcion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 123
    ciclo                          shift and go to state 43
    for                            shift and go to state 52
    estatuto                       shift and go to state 44
    llamada                        shift and go to state 45
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    array                          shift and go to state 17
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55
    condicion_id                   shift and go to state 56

state 73

    (20) main_1 -> MAIN LPAREN RPAREN .

    ID              reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    IF              reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    FOR             reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    INT             reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)
    END             reduce using rule 20 (main_1 -> MAIN LPAREN RPAREN .)


state 74

    (27) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 124


state 75

    (30) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL super_exp
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    addop                          shift and go to state 97
    lparen_factor                  shift and go to state 95
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 86
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 109
    exp                            shift and go to state 125
    factor                         shift and go to state 98
    var_cte_f                      shift and go to state 107
    llamada                        shift and go to state 93
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 76

    (29) asignacion_2 -> asignacion_equal . super_exp
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    super_exp                      shift and go to state 126
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 77

    (127) for -> for_init LPAREN . for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (128) for_exp -> . exp
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    for_exp                        shift and go to state 127
    factor                         shift and go to state 98
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 128
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 78

    (19) main -> main_1 bloque END .

    $end            reduce using rule 19 (main -> main_1 bloque END .)


state 79

    (11) bloque -> estatuto bloque .

    RETURN          reduce using rule 11 (bloque -> estatuto bloque .)
    END             reduce using rule 11 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 11 (bloque -> estatuto bloque .)


state 80

    (26) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 26 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 26 (estatuto -> llamada SEMICOLON .)


state 81

    (133) while -> while_init LPAREN . super_exp rparen_while bloque while_end
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    super_exp                      shift and go to state 129
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 82

    (108) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (115) accion_nombre -> . SETPOSITION
    (116) accion_nombre -> . CIRCLE
    (117) accion_nombre -> . RIGHT
    (118) accion_nombre -> . LEFT
    (119) accion_nombre -> . HIDE
    (120) accion_nombre -> . SQUARE
    (121) accion_nombre -> . CLEAR
    (122) accion_nombre -> . SHOW
    (123) accion_nombre -> . BACK
    (124) accion_nombre -> . SPEED
    (125) accion_nombre -> . FORWARD
    (126) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 140
    CIRCLE          shift and go to state 138
    RIGHT           shift and go to state 130
    LEFT            shift and go to state 142
    HIDE            shift and go to state 131
    SQUARE          shift and go to state 137
    CLEAR           shift and go to state 134
    SHOW            shift and go to state 135
    BACK            shift and go to state 136
    SPEED           shift and go to state 141
    FORWARD         shift and go to state 139
    SETCOLOR        shift and go to state 132

    accion_nombre                  shift and go to state 133

state 83

    (47) llamada_id -> ID LPAREN .

    RPAREN          reduce using rule 47 (llamada_id -> ID LPAREN .)
    LPAREN          reduce using rule 47 (llamada_id -> ID LPAREN .)
    PLUS            reduce using rule 47 (llamada_id -> ID LPAREN .)
    MINUS           reduce using rule 47 (llamada_id -> ID LPAREN .)
    ID              reduce using rule 47 (llamada_id -> ID LPAREN .)
    CTE_I           reduce using rule 47 (llamada_id -> ID LPAREN .)
    CTE_F           reduce using rule 47 (llamada_id -> ID LPAREN .)
    TRUE            reduce using rule 47 (llamada_id -> ID LPAREN .)
    FALSE           reduce using rule 47 (llamada_id -> ID LPAREN .)


state 84

    (51) llamada_exp -> llamada_super_exp . llamada_exp2
    (53) llamada_exp2 -> . llamada_comma llamada_exp
    (54) llamada_exp2 -> . empty
    (55) llamada_comma -> . COMMA
    (157) empty -> .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 157 (empty -> .)

    llamada_exp2                   shift and go to state 143
    empty                          shift and go to state 145
    llamada_comma                  shift and go to state 146

state 85

    (46) llamada -> llamada_id llamada_2 .

    TIMES           reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    DIVIDE          reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    PERCENT         reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    PLUS            reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    MINUS           reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    RBRACKET        reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    RPAREN          reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    COMMA           reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    GREATER         reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    GREATEREQUAL    reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    LESS            reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    LESSEQUAL       reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    DEQUAL          reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    DISTINT         reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    AND             reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    OR              reduce using rule 46 (llamada -> llamada_id llamada_2 .)
    SEMICOLON       reduce using rule 46 (llamada -> llamada_id llamada_2 .)


state 86

    (96) factor -> var_cte .

    TIMES           reduce using rule 96 (factor -> var_cte .)
    DIVIDE          reduce using rule 96 (factor -> var_cte .)
    PERCENT         reduce using rule 96 (factor -> var_cte .)
    PLUS            reduce using rule 96 (factor -> var_cte .)
    MINUS           reduce using rule 96 (factor -> var_cte .)
    RBRACKET        reduce using rule 96 (factor -> var_cte .)
    COMMA           reduce using rule 96 (factor -> var_cte .)
    GREATER         reduce using rule 96 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 96 (factor -> var_cte .)
    LESS            reduce using rule 96 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 96 (factor -> var_cte .)
    DEQUAL          reduce using rule 96 (factor -> var_cte .)
    DISTINT         reduce using rule 96 (factor -> var_cte .)
    AND             reduce using rule 96 (factor -> var_cte .)
    OR              reduce using rule 96 (factor -> var_cte .)
    SEMICOLON       reduce using rule 96 (factor -> var_cte .)
    RPAREN          reduce using rule 96 (factor -> var_cte .)


state 87

    (87) var_cte_b -> TRUE .

    TIMES           reduce using rule 87 (var_cte_b -> TRUE .)
    DIVIDE          reduce using rule 87 (var_cte_b -> TRUE .)
    PERCENT         reduce using rule 87 (var_cte_b -> TRUE .)
    PLUS            reduce using rule 87 (var_cte_b -> TRUE .)
    MINUS           reduce using rule 87 (var_cte_b -> TRUE .)
    GREATER         reduce using rule 87 (var_cte_b -> TRUE .)
    GREATEREQUAL    reduce using rule 87 (var_cte_b -> TRUE .)
    LESS            reduce using rule 87 (var_cte_b -> TRUE .)
    LESSEQUAL       reduce using rule 87 (var_cte_b -> TRUE .)
    DEQUAL          reduce using rule 87 (var_cte_b -> TRUE .)
    DISTINT         reduce using rule 87 (var_cte_b -> TRUE .)
    AND             reduce using rule 87 (var_cte_b -> TRUE .)
    OR              reduce using rule 87 (var_cte_b -> TRUE .)
    COMMA           reduce using rule 87 (var_cte_b -> TRUE .)
    RPAREN          reduce using rule 87 (var_cte_b -> TRUE .)
    SEMICOLON       reduce using rule 87 (var_cte_b -> TRUE .)
    RBRACKET        reduce using rule 87 (var_cte_b -> TRUE .)


state 88

    (151) addop -> MINUS .

    ID              reduce using rule 151 (addop -> MINUS .)
    CTE_I           reduce using rule 151 (addop -> MINUS .)
    CTE_F           reduce using rule 151 (addop -> MINUS .)
    TRUE            reduce using rule 151 (addop -> MINUS .)
    FALSE           reduce using rule 151 (addop -> MINUS .)
    LPAREN          reduce using rule 151 (addop -> MINUS .)
    PLUS            reduce using rule 151 (addop -> MINUS .)
    MINUS           reduce using rule 151 (addop -> MINUS .)


state 89

    (52) llamada_super_exp -> super_exp .

    COMMA           reduce using rule 52 (llamada_super_exp -> super_exp .)
    RPAREN          reduce using rule 52 (llamada_super_exp -> super_exp .)


state 90

    (50) llamada_rparen -> RPAREN .

    SEMICOLON       reduce using rule 50 (llamada_rparen -> RPAREN .)
    TIMES           reduce using rule 50 (llamada_rparen -> RPAREN .)
    DIVIDE          reduce using rule 50 (llamada_rparen -> RPAREN .)
    PERCENT         reduce using rule 50 (llamada_rparen -> RPAREN .)
    PLUS            reduce using rule 50 (llamada_rparen -> RPAREN .)
    MINUS           reduce using rule 50 (llamada_rparen -> RPAREN .)
    GREATER         reduce using rule 50 (llamada_rparen -> RPAREN .)
    GREATEREQUAL    reduce using rule 50 (llamada_rparen -> RPAREN .)
    LESS            reduce using rule 50 (llamada_rparen -> RPAREN .)
    LESSEQUAL       reduce using rule 50 (llamada_rparen -> RPAREN .)
    DEQUAL          reduce using rule 50 (llamada_rparen -> RPAREN .)
    DISTINT         reduce using rule 50 (llamada_rparen -> RPAREN .)
    AND             reduce using rule 50 (llamada_rparen -> RPAREN .)
    OR              reduce using rule 50 (llamada_rparen -> RPAREN .)
    COMMA           reduce using rule 50 (llamada_rparen -> RPAREN .)
    RPAREN          reduce using rule 50 (llamada_rparen -> RPAREN .)
    RBRACKET        reduce using rule 50 (llamada_rparen -> RPAREN .)


state 91

    (49) llamada_2 -> llamada_rparen .

    SEMICOLON       reduce using rule 49 (llamada_2 -> llamada_rparen .)
    TIMES           reduce using rule 49 (llamada_2 -> llamada_rparen .)
    DIVIDE          reduce using rule 49 (llamada_2 -> llamada_rparen .)
    PERCENT         reduce using rule 49 (llamada_2 -> llamada_rparen .)
    PLUS            reduce using rule 49 (llamada_2 -> llamada_rparen .)
    MINUS           reduce using rule 49 (llamada_2 -> llamada_rparen .)
    GREATER         reduce using rule 49 (llamada_2 -> llamada_rparen .)
    GREATEREQUAL    reduce using rule 49 (llamada_2 -> llamada_rparen .)
    LESS            reduce using rule 49 (llamada_2 -> llamada_rparen .)
    LESSEQUAL       reduce using rule 49 (llamada_2 -> llamada_rparen .)
    DEQUAL          reduce using rule 49 (llamada_2 -> llamada_rparen .)
    DISTINT         reduce using rule 49 (llamada_2 -> llamada_rparen .)
    AND             reduce using rule 49 (llamada_2 -> llamada_rparen .)
    OR              reduce using rule 49 (llamada_2 -> llamada_rparen .)
    COMMA           reduce using rule 49 (llamada_2 -> llamada_rparen .)
    RPAREN          reduce using rule 49 (llamada_2 -> llamada_rparen .)
    RBRACKET        reduce using rule 49 (llamada_2 -> llamada_rparen .)


state 92

    (80) var_cte -> var_cte_1 .

    COMMA           reduce using rule 80 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 80 (var_cte -> var_cte_1 .)
    TIMES           reduce using rule 80 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 80 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 80 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 80 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 80 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 80 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 80 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 80 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 80 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 80 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 80 (var_cte -> var_cte_1 .)
    AND             reduce using rule 80 (var_cte -> var_cte_1 .)
    OR              reduce using rule 80 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 80 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 80 (var_cte -> var_cte_1 .)


state 93

    (84) var_cte -> llamada .

    COMMA           reduce using rule 84 (var_cte -> llamada .)
    RBRACKET        reduce using rule 84 (var_cte -> llamada .)
    TIMES           reduce using rule 84 (var_cte -> llamada .)
    DIVIDE          reduce using rule 84 (var_cte -> llamada .)
    PERCENT         reduce using rule 84 (var_cte -> llamada .)
    PLUS            reduce using rule 84 (var_cte -> llamada .)
    MINUS           reduce using rule 84 (var_cte -> llamada .)
    GREATER         reduce using rule 84 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 84 (var_cte -> llamada .)
    LESS            reduce using rule 84 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 84 (var_cte -> llamada .)
    DEQUAL          reduce using rule 84 (var_cte -> llamada .)
    DISTINT         reduce using rule 84 (var_cte -> llamada .)
    AND             reduce using rule 84 (var_cte -> llamada .)
    OR              reduce using rule 84 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 84 (var_cte -> llamada .)
    RPAREN          reduce using rule 84 (var_cte -> llamada .)


state 94

    (150) addop -> PLUS .

    ID              reduce using rule 150 (addop -> PLUS .)
    CTE_I           reduce using rule 150 (addop -> PLUS .)
    CTE_F           reduce using rule 150 (addop -> PLUS .)
    TRUE            reduce using rule 150 (addop -> PLUS .)
    FALSE           reduce using rule 150 (addop -> PLUS .)
    LPAREN          reduce using rule 150 (addop -> PLUS .)
    PLUS            reduce using rule 150 (addop -> PLUS .)
    MINUS           reduce using rule 150 (addop -> PLUS .)


state 95

    (94) factor -> lparen_factor . super_exp rparen_factor
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    super_exp                      shift and go to state 147
    expresion                      shift and go to state 103
    addop                          shift and go to state 97
    var_cte_i                      shift and go to state 105
    llamada                        shift and go to state 93
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    exp                            shift and go to state 106
    lparen_factor                  shift and go to state 95
    factor                         shift and go to state 98
    var_cte_f                      shift and go to state 107
    llamada_id                     shift and go to state 55
    var_cte_b                      shift and go to state 108

state 96

    (86) var_cte_f -> CTE_F .

    TIMES           reduce using rule 86 (var_cte_f -> CTE_F .)
    DIVIDE          reduce using rule 86 (var_cte_f -> CTE_F .)
    PERCENT         reduce using rule 86 (var_cte_f -> CTE_F .)
    PLUS            reduce using rule 86 (var_cte_f -> CTE_F .)
    MINUS           reduce using rule 86 (var_cte_f -> CTE_F .)
    GREATER         reduce using rule 86 (var_cte_f -> CTE_F .)
    GREATEREQUAL    reduce using rule 86 (var_cte_f -> CTE_F .)
    LESS            reduce using rule 86 (var_cte_f -> CTE_F .)
    LESSEQUAL       reduce using rule 86 (var_cte_f -> CTE_F .)
    DEQUAL          reduce using rule 86 (var_cte_f -> CTE_F .)
    DISTINT         reduce using rule 86 (var_cte_f -> CTE_F .)
    AND             reduce using rule 86 (var_cte_f -> CTE_F .)
    OR              reduce using rule 86 (var_cte_f -> CTE_F .)
    SEMICOLON       reduce using rule 86 (var_cte_f -> CTE_F .)
    COMMA           reduce using rule 86 (var_cte_f -> CTE_F .)
    RPAREN          reduce using rule 86 (var_cte_f -> CTE_F .)
    RBRACKET        reduce using rule 86 (var_cte_f -> CTE_F .)


state 97

    (95) factor -> addop . var_cte
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 148
    llamada                        shift and go to state 93
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 98

    (77) termino -> factor . termino_2
    (78) termino_2 -> . timesop termino
    (79) termino_2 -> . empty
    (152) timesop -> . TIMES
    (153) timesop -> . DIVIDE
    (154) timesop -> . PERCENT
    (157) empty -> .

    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 151
    PERCENT         shift and go to state 152
    PLUS            reduce using rule 157 (empty -> .)
    MINUS           reduce using rule 157 (empty -> .)
    GREATER         reduce using rule 157 (empty -> .)
    GREATEREQUAL    reduce using rule 157 (empty -> .)
    LESS            reduce using rule 157 (empty -> .)
    LESSEQUAL       reduce using rule 157 (empty -> .)
    DEQUAL          reduce using rule 157 (empty -> .)
    DISTINT         reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    COMMA           reduce using rule 157 (empty -> .)
    RPAREN          reduce using rule 157 (empty -> .)
    SEMICOLON       reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)

    termino_2                      shift and go to state 149
    timesop                        shift and go to state 150
    empty                          shift and go to state 154

state 99

    (85) var_cte_i -> CTE_I .

    TIMES           reduce using rule 85 (var_cte_i -> CTE_I .)
    DIVIDE          reduce using rule 85 (var_cte_i -> CTE_I .)
    PERCENT         reduce using rule 85 (var_cte_i -> CTE_I .)
    PLUS            reduce using rule 85 (var_cte_i -> CTE_I .)
    MINUS           reduce using rule 85 (var_cte_i -> CTE_I .)
    RBRACKET        reduce using rule 85 (var_cte_i -> CTE_I .)
    GREATER         reduce using rule 85 (var_cte_i -> CTE_I .)
    GREATEREQUAL    reduce using rule 85 (var_cte_i -> CTE_I .)
    LESS            reduce using rule 85 (var_cte_i -> CTE_I .)
    LESSEQUAL       reduce using rule 85 (var_cte_i -> CTE_I .)
    DEQUAL          reduce using rule 85 (var_cte_i -> CTE_I .)
    DISTINT         reduce using rule 85 (var_cte_i -> CTE_I .)
    AND             reduce using rule 85 (var_cte_i -> CTE_I .)
    OR              reduce using rule 85 (var_cte_i -> CTE_I .)
    COMMA           reduce using rule 85 (var_cte_i -> CTE_I .)
    RPAREN          reduce using rule 85 (var_cte_i -> CTE_I .)
    SEMICOLON       reduce using rule 85 (var_cte_i -> CTE_I .)


state 100

    (48) llamada_2 -> llamada_exp . llamada_rparen
    (50) llamada_rparen -> . RPAREN

    RPAREN          shift and go to state 90

    llamada_rparen                 shift and go to state 155

state 101

    (97) lparen_factor -> LPAREN .

    LPAREN          reduce using rule 97 (lparen_factor -> LPAREN .)
    PLUS            reduce using rule 97 (lparen_factor -> LPAREN .)
    MINUS           reduce using rule 97 (lparen_factor -> LPAREN .)
    ID              reduce using rule 97 (lparen_factor -> LPAREN .)
    CTE_I           reduce using rule 97 (lparen_factor -> LPAREN .)
    CTE_F           reduce using rule 97 (lparen_factor -> LPAREN .)
    TRUE            reduce using rule 97 (lparen_factor -> LPAREN .)
    FALSE           reduce using rule 97 (lparen_factor -> LPAREN .)


state 102

    (89) var_cte_1 -> ID . var_cte_2
    (47) llamada_id -> ID . LPAREN
    (90) var_cte_2 -> . LBRACKET exp var_cte_3
    (91) var_cte_2 -> . empty
    (157) empty -> .

    LPAREN          shift and go to state 83
    LBRACKET        shift and go to state 157
    TIMES           reduce using rule 157 (empty -> .)
    DIVIDE          reduce using rule 157 (empty -> .)
    PERCENT         reduce using rule 157 (empty -> .)
    PLUS            reduce using rule 157 (empty -> .)
    MINUS           reduce using rule 157 (empty -> .)
    GREATER         reduce using rule 157 (empty -> .)
    GREATEREQUAL    reduce using rule 157 (empty -> .)
    LESS            reduce using rule 157 (empty -> .)
    LESSEQUAL       reduce using rule 157 (empty -> .)
    DEQUAL          reduce using rule 157 (empty -> .)
    DISTINT         reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    COMMA           reduce using rule 157 (empty -> .)
    RPAREN          reduce using rule 157 (empty -> .)
    SEMICOLON       reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)

    empty                          shift and go to state 158
    var_cte_2                      shift and go to state 156

state 103

    (62) super_exp -> expresion . super_exp_2
    (63) super_exp_2 -> . logicop super_exp
    (64) super_exp_2 -> . empty
    (155) logicop -> . AND
    (156) logicop -> . OR
    (157) empty -> .

    AND             shift and go to state 159
    OR              shift and go to state 162
    COMMA           reduce using rule 157 (empty -> .)
    RPAREN          reduce using rule 157 (empty -> .)
    SEMICOLON       reduce using rule 157 (empty -> .)

    logicop                        shift and go to state 161
    super_exp_2                    shift and go to state 160
    empty                          shift and go to state 163

state 104

    (88) var_cte_b -> FALSE .

    TIMES           reduce using rule 88 (var_cte_b -> FALSE .)
    DIVIDE          reduce using rule 88 (var_cte_b -> FALSE .)
    PERCENT         reduce using rule 88 (var_cte_b -> FALSE .)
    PLUS            reduce using rule 88 (var_cte_b -> FALSE .)
    MINUS           reduce using rule 88 (var_cte_b -> FALSE .)
    GREATER         reduce using rule 88 (var_cte_b -> FALSE .)
    GREATEREQUAL    reduce using rule 88 (var_cte_b -> FALSE .)
    LESS            reduce using rule 88 (var_cte_b -> FALSE .)
    LESSEQUAL       reduce using rule 88 (var_cte_b -> FALSE .)
    DEQUAL          reduce using rule 88 (var_cte_b -> FALSE .)
    DISTINT         reduce using rule 88 (var_cte_b -> FALSE .)
    AND             reduce using rule 88 (var_cte_b -> FALSE .)
    OR              reduce using rule 88 (var_cte_b -> FALSE .)
    COMMA           reduce using rule 88 (var_cte_b -> FALSE .)
    RPAREN          reduce using rule 88 (var_cte_b -> FALSE .)
    SEMICOLON       reduce using rule 88 (var_cte_b -> FALSE .)
    RBRACKET        reduce using rule 88 (var_cte_b -> FALSE .)


state 105

    (81) var_cte -> var_cte_i .

    COMMA           reduce using rule 81 (var_cte -> var_cte_i .)
    RBRACKET        reduce using rule 81 (var_cte -> var_cte_i .)
    TIMES           reduce using rule 81 (var_cte -> var_cte_i .)
    DIVIDE          reduce using rule 81 (var_cte -> var_cte_i .)
    PERCENT         reduce using rule 81 (var_cte -> var_cte_i .)
    PLUS            reduce using rule 81 (var_cte -> var_cte_i .)
    MINUS           reduce using rule 81 (var_cte -> var_cte_i .)
    GREATER         reduce using rule 81 (var_cte -> var_cte_i .)
    GREATEREQUAL    reduce using rule 81 (var_cte -> var_cte_i .)
    LESS            reduce using rule 81 (var_cte -> var_cte_i .)
    LESSEQUAL       reduce using rule 81 (var_cte -> var_cte_i .)
    DEQUAL          reduce using rule 81 (var_cte -> var_cte_i .)
    DISTINT         reduce using rule 81 (var_cte -> var_cte_i .)
    AND             reduce using rule 81 (var_cte -> var_cte_i .)
    OR              reduce using rule 81 (var_cte -> var_cte_i .)
    SEMICOLON       reduce using rule 81 (var_cte -> var_cte_i .)
    RPAREN          reduce using rule 81 (var_cte -> var_cte_i .)


state 106

    (65) expresion -> exp . expresion_2
    (66) expresion_2 -> . relop exp
    (67) expresion_2 -> . empty
    (68) relop -> . GREATER
    (69) relop -> . GREATEREQUAL
    (70) relop -> . LESS
    (71) relop -> . LESSEQUAL
    (72) relop -> . DEQUAL
    (73) relop -> . DISTINT
    (157) empty -> .

    GREATER         shift and go to state 165
    GREATEREQUAL    shift and go to state 164
    LESS            shift and go to state 166
    LESSEQUAL       shift and go to state 170
    DEQUAL          shift and go to state 167
    DISTINT         shift and go to state 168
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    COMMA           reduce using rule 157 (empty -> .)
    RPAREN          reduce using rule 157 (empty -> .)
    SEMICOLON       reduce using rule 157 (empty -> .)

    empty                          shift and go to state 171
    expresion_2                    shift and go to state 169
    relop                          shift and go to state 172

state 107

    (82) var_cte -> var_cte_f .

    COMMA           reduce using rule 82 (var_cte -> var_cte_f .)
    RBRACKET        reduce using rule 82 (var_cte -> var_cte_f .)
    TIMES           reduce using rule 82 (var_cte -> var_cte_f .)
    DIVIDE          reduce using rule 82 (var_cte -> var_cte_f .)
    PERCENT         reduce using rule 82 (var_cte -> var_cte_f .)
    PLUS            reduce using rule 82 (var_cte -> var_cte_f .)
    MINUS           reduce using rule 82 (var_cte -> var_cte_f .)
    GREATER         reduce using rule 82 (var_cte -> var_cte_f .)
    GREATEREQUAL    reduce using rule 82 (var_cte -> var_cte_f .)
    LESS            reduce using rule 82 (var_cte -> var_cte_f .)
    LESSEQUAL       reduce using rule 82 (var_cte -> var_cte_f .)
    DEQUAL          reduce using rule 82 (var_cte -> var_cte_f .)
    DISTINT         reduce using rule 82 (var_cte -> var_cte_f .)
    AND             reduce using rule 82 (var_cte -> var_cte_f .)
    OR              reduce using rule 82 (var_cte -> var_cte_f .)
    SEMICOLON       reduce using rule 82 (var_cte -> var_cte_f .)
    RPAREN          reduce using rule 82 (var_cte -> var_cte_f .)


state 108

    (83) var_cte -> var_cte_b .

    COMMA           reduce using rule 83 (var_cte -> var_cte_b .)
    RBRACKET        reduce using rule 83 (var_cte -> var_cte_b .)
    TIMES           reduce using rule 83 (var_cte -> var_cte_b .)
    DIVIDE          reduce using rule 83 (var_cte -> var_cte_b .)
    PERCENT         reduce using rule 83 (var_cte -> var_cte_b .)
    PLUS            reduce using rule 83 (var_cte -> var_cte_b .)
    MINUS           reduce using rule 83 (var_cte -> var_cte_b .)
    GREATER         reduce using rule 83 (var_cte -> var_cte_b .)
    GREATEREQUAL    reduce using rule 83 (var_cte -> var_cte_b .)
    LESS            reduce using rule 83 (var_cte -> var_cte_b .)
    LESSEQUAL       reduce using rule 83 (var_cte -> var_cte_b .)
    DEQUAL          reduce using rule 83 (var_cte -> var_cte_b .)
    DISTINT         reduce using rule 83 (var_cte -> var_cte_b .)
    AND             reduce using rule 83 (var_cte -> var_cte_b .)
    OR              reduce using rule 83 (var_cte -> var_cte_b .)
    SEMICOLON       reduce using rule 83 (var_cte -> var_cte_b .)
    RPAREN          reduce using rule 83 (var_cte -> var_cte_b .)


state 109

    (74) exp -> termino . exp_2
    (75) exp_2 -> . addop exp
    (76) exp_2 -> . empty
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (157) empty -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    GREATER         reduce using rule 157 (empty -> .)
    GREATEREQUAL    reduce using rule 157 (empty -> .)
    LESS            reduce using rule 157 (empty -> .)
    LESSEQUAL       reduce using rule 157 (empty -> .)
    DEQUAL          reduce using rule 157 (empty -> .)
    DISTINT         reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    COMMA           reduce using rule 157 (empty -> .)
    RPAREN          reduce using rule 157 (empty -> .)
    SEMICOLON       reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)

    addop                          shift and go to state 173
    empty                          shift and go to state 175
    exp_2                          shift and go to state 174

state 110

    (99) condicion -> condicion_id LPAREN . super_exp rparen_condicion bloque condicion_2
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    super_exp                      shift and go to state 176
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 111

    (42) vars2 -> asignacion_equal super_exp . SEMICOLON

    SEMICOLON       shift and go to state 177


state 112

    (8) globales_2 -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (157) empty -> .

    GLOBAL          shift and go to state 1
    DEF             reduce using rule 157 (empty -> .)
    MAIN            reduce using rule 157 (empty -> .)

    globales_2                     shift and go to state 178
    global_1                       shift and go to state 62
    empty                          shift and go to state 63

state 113

    (45) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 45 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 45 (vars3 -> SEMICOLON .)
    MAIN            reduce using rule 45 (vars3 -> SEMICOLON .)
    ID              reduce using rule 45 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 45 (vars3 -> SEMICOLON .)
    IF              reduce using rule 45 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 45 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 45 (vars3 -> SEMICOLON .)
    INT             reduce using rule 45 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 45 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 45 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 45 (vars3 -> SEMICOLON .)
    END             reduce using rule 45 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 45 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 45 (vars3 -> SEMICOLON .)


state 114

    (44) vars3 -> EQUAL . def_array SEMICOLON
    (56) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 179

    def_array                      shift and go to state 180

state 115

    (38) vars_aux -> array ID vars3 .

    ID              reduce using rule 38 (vars_aux -> array ID vars3 .)
    DRAW            reduce using rule 38 (vars_aux -> array ID vars3 .)
    IF              reduce using rule 38 (vars_aux -> array ID vars3 .)
    FOR             reduce using rule 38 (vars_aux -> array ID vars3 .)
    WHILE           reduce using rule 38 (vars_aux -> array ID vars3 .)
    INT             reduce using rule 38 (vars_aux -> array ID vars3 .)
    FLOAT           reduce using rule 38 (vars_aux -> array ID vars3 .)
    BOOLEAN         reduce using rule 38 (vars_aux -> array ID vars3 .)
    ARRAY           reduce using rule 38 (vars_aux -> array ID vars3 .)
    END             reduce using rule 38 (vars_aux -> array ID vars3 .)
    GLOBAL          reduce using rule 38 (vars_aux -> array ID vars3 .)
    DEF             reduce using rule 38 (vars_aux -> array ID vars3 .)
    MAIN            reduce using rule 38 (vars_aux -> array ID vars3 .)
    RETURN          reduce using rule 38 (vars_aux -> array ID vars3 .)
    ELSE            reduce using rule 38 (vars_aux -> array ID vars3 .)


state 116

    (39) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 181


state 117

    (34) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 182


state 118

    (139) funcion_aux -> funcion_void var_local bloque . funcion_end
    (143) funcion_end -> . END

    END             shift and go to state 183

    funcion_end                    shift and go to state 184

state 119

    (147) var_local_2_1 -> data_type . ID

    ID              shift and go to state 185


state 120

    (144) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 186


state 121

    (145) var_local_2 -> var_local_2_1 . var_local_3
    (148) var_local_3 -> . COMMA var_local_2
    (149) var_local_3 -> . empty
    (157) empty -> .

    COMMA           shift and go to state 188
    RPAREN          reduce using rule 157 (empty -> .)

    var_local_3                    shift and go to state 187
    empty                          shift and go to state 189

state 122

    (146) var_local_2 -> empty .

    RPAREN          reduce using rule 146 (var_local_2 -> empty .)


state 123

    (138) funcion_aux -> funcion_1 var_local bloque . funcion_2
    (142) funcion_2 -> . RETURN super_exp SEMICOLON END

    RETURN          shift and go to state 190

    funcion_2                      shift and go to state 191

state 124

    (27) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 27 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 125

    (30) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL super_exp
    (32) asignacion_3 -> . RBRACKET
    (33) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 194
    COMMA           shift and go to state 193

    asignacion_3                   shift and go to state 192

state 126

    (29) asignacion_2 -> asignacion_equal super_exp .

    SEMICOLON       reduce using rule 29 (asignacion_2 -> asignacion_equal super_exp .)


state 127

    (127) for -> for_init LPAREN for_exp . COMMA for_exp COMMA for_exp2 for_rparen bloque for_end

    COMMA           shift and go to state 195


state 128

    (128) for_exp -> exp .

    COMMA           reduce using rule 128 (for_exp -> exp .)


state 129

    (133) while -> while_init LPAREN super_exp . rparen_while bloque while_end
    (135) rparen_while -> . RPAREN

    RPAREN          shift and go to state 196

    rparen_while                   shift and go to state 197

state 130

    (117) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 117 (accion_nombre -> RIGHT .)


state 131

    (119) accion_nombre -> HIDE .

    LPAREN          reduce using rule 119 (accion_nombre -> HIDE .)


state 132

    (126) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 126 (accion_nombre -> SETCOLOR .)


state 133

    (108) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (109) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 198

    accion_params                  shift and go to state 199

state 134

    (121) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 121 (accion_nombre -> CLEAR .)


state 135

    (122) accion_nombre -> SHOW .

    LPAREN          reduce using rule 122 (accion_nombre -> SHOW .)


state 136

    (123) accion_nombre -> BACK .

    LPAREN          reduce using rule 123 (accion_nombre -> BACK .)


state 137

    (120) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 120 (accion_nombre -> SQUARE .)


state 138

    (116) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 116 (accion_nombre -> CIRCLE .)


state 139

    (125) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 125 (accion_nombre -> FORWARD .)


state 140

    (115) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 115 (accion_nombre -> SETPOSITION .)


state 141

    (124) accion_nombre -> SPEED .

    LPAREN          reduce using rule 124 (accion_nombre -> SPEED .)


state 142

    (118) accion_nombre -> LEFT .

    LPAREN          reduce using rule 118 (accion_nombre -> LEFT .)


state 143

    (51) llamada_exp -> llamada_super_exp llamada_exp2 .

    RPAREN          reduce using rule 51 (llamada_exp -> llamada_super_exp llamada_exp2 .)


state 144

    (55) llamada_comma -> COMMA .

    LPAREN          reduce using rule 55 (llamada_comma -> COMMA .)
    PLUS            reduce using rule 55 (llamada_comma -> COMMA .)
    MINUS           reduce using rule 55 (llamada_comma -> COMMA .)
    ID              reduce using rule 55 (llamada_comma -> COMMA .)
    CTE_I           reduce using rule 55 (llamada_comma -> COMMA .)
    CTE_F           reduce using rule 55 (llamada_comma -> COMMA .)
    TRUE            reduce using rule 55 (llamada_comma -> COMMA .)
    FALSE           reduce using rule 55 (llamada_comma -> COMMA .)


state 145

    (54) llamada_exp2 -> empty .

    RPAREN          reduce using rule 54 (llamada_exp2 -> empty .)


state 146

    (53) llamada_exp2 -> llamada_comma . llamada_exp
    (51) llamada_exp -> . llamada_super_exp llamada_exp2
    (52) llamada_super_exp -> . super_exp
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    llamada_super_exp              shift and go to state 84
    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    super_exp                      shift and go to state 89
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    llamada_exp                    shift and go to state 200
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 147

    (94) factor -> lparen_factor super_exp . rparen_factor
    (98) rparen_factor -> . RPAREN

    RPAREN          shift and go to state 202

    rparen_factor                  shift and go to state 201

state 148

    (95) factor -> addop var_cte .

    TIMES           reduce using rule 95 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 95 (factor -> addop var_cte .)
    PERCENT         reduce using rule 95 (factor -> addop var_cte .)
    PLUS            reduce using rule 95 (factor -> addop var_cte .)
    MINUS           reduce using rule 95 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 95 (factor -> addop var_cte .)
    COMMA           reduce using rule 95 (factor -> addop var_cte .)
    GREATER         reduce using rule 95 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 95 (factor -> addop var_cte .)
    LESS            reduce using rule 95 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 95 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 95 (factor -> addop var_cte .)
    DISTINT         reduce using rule 95 (factor -> addop var_cte .)
    AND             reduce using rule 95 (factor -> addop var_cte .)
    OR              reduce using rule 95 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 95 (factor -> addop var_cte .)
    RPAREN          reduce using rule 95 (factor -> addop var_cte .)


state 149

    (77) termino -> factor termino_2 .

    PLUS            reduce using rule 77 (termino -> factor termino_2 .)
    MINUS           reduce using rule 77 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 77 (termino -> factor termino_2 .)
    GREATER         reduce using rule 77 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 77 (termino -> factor termino_2 .)
    LESS            reduce using rule 77 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 77 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 77 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 77 (termino -> factor termino_2 .)
    AND             reduce using rule 77 (termino -> factor termino_2 .)
    OR              reduce using rule 77 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 77 (termino -> factor termino_2 .)
    COMMA           reduce using rule 77 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 77 (termino -> factor termino_2 .)


state 150

    (78) termino_2 -> timesop . termino
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    addop                          shift and go to state 97
    llamada                        shift and go to state 93
    factor                         shift and go to state 98
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 86
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 203
    lparen_factor                  shift and go to state 95
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 151

    (153) timesop -> DIVIDE .

    LPAREN          reduce using rule 153 (timesop -> DIVIDE .)
    PLUS            reduce using rule 153 (timesop -> DIVIDE .)
    MINUS           reduce using rule 153 (timesop -> DIVIDE .)
    ID              reduce using rule 153 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 153 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 153 (timesop -> DIVIDE .)
    TRUE            reduce using rule 153 (timesop -> DIVIDE .)
    FALSE           reduce using rule 153 (timesop -> DIVIDE .)


state 152

    (154) timesop -> PERCENT .

    LPAREN          reduce using rule 154 (timesop -> PERCENT .)
    PLUS            reduce using rule 154 (timesop -> PERCENT .)
    MINUS           reduce using rule 154 (timesop -> PERCENT .)
    ID              reduce using rule 154 (timesop -> PERCENT .)
    CTE_I           reduce using rule 154 (timesop -> PERCENT .)
    CTE_F           reduce using rule 154 (timesop -> PERCENT .)
    TRUE            reduce using rule 154 (timesop -> PERCENT .)
    FALSE           reduce using rule 154 (timesop -> PERCENT .)


state 153

    (152) timesop -> TIMES .

    LPAREN          reduce using rule 152 (timesop -> TIMES .)
    PLUS            reduce using rule 152 (timesop -> TIMES .)
    MINUS           reduce using rule 152 (timesop -> TIMES .)
    ID              reduce using rule 152 (timesop -> TIMES .)
    CTE_I           reduce using rule 152 (timesop -> TIMES .)
    CTE_F           reduce using rule 152 (timesop -> TIMES .)
    TRUE            reduce using rule 152 (timesop -> TIMES .)
    FALSE           reduce using rule 152 (timesop -> TIMES .)


state 154

    (79) termino_2 -> empty .

    PLUS            reduce using rule 79 (termino_2 -> empty .)
    MINUS           reduce using rule 79 (termino_2 -> empty .)
    GREATER         reduce using rule 79 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 79 (termino_2 -> empty .)
    LESS            reduce using rule 79 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 79 (termino_2 -> empty .)
    DEQUAL          reduce using rule 79 (termino_2 -> empty .)
    DISTINT         reduce using rule 79 (termino_2 -> empty .)
    AND             reduce using rule 79 (termino_2 -> empty .)
    OR              reduce using rule 79 (termino_2 -> empty .)
    COMMA           reduce using rule 79 (termino_2 -> empty .)
    RPAREN          reduce using rule 79 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 79 (termino_2 -> empty .)
    RBRACKET        reduce using rule 79 (termino_2 -> empty .)


state 155

    (48) llamada_2 -> llamada_exp llamada_rparen .

    SEMICOLON       reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    TIMES           reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    DIVIDE          reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    PERCENT         reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    PLUS            reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    MINUS           reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    GREATER         reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    GREATEREQUAL    reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    LESS            reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    LESSEQUAL       reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    DEQUAL          reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    DISTINT         reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    AND             reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    OR              reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    COMMA           reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    RPAREN          reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)
    RBRACKET        reduce using rule 48 (llamada_2 -> llamada_exp llamada_rparen .)


state 156

    (89) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    AND             reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    OR              reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 89 (var_cte_1 -> ID var_cte_2 .)


state 157

    (90) var_cte_2 -> LBRACKET . exp var_cte_3
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    addop                          shift and go to state 97
    lparen_factor                  shift and go to state 95
    var_cte_1                      shift and go to state 92
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 109
    exp                            shift and go to state 204
    factor                         shift and go to state 98
    var_cte_f                      shift and go to state 107
    var_cte                        shift and go to state 86
    llamada                        shift and go to state 93
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 158

    (91) var_cte_2 -> empty .

    TIMES           reduce using rule 91 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 91 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 91 (var_cte_2 -> empty .)
    PLUS            reduce using rule 91 (var_cte_2 -> empty .)
    MINUS           reduce using rule 91 (var_cte_2 -> empty .)
    GREATER         reduce using rule 91 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 91 (var_cte_2 -> empty .)
    LESS            reduce using rule 91 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 91 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 91 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 91 (var_cte_2 -> empty .)
    AND             reduce using rule 91 (var_cte_2 -> empty .)
    OR              reduce using rule 91 (var_cte_2 -> empty .)
    COMMA           reduce using rule 91 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 91 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 91 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 91 (var_cte_2 -> empty .)


state 159

    (155) logicop -> AND .

    LPAREN          reduce using rule 155 (logicop -> AND .)
    PLUS            reduce using rule 155 (logicop -> AND .)
    MINUS           reduce using rule 155 (logicop -> AND .)
    ID              reduce using rule 155 (logicop -> AND .)
    CTE_I           reduce using rule 155 (logicop -> AND .)
    CTE_F           reduce using rule 155 (logicop -> AND .)
    TRUE            reduce using rule 155 (logicop -> AND .)
    FALSE           reduce using rule 155 (logicop -> AND .)


state 160

    (62) super_exp -> expresion super_exp_2 .

    SEMICOLON       reduce using rule 62 (super_exp -> expresion super_exp_2 .)
    COMMA           reduce using rule 62 (super_exp -> expresion super_exp_2 .)
    RPAREN          reduce using rule 62 (super_exp -> expresion super_exp_2 .)


state 161

    (63) super_exp_2 -> logicop . super_exp
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    super_exp                      shift and go to state 205
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 162

    (156) logicop -> OR .

    LPAREN          reduce using rule 156 (logicop -> OR .)
    PLUS            reduce using rule 156 (logicop -> OR .)
    MINUS           reduce using rule 156 (logicop -> OR .)
    ID              reduce using rule 156 (logicop -> OR .)
    CTE_I           reduce using rule 156 (logicop -> OR .)
    CTE_F           reduce using rule 156 (logicop -> OR .)
    TRUE            reduce using rule 156 (logicop -> OR .)
    FALSE           reduce using rule 156 (logicop -> OR .)


state 163

    (64) super_exp_2 -> empty .

    COMMA           reduce using rule 64 (super_exp_2 -> empty .)
    RPAREN          reduce using rule 64 (super_exp_2 -> empty .)
    SEMICOLON       reduce using rule 64 (super_exp_2 -> empty .)


state 164

    (69) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 69 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 69 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 69 (relop -> GREATEREQUAL .)
    ID              reduce using rule 69 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 69 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 69 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 69 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 69 (relop -> GREATEREQUAL .)


state 165

    (68) relop -> GREATER .

    LPAREN          reduce using rule 68 (relop -> GREATER .)
    PLUS            reduce using rule 68 (relop -> GREATER .)
    MINUS           reduce using rule 68 (relop -> GREATER .)
    ID              reduce using rule 68 (relop -> GREATER .)
    CTE_I           reduce using rule 68 (relop -> GREATER .)
    CTE_F           reduce using rule 68 (relop -> GREATER .)
    TRUE            reduce using rule 68 (relop -> GREATER .)
    FALSE           reduce using rule 68 (relop -> GREATER .)


state 166

    (70) relop -> LESS .

    LPAREN          reduce using rule 70 (relop -> LESS .)
    PLUS            reduce using rule 70 (relop -> LESS .)
    MINUS           reduce using rule 70 (relop -> LESS .)
    ID              reduce using rule 70 (relop -> LESS .)
    CTE_I           reduce using rule 70 (relop -> LESS .)
    CTE_F           reduce using rule 70 (relop -> LESS .)
    TRUE            reduce using rule 70 (relop -> LESS .)
    FALSE           reduce using rule 70 (relop -> LESS .)


state 167

    (72) relop -> DEQUAL .

    LPAREN          reduce using rule 72 (relop -> DEQUAL .)
    PLUS            reduce using rule 72 (relop -> DEQUAL .)
    MINUS           reduce using rule 72 (relop -> DEQUAL .)
    ID              reduce using rule 72 (relop -> DEQUAL .)
    CTE_I           reduce using rule 72 (relop -> DEQUAL .)
    CTE_F           reduce using rule 72 (relop -> DEQUAL .)
    TRUE            reduce using rule 72 (relop -> DEQUAL .)
    FALSE           reduce using rule 72 (relop -> DEQUAL .)


state 168

    (73) relop -> DISTINT .

    LPAREN          reduce using rule 73 (relop -> DISTINT .)
    PLUS            reduce using rule 73 (relop -> DISTINT .)
    MINUS           reduce using rule 73 (relop -> DISTINT .)
    ID              reduce using rule 73 (relop -> DISTINT .)
    CTE_I           reduce using rule 73 (relop -> DISTINT .)
    CTE_F           reduce using rule 73 (relop -> DISTINT .)
    TRUE            reduce using rule 73 (relop -> DISTINT .)
    FALSE           reduce using rule 73 (relop -> DISTINT .)


state 169

    (65) expresion -> exp expresion_2 .

    AND             reduce using rule 65 (expresion -> exp expresion_2 .)
    OR              reduce using rule 65 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 65 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 65 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 65 (expresion -> exp expresion_2 .)


state 170

    (71) relop -> LESSEQUAL .

    LPAREN          reduce using rule 71 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 71 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 71 (relop -> LESSEQUAL .)
    ID              reduce using rule 71 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 71 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 71 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 71 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 71 (relop -> LESSEQUAL .)


state 171

    (67) expresion_2 -> empty .

    AND             reduce using rule 67 (expresion_2 -> empty .)
    OR              reduce using rule 67 (expresion_2 -> empty .)
    COMMA           reduce using rule 67 (expresion_2 -> empty .)
    RPAREN          reduce using rule 67 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 67 (expresion_2 -> empty .)


state 172

    (66) expresion_2 -> relop . exp
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    addop                          shift and go to state 97
    lparen_factor                  shift and go to state 95
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 86
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 109
    exp                            shift and go to state 206
    factor                         shift and go to state 98
    var_cte_f                      shift and go to state 107
    llamada                        shift and go to state 93
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 173

    (75) exp_2 -> addop . exp
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    addop                          shift and go to state 97
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 86
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 109
    exp                            shift and go to state 207
    factor                         shift and go to state 98
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 174

    (74) exp -> termino exp_2 .

    GREATER         reduce using rule 74 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 74 (exp -> termino exp_2 .)
    LESS            reduce using rule 74 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 74 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 74 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 74 (exp -> termino exp_2 .)
    AND             reduce using rule 74 (exp -> termino exp_2 .)
    OR              reduce using rule 74 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 74 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 74 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 74 (exp -> termino exp_2 .)
    COMMA           reduce using rule 74 (exp -> termino exp_2 .)


state 175

    (76) exp_2 -> empty .

    GREATER         reduce using rule 76 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 76 (exp_2 -> empty .)
    LESS            reduce using rule 76 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 76 (exp_2 -> empty .)
    DEQUAL          reduce using rule 76 (exp_2 -> empty .)
    DISTINT         reduce using rule 76 (exp_2 -> empty .)
    AND             reduce using rule 76 (exp_2 -> empty .)
    OR              reduce using rule 76 (exp_2 -> empty .)
    COMMA           reduce using rule 76 (exp_2 -> empty .)
    RPAREN          reduce using rule 76 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 76 (exp_2 -> empty .)
    RBRACKET        reduce using rule 76 (exp_2 -> empty .)


state 176

    (99) condicion -> condicion_id LPAREN super_exp . rparen_condicion bloque condicion_2
    (100) rparen_condicion -> . RPAREN

    RPAREN          shift and go to state 208

    rparen_condicion               shift and go to state 209

state 177

    (42) vars2 -> asignacion_equal super_exp SEMICOLON .

    GLOBAL          reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DEF             reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    MAIN            reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ID              reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DRAW            reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    IF              reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FOR             reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    WHILE           reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    INT             reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FLOAT           reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    BOOLEAN         reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ARRAY           reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    END             reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    RETURN          reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ELSE            reduce using rule 42 (vars2 -> asignacion_equal super_exp SEMICOLON .)


state 178

    (8) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)
    MAIN            reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)


state 179

    (56) def_array -> LBRACKET . def_array_2
    (57) def_array_2 -> . def_array_cte RBRACKET
    (58) def_array_2 -> . RBRACKET
    (59) def_array_cte -> . var_cte def_array_cte_2
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    RBRACKET        shift and go to state 213
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    def_array_cte                  shift and go to state 210
    def_array_2                    shift and go to state 211
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 212
    llamada                        shift and go to state 93
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 180

    (44) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 214


state 181

    (39) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 215


state 182

    (34) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 216


state 183

    (143) funcion_end -> END .

    DEF             reduce using rule 143 (funcion_end -> END .)
    MAIN            reduce using rule 143 (funcion_end -> END .)


state 184

    (139) funcion_aux -> funcion_void var_local bloque funcion_end .

    DEF             reduce using rule 139 (funcion_aux -> funcion_void var_local bloque funcion_end .)
    MAIN            reduce using rule 139 (funcion_aux -> funcion_void var_local bloque funcion_end .)


state 185

    (147) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 147 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 147 (var_local_2_1 -> data_type ID .)


state 186

    (144) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 144 (var_local -> LPAREN var_local_2 RPAREN .)


state 187

    (145) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 145 (var_local_2 -> var_local_2_1 var_local_3 .)


state 188

    (148) var_local_3 -> COMMA . var_local_2
    (145) var_local_2 -> . var_local_2_1 var_local_3
    (146) var_local_2 -> . empty
    (147) var_local_2_1 -> . data_type ID
    (157) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 157 (empty -> .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23

    var_local_2_1                  shift and go to state 121
    var_local_2                    shift and go to state 217
    data_type                      shift and go to state 119
    empty                          shift and go to state 122

state 189

    (149) var_local_3 -> empty .

    RPAREN          reduce using rule 149 (var_local_3 -> empty .)


state 190

    (142) funcion_2 -> RETURN . super_exp SEMICOLON END
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    super_exp                      shift and go to state 218
    expresion                      shift and go to state 103
    addop                          shift and go to state 97
    var_cte_i                      shift and go to state 105
    lparen_factor                  shift and go to state 95
    factor                         shift and go to state 98
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    exp                            shift and go to state 106
    llamada_id                     shift and go to state 55
    var_cte_f                      shift and go to state 107
    llamada                        shift and go to state 93
    var_cte_b                      shift and go to state 108

state 191

    (138) funcion_aux -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 138 (funcion_aux -> funcion_1 var_local bloque funcion_2 .)
    MAIN            reduce using rule 138 (funcion_aux -> funcion_1 var_local bloque funcion_2 .)


state 192

    (30) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL super_exp

    EQUAL           shift and go to state 219


state 193

    (33) asignacion_3 -> COMMA . exp RBRACKET
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    llamada                        shift and go to state 93
    factor                         shift and go to state 98
    var_cte_1                      shift and go to state 92
    addop                          shift and go to state 97
    var_cte                        shift and go to state 86
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 109
    exp                            shift and go to state 220
    lparen_factor                  shift and go to state 95
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 194

    (32) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 32 (asignacion_3 -> RBRACKET .)


state 195

    (127) for -> for_init LPAREN for_exp COMMA . for_exp COMMA for_exp2 for_rparen bloque for_end
    (128) for_exp -> . exp
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    for_exp                        shift and go to state 221
    factor                         shift and go to state 98
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 128
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 196

    (135) rparen_while -> RPAREN .

    ID              reduce using rule 135 (rparen_while -> RPAREN .)
    DRAW            reduce using rule 135 (rparen_while -> RPAREN .)
    IF              reduce using rule 135 (rparen_while -> RPAREN .)
    FOR             reduce using rule 135 (rparen_while -> RPAREN .)
    WHILE           reduce using rule 135 (rparen_while -> RPAREN .)
    INT             reduce using rule 135 (rparen_while -> RPAREN .)
    FLOAT           reduce using rule 135 (rparen_while -> RPAREN .)
    BOOLEAN         reduce using rule 135 (rparen_while -> RPAREN .)
    ARRAY           reduce using rule 135 (rparen_while -> RPAREN .)
    END             reduce using rule 135 (rparen_while -> RPAREN .)


state 197

    (133) while -> while_init LPAREN super_exp rparen_while . bloque while_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 222
    array                          shift and go to state 17
    ciclo                          shift and go to state 43
    for                            shift and go to state 52
    estatuto                       shift and go to state 44
    llamada                        shift and go to state 45
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55
    condicion_id                   shift and go to state 56

state 198

    (109) accion_params -> LPAREN . accion_params_2
    (110) accion_params_2 -> . accion_params_cte RPAREN
    (111) accion_params_2 -> . RPAREN
    (112) accion_params_cte -> . var_cte accion_params_cte_2
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    RPAREN          shift and go to state 223
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte_1                      shift and go to state 92
    accion_params_cte              shift and go to state 224
    var_cte                        shift and go to state 225
    accion_params_2                shift and go to state 226
    llamada                        shift and go to state 93
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 199

    (108) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 227


state 200

    (53) llamada_exp2 -> llamada_comma llamada_exp .

    RPAREN          reduce using rule 53 (llamada_exp2 -> llamada_comma llamada_exp .)


state 201

    (94) factor -> lparen_factor super_exp rparen_factor .

    TIMES           reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    DIVIDE          reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    PERCENT         reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    PLUS            reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    MINUS           reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    RBRACKET        reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    COMMA           reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    GREATER         reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    GREATEREQUAL    reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    LESS            reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    LESSEQUAL       reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    DEQUAL          reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    DISTINT         reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    AND             reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    OR              reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    SEMICOLON       reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)
    RPAREN          reduce using rule 94 (factor -> lparen_factor super_exp rparen_factor .)


state 202

    (98) rparen_factor -> RPAREN .

    TIMES           reduce using rule 98 (rparen_factor -> RPAREN .)
    DIVIDE          reduce using rule 98 (rparen_factor -> RPAREN .)
    PERCENT         reduce using rule 98 (rparen_factor -> RPAREN .)
    PLUS            reduce using rule 98 (rparen_factor -> RPAREN .)
    MINUS           reduce using rule 98 (rparen_factor -> RPAREN .)
    GREATER         reduce using rule 98 (rparen_factor -> RPAREN .)
    GREATEREQUAL    reduce using rule 98 (rparen_factor -> RPAREN .)
    LESS            reduce using rule 98 (rparen_factor -> RPAREN .)
    LESSEQUAL       reduce using rule 98 (rparen_factor -> RPAREN .)
    DEQUAL          reduce using rule 98 (rparen_factor -> RPAREN .)
    DISTINT         reduce using rule 98 (rparen_factor -> RPAREN .)
    AND             reduce using rule 98 (rparen_factor -> RPAREN .)
    OR              reduce using rule 98 (rparen_factor -> RPAREN .)
    COMMA           reduce using rule 98 (rparen_factor -> RPAREN .)
    RPAREN          reduce using rule 98 (rparen_factor -> RPAREN .)
    SEMICOLON       reduce using rule 98 (rparen_factor -> RPAREN .)
    RBRACKET        reduce using rule 98 (rparen_factor -> RPAREN .)


state 203

    (78) termino_2 -> timesop termino .

    PLUS            reduce using rule 78 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 78 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 78 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 78 (termino_2 -> timesop termino .)
    LESS            reduce using rule 78 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 78 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 78 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 78 (termino_2 -> timesop termino .)
    AND             reduce using rule 78 (termino_2 -> timesop termino .)
    OR              reduce using rule 78 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 78 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 78 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 78 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 78 (termino_2 -> timesop termino .)


state 204

    (90) var_cte_2 -> LBRACKET exp . var_cte_3
    (92) var_cte_3 -> . RBRACKET
    (93) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 228
    COMMA           shift and go to state 229

    var_cte_3                      shift and go to state 230

state 205

    (63) super_exp_2 -> logicop super_exp .

    COMMA           reduce using rule 63 (super_exp_2 -> logicop super_exp .)
    RPAREN          reduce using rule 63 (super_exp_2 -> logicop super_exp .)
    SEMICOLON       reduce using rule 63 (super_exp_2 -> logicop super_exp .)


state 206

    (66) expresion_2 -> relop exp .

    AND             reduce using rule 66 (expresion_2 -> relop exp .)
    OR              reduce using rule 66 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 66 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 66 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 66 (expresion_2 -> relop exp .)


state 207

    (75) exp_2 -> addop exp .

    GREATER         reduce using rule 75 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 75 (exp_2 -> addop exp .)
    LESS            reduce using rule 75 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 75 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 75 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 75 (exp_2 -> addop exp .)
    AND             reduce using rule 75 (exp_2 -> addop exp .)
    OR              reduce using rule 75 (exp_2 -> addop exp .)
    COMMA           reduce using rule 75 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 75 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 75 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 75 (exp_2 -> addop exp .)


state 208

    (100) rparen_condicion -> RPAREN .

    ID              reduce using rule 100 (rparen_condicion -> RPAREN .)
    DRAW            reduce using rule 100 (rparen_condicion -> RPAREN .)
    IF              reduce using rule 100 (rparen_condicion -> RPAREN .)
    FOR             reduce using rule 100 (rparen_condicion -> RPAREN .)
    WHILE           reduce using rule 100 (rparen_condicion -> RPAREN .)
    INT             reduce using rule 100 (rparen_condicion -> RPAREN .)
    FLOAT           reduce using rule 100 (rparen_condicion -> RPAREN .)
    BOOLEAN         reduce using rule 100 (rparen_condicion -> RPAREN .)
    ARRAY           reduce using rule 100 (rparen_condicion -> RPAREN .)
    END             reduce using rule 100 (rparen_condicion -> RPAREN .)
    ELSE            reduce using rule 100 (rparen_condicion -> RPAREN .)


state 209

    (99) condicion -> condicion_id LPAREN super_exp rparen_condicion . bloque condicion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    ELSE            reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    condicion_id                   shift and go to state 56
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 231
    array                          shift and go to state 17
    vars                           shift and go to state 38
    for                            shift and go to state 52
    llamada                        shift and go to state 45
    estatuto                       shift and go to state 44
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    ciclo                          shift and go to state 43
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55

state 210

    (57) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 232


state 211

    (56) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 56 (def_array -> LBRACKET def_array_2 .)


state 212

    (59) def_array_cte -> var_cte . def_array_cte_2
    (60) def_array_cte_2 -> . COMMA def_array_cte
    (61) def_array_cte_2 -> . empty
    (157) empty -> .

    COMMA           shift and go to state 233
    RBRACKET        reduce using rule 157 (empty -> .)

    def_array_cte_2                shift and go to state 234
    empty                          shift and go to state 235

state 213

    (58) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 58 (def_array_2 -> RBRACKET .)


state 214

    (44) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    MAIN            reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 44 (vars3 -> EQUAL def_array SEMICOLON .)


state 215

    (39) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (40) array_2 -> . COMMA CTE_I
    (41) array_2 -> . empty
    (157) empty -> .

    COMMA           shift and go to state 237
    GREATER         reduce using rule 157 (empty -> .)

    array_2                        shift and go to state 236
    empty                          shift and go to state 238

state 216

    (34) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 239


state 217

    (148) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 148 (var_local_3 -> COMMA var_local_2 .)


state 218

    (142) funcion_2 -> RETURN super_exp . SEMICOLON END

    SEMICOLON       shift and go to state 240


state 219

    (30) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . super_exp
    (62) super_exp -> . expresion super_exp_2
    (65) expresion -> . exp expresion_2
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    super_exp                      shift and go to state 241
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    expresion                      shift and go to state 103
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 106
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108
    termino                        shift and go to state 109

state 220

    (33) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 242


state 221

    (127) for -> for_init LPAREN for_exp COMMA for_exp . COMMA for_exp2 for_rparen bloque for_end

    COMMA           shift and go to state 243


state 222

    (133) while -> while_init LPAREN super_exp rparen_while bloque . while_end
    (136) while_end -> . END

    END             shift and go to state 245

    while_end                      shift and go to state 244

state 223

    (111) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 111 (accion_params_2 -> RPAREN .)


state 224

    (110) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 246


state 225

    (112) accion_params_cte -> var_cte . accion_params_cte_2
    (113) accion_params_cte_2 -> . COMMA accion_params_cte
    (114) accion_params_cte_2 -> . empty
    (157) empty -> .

    COMMA           shift and go to state 248
    RPAREN          reduce using rule 157 (empty -> .)

    accion_params_cte_2            shift and go to state 247
    empty                          shift and go to state 249

state 226

    (109) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 109 (accion_params -> LPAREN accion_params_2 .)


state 227

    (108) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 108 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 228

    (92) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 92 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 92 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 92 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 92 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 92 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 92 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 92 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 92 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 92 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 92 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 92 (var_cte_3 -> RBRACKET .)
    AND             reduce using rule 92 (var_cte_3 -> RBRACKET .)
    OR              reduce using rule 92 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 92 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 92 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 92 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 92 (var_cte_3 -> RBRACKET .)


state 229

    (93) var_cte_3 -> COMMA . exp RBRACKET
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    llamada                        shift and go to state 93
    factor                         shift and go to state 98
    var_cte_1                      shift and go to state 92
    addop                          shift and go to state 97
    var_cte                        shift and go to state 86
    llamada_id                     shift and go to state 55
    termino                        shift and go to state 109
    exp                            shift and go to state 250
    lparen_factor                  shift and go to state 95
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108
    var_cte_i                      shift and go to state 105

state 230

    (90) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    AND             reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    OR              reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 90 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 231

    (99) condicion -> condicion_id LPAREN super_exp rparen_condicion bloque . condicion_2
    (102) condicion_2 -> . condicion_end
    (103) condicion_2 -> . condicion_else bloque condicion_end
    (105) condicion_end -> . END
    (104) condicion_else -> . ELSE

    END             shift and go to state 252
    ELSE            shift and go to state 255

    condicion_else                 shift and go to state 251
    condicion_2                    shift and go to state 253
    condicion_end                  shift and go to state 254

state 232

    (57) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 57 (def_array_2 -> def_array_cte RBRACKET .)


state 233

    (60) def_array_cte_2 -> COMMA . def_array_cte
    (59) def_array_cte -> . var_cte def_array_cte_2
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    def_array_cte                  shift and go to state 256
    var_cte_1                      shift and go to state 92
    var_cte                        shift and go to state 212
    llamada                        shift and go to state 93
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 234

    (59) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 59 (def_array_cte -> var_cte def_array_cte_2 .)


state 235

    (61) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 61 (def_array_cte_2 -> empty .)


state 236

    (39) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 257


state 237

    (40) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 258


state 238

    (41) array_2 -> empty .

    GREATER         reduce using rule 41 (array_2 -> empty .)


state 239

    (34) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 259


state 240

    (142) funcion_2 -> RETURN super_exp SEMICOLON . END

    END             shift and go to state 260


state 241

    (30) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .

    SEMICOLON       reduce using rule 30 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .)


state 242

    (33) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 33 (asignacion_3 -> COMMA exp RBRACKET .)


state 243

    (127) for -> for_init LPAREN for_exp COMMA for_exp COMMA . for_exp2 for_rparen bloque for_end
    (129) for_exp2 -> . exp
    (74) exp -> . termino exp_2
    (77) termino -> . factor termino_2
    (94) factor -> . lparen_factor super_exp rparen_factor
    (95) factor -> . addop var_cte
    (96) factor -> . var_cte
    (97) lparen_factor -> . LPAREN
    (150) addop -> . PLUS
    (151) addop -> . MINUS
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 94
    MINUS           shift and go to state 88
    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 86
    termino                        shift and go to state 109
    var_cte_1                      shift and go to state 92
    llamada                        shift and go to state 93
    for_exp2                       shift and go to state 261
    lparen_factor                  shift and go to state 95
    addop                          shift and go to state 97
    factor                         shift and go to state 98
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    exp                            shift and go to state 262
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 244

    (133) while -> while_init LPAREN super_exp rparen_while bloque while_end .

    ID              reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    DRAW            reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    IF              reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    FOR             reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    WHILE           reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    INT             reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    FLOAT           reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    BOOLEAN         reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    ARRAY           reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    END             reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    RETURN          reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    ELSE            reduce using rule 133 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)


state 245

    (136) while_end -> END .

    ID              reduce using rule 136 (while_end -> END .)
    DRAW            reduce using rule 136 (while_end -> END .)
    IF              reduce using rule 136 (while_end -> END .)
    FOR             reduce using rule 136 (while_end -> END .)
    WHILE           reduce using rule 136 (while_end -> END .)
    INT             reduce using rule 136 (while_end -> END .)
    FLOAT           reduce using rule 136 (while_end -> END .)
    BOOLEAN         reduce using rule 136 (while_end -> END .)
    ARRAY           reduce using rule 136 (while_end -> END .)
    END             reduce using rule 136 (while_end -> END .)
    RETURN          reduce using rule 136 (while_end -> END .)
    ELSE            reduce using rule 136 (while_end -> END .)


state 246

    (110) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 110 (accion_params_2 -> accion_params_cte RPAREN .)


state 247

    (112) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 112 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 248

    (113) accion_params_cte_2 -> COMMA . accion_params_cte
    (112) accion_params_cte -> . var_cte accion_params_cte_2
    (80) var_cte -> . var_cte_1
    (81) var_cte -> . var_cte_i
    (82) var_cte -> . var_cte_f
    (83) var_cte -> . var_cte_b
    (84) var_cte -> . llamada
    (89) var_cte_1 -> . ID var_cte_2
    (85) var_cte_i -> . CTE_I
    (86) var_cte_f -> . CTE_F
    (87) var_cte_b -> . TRUE
    (88) var_cte_b -> . FALSE
    (46) llamada -> . llamada_id llamada_2
    (47) llamada_id -> . ID LPAREN

    ID              shift and go to state 102
    CTE_I           shift and go to state 99
    CTE_F           shift and go to state 96
    TRUE            shift and go to state 87
    FALSE           shift and go to state 104

    var_cte_1                      shift and go to state 92
    accion_params_cte              shift and go to state 263
    var_cte                        shift and go to state 225
    llamada                        shift and go to state 93
    llamada_id                     shift and go to state 55
    var_cte_i                      shift and go to state 105
    var_cte_f                      shift and go to state 107
    var_cte_b                      shift and go to state 108

state 249

    (114) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 114 (accion_params_cte_2 -> empty .)


state 250

    (93) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 264


state 251

    (103) condicion_2 -> condicion_else . bloque condicion_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 265
    array                          shift and go to state 17
    ciclo                          shift and go to state 43
    for                            shift and go to state 52
    estatuto                       shift and go to state 44
    llamada                        shift and go to state 45
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55
    condicion_id                   shift and go to state 56

state 252

    (105) condicion_end -> END .

    ID              reduce using rule 105 (condicion_end -> END .)
    DRAW            reduce using rule 105 (condicion_end -> END .)
    IF              reduce using rule 105 (condicion_end -> END .)
    FOR             reduce using rule 105 (condicion_end -> END .)
    WHILE           reduce using rule 105 (condicion_end -> END .)
    INT             reduce using rule 105 (condicion_end -> END .)
    FLOAT           reduce using rule 105 (condicion_end -> END .)
    BOOLEAN         reduce using rule 105 (condicion_end -> END .)
    ARRAY           reduce using rule 105 (condicion_end -> END .)
    END             reduce using rule 105 (condicion_end -> END .)
    RETURN          reduce using rule 105 (condicion_end -> END .)
    ELSE            reduce using rule 105 (condicion_end -> END .)


state 253

    (99) condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .

    ID              reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    DRAW            reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    IF              reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    FOR             reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    WHILE           reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    INT             reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    FLOAT           reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    BOOLEAN         reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    ARRAY           reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    END             reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    ELSE            reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    RETURN          reduce using rule 99 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)


state 254

    (102) condicion_2 -> condicion_end .

    ID              reduce using rule 102 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 102 (condicion_2 -> condicion_end .)
    IF              reduce using rule 102 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 102 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 102 (condicion_2 -> condicion_end .)
    INT             reduce using rule 102 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 102 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 102 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 102 (condicion_2 -> condicion_end .)
    END             reduce using rule 102 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 102 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 102 (condicion_2 -> condicion_end .)


state 255

    (104) condicion_else -> ELSE .

    ID              reduce using rule 104 (condicion_else -> ELSE .)
    DRAW            reduce using rule 104 (condicion_else -> ELSE .)
    IF              reduce using rule 104 (condicion_else -> ELSE .)
    FOR             reduce using rule 104 (condicion_else -> ELSE .)
    WHILE           reduce using rule 104 (condicion_else -> ELSE .)
    INT             reduce using rule 104 (condicion_else -> ELSE .)
    FLOAT           reduce using rule 104 (condicion_else -> ELSE .)
    BOOLEAN         reduce using rule 104 (condicion_else -> ELSE .)
    ARRAY           reduce using rule 104 (condicion_else -> ELSE .)
    END             reduce using rule 104 (condicion_else -> ELSE .)


state 256

    (60) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 60 (def_array_cte_2 -> COMMA def_array_cte .)


state 257

    (39) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 39 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 258

    (40) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 40 (array_2 -> COMMA CTE_I .)


state 259

    (34) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    GLOBAL          reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    MAIN            reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 260

    (142) funcion_2 -> RETURN super_exp SEMICOLON END .

    DEF             reduce using rule 142 (funcion_2 -> RETURN super_exp SEMICOLON END .)
    MAIN            reduce using rule 142 (funcion_2 -> RETURN super_exp SEMICOLON END .)


state 261

    (127) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 . for_rparen bloque for_end
    (130) for_rparen -> . RPAREN

    RPAREN          shift and go to state 266

    for_rparen                     shift and go to state 267

state 262

    (129) for_exp2 -> exp .

    RPAREN          reduce using rule 129 (for_exp2 -> exp .)


state 263

    (113) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 113 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 264

    (93) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    AND             reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    OR              reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 93 (var_cte_3 -> COMMA exp RBRACKET .)


state 265

    (103) condicion_2 -> condicion_else bloque . condicion_end
    (105) condicion_end -> . END

    END             shift and go to state 252

    condicion_end                  shift and go to state 268

state 266

    (130) for_rparen -> RPAREN .

    ID              reduce using rule 130 (for_rparen -> RPAREN .)
    DRAW            reduce using rule 130 (for_rparen -> RPAREN .)
    IF              reduce using rule 130 (for_rparen -> RPAREN .)
    FOR             reduce using rule 130 (for_rparen -> RPAREN .)
    WHILE           reduce using rule 130 (for_rparen -> RPAREN .)
    INT             reduce using rule 130 (for_rparen -> RPAREN .)
    FLOAT           reduce using rule 130 (for_rparen -> RPAREN .)
    BOOLEAN         reduce using rule 130 (for_rparen -> RPAREN .)
    ARRAY           reduce using rule 130 (for_rparen -> RPAREN .)
    END             reduce using rule 130 (for_rparen -> RPAREN .)


state 267

    (127) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen . bloque for_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (21) estatuto -> . asignacion
    (22) estatuto -> . condicion
    (23) estatuto -> . ciclo
    (24) estatuto -> . accion
    (25) estatuto -> . vars
    (26) estatuto -> . llamada SEMICOLON
    (157) empty -> .
    (27) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (99) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (106) ciclo -> . for
    (107) ciclo -> . while
    (108) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . vars_id vars2
    (36) vars -> . vars_aux
    (46) llamada -> . llamada_id llamada_2
    (28) asignacion_id -> . ID
    (101) condicion_id -> . IF
    (127) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (133) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (37) vars_id -> . data_type ID
    (38) vars_aux -> . array ID vars3
    (47) llamada_id -> . ID LPAREN
    (131) for_init -> . FOR
    (134) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (39) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 157 (empty -> .)
    ID              shift and go to state 50
    DRAW            shift and go to state 19
    IF              shift and go to state 48
    FOR             shift and go to state 41
    WHILE           shift and go to state 40
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 18

    asignacion_id                  shift and go to state 37
    vars_id                        shift and go to state 14
    vars                           shift and go to state 38
    for_init                       shift and go to state 39
    vars_aux                       shift and go to state 16
    bloque                         shift and go to state 269
    array                          shift and go to state 17
    ciclo                          shift and go to state 43
    for                            shift and go to state 52
    estatuto                       shift and go to state 44
    llamada                        shift and go to state 45
    condicion                      shift and go to state 46
    while_init                     shift and go to state 47
    empty                          shift and go to state 49
    data_type                      shift and go to state 20
    accion                         shift and go to state 51
    asignacion                     shift and go to state 53
    while                          shift and go to state 54
    llamada_id                     shift and go to state 55
    condicion_id                   shift and go to state 56

state 268

    (103) condicion_2 -> condicion_else bloque condicion_end .

    ID              reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    DRAW            reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    IF              reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    FOR             reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    WHILE           reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    INT             reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    FLOAT           reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    BOOLEAN         reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    ARRAY           reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    END             reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    RETURN          reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)
    ELSE            reduce using rule 103 (condicion_2 -> condicion_else bloque condicion_end .)


state 269

    (127) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque . for_end
    (132) for_end -> . END

    END             shift and go to state 270

    for_end                        shift and go to state 271

state 270

    (132) for_end -> END .

    ID              reduce using rule 132 (for_end -> END .)
    DRAW            reduce using rule 132 (for_end -> END .)
    IF              reduce using rule 132 (for_end -> END .)
    FOR             reduce using rule 132 (for_end -> END .)
    WHILE           reduce using rule 132 (for_end -> END .)
    INT             reduce using rule 132 (for_end -> END .)
    FLOAT           reduce using rule 132 (for_end -> END .)
    BOOLEAN         reduce using rule 132 (for_end -> END .)
    ARRAY           reduce using rule 132 (for_end -> END .)
    END             reduce using rule 132 (for_end -> END .)
    RETURN          reduce using rule 132 (for_end -> END .)
    ELSE            reduce using rule 132 (for_end -> END .)


state 271

    (127) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .

    ID              reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    DRAW            reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    IF              reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    FOR             reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    WHILE           reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    INT             reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    FLOAT           reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    BOOLEAN         reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    ARRAY           reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    END             reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    RETURN          reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    ELSE            reduce using rule 127 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)

