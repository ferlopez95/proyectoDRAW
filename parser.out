Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    OR
    AND

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones programa_end
Rule 2     programa -> funciones programa_end
Rule 3     programa_end -> empty
Rule 4     funciones -> funcion main
Rule 5     funciones -> main
Rule 6     globales -> global_1 vars globales_2
Rule 7     globales_2 -> global_1 vars globales_2
Rule 8     globales_2 -> empty
Rule 9     global_1 -> GLOBAL
Rule 10    bloque -> estatuto bloque
Rule 11    bloque -> empty
Rule 12    data_type -> INT
Rule 13    data_type -> FLOAT
Rule 14    data_type -> BOOLEAN
Rule 15    main -> main_1 bloque END
Rule 16    main_1 -> DEF VOID MAIN LPAREN RPAREN
Rule 17    estatuto -> asignacion
Rule 18    estatuto -> condicion
Rule 19    estatuto -> ciclo
Rule 20    estatuto -> accion
Rule 21    estatuto -> vars
Rule 22    estatuto -> llamada SEMICOLON
Rule 23    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 24    asignacion_id -> ID
Rule 25    asignacion_2 -> EQUAL expresion
Rule 26    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion
Rule 27    asignacion_3 -> RBRACKET
Rule 28    asignacion_3 -> COMMA exp RBRACKET
Rule 29    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 30    vars -> data_type ID vars2
Rule 31    vars -> vars_aux
Rule 32    vars_aux -> array ID vars3
Rule 33    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 34    array_2 -> COMMA CTE_I
Rule 35    array_2 -> empty
Rule 36    vars2 -> EQUAL expresion SEMICOLON
Rule 37    vars2 -> SEMICOLON
Rule 38    vars3 -> EQUAL def_array SEMICOLON
Rule 39    vars3 -> SEMICOLON
Rule 40    llamada -> llamada_id LPAREN llamada_2
Rule 41    llamada_id -> ID
Rule 42    llamada_2 -> llamada_exp RPAREN
Rule 43    llamada_2 -> RPAREN
Rule 44    llamada_exp -> expresion llamada_exp2
Rule 45    llamada_exp2 -> COMMA llamada_exp
Rule 46    llamada_exp2 -> empty
Rule 47    def_array -> LBRACKET def_array_2
Rule 48    def_array_2 -> def_array_cte RBRACKET
Rule 49    def_array_2 -> RBRACKET
Rule 50    def_array_cte -> var_cte def_array_cte_2
Rule 51    def_array_cte_2 -> COMMA def_array_cte
Rule 52    def_array_cte_2 -> empty
Rule 53    expresion -> exp expresion_2
Rule 54    expresion_2 -> relop exp
Rule 55    expresion_2 -> empty
Rule 56    relop -> GREATER
Rule 57    relop -> GREATEREQUAL
Rule 58    relop -> LESS
Rule 59    relop -> LESSEQUAL
Rule 60    relop -> DEQUAL
Rule 61    relop -> DISTINT
Rule 62    exp -> termino exp_2
Rule 63    exp_2 -> addop exp
Rule 64    exp_2 -> empty
Rule 65    termino -> factor termino_2
Rule 66    termino_2 -> timesop termino
Rule 67    termino_2 -> empty
Rule 68    var_cte -> var_cte_1
Rule 69    var_cte -> CTE_I
Rule 70    var_cte -> CTE_F
Rule 71    var_cte -> TRUE
Rule 72    var_cte -> FALSE
Rule 73    var_cte -> llamada
Rule 74    var_cte_1 -> ID var_cte_2
Rule 75    var_cte_2 -> LBRACKET exp var_cte_3
Rule 76    var_cte_2 -> empty
Rule 77    var_cte_3 -> RBRACKET
Rule 78    var_cte_3 -> COMMA exp RBRACKET
Rule 79    factor -> LPAREN expresion RPAREN
Rule 80    factor -> addop var_cte
Rule 81    factor -> var_cte
Rule 82    condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2
Rule 83    condicion_id -> IF
Rule 84    condicion_2 -> condicion_end
Rule 85    condicion_2 -> ELSE bloque condicion_end
Rule 86    condicion_end -> END
Rule 87    ciclo -> for
Rule 88    ciclo -> while
Rule 89    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 90    accion_params -> LPAREN accion_params_2
Rule 91    accion_params_2 -> accion_params_cte RPAREN
Rule 92    accion_params_2 -> RPAREN
Rule 93    accion_params_cte -> var_cte accion_params_cte_2
Rule 94    accion_params_cte_2 -> COMMA accion_params_cte
Rule 95    accion_params_cte_2 -> empty
Rule 96    accion_nombre -> SETPOSITION
Rule 97    accion_nombre -> CIRCLE
Rule 98    accion_nombre -> RIGHT
Rule 99    accion_nombre -> LEFT
Rule 100   accion_nombre -> HIDE
Rule 101   accion_nombre -> SQUARE
Rule 102   accion_nombre -> CLEAR
Rule 103   accion_nombre -> SHOW
Rule 104   accion_nombre -> BACK
Rule 105   accion_nombre -> SPEED
Rule 106   accion_nombre -> FORWARD
Rule 107   accion_nombre -> SETCOLOR
Rule 108   for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
Rule 109   for_init -> FOR
Rule 110   for_end -> END
Rule 111   while -> while_init LPAREN expresion RPAREN bloque while_end
Rule 112   while_init -> WHILE
Rule 113   while_end -> END
Rule 114   funcion -> funcion_1 var_local bloque funcion_2
Rule 115   funcion_1 -> DEF data_type ID
Rule 116   funcion_2 -> RETURN expresion SEMICOLON funcion_end
Rule 117   funcion_2 -> funcion_end
Rule 118   funcion_end -> END
Rule 119   var_local -> LPAREN var_local_2 RPAREN
Rule 120   var_local_2 -> var_local_2_1 var_local_3
Rule 121   var_local_2 -> empty
Rule 122   var_local_2_1 -> data_type ID
Rule 123   var_local_3 -> COMMA var_local_2
Rule 124   var_local_3 -> empty
Rule 125   addop -> PLUS
Rule 126   addop -> MINUS
Rule 127   timesop -> TIMES
Rule 128   timesop -> DIVIDE
Rule 129   timesop -> PERCENT
Rule 130   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 33
BACK                 : 104
BOOLEAN              : 14
CIRCLE               : 97
CLEAR                : 102
COMMA                : 28 33 34 45 51 78 94 108 108 123
CTE_F                : 70
CTE_I                : 33 34 69 108 108 108
DEF                  : 16 115
DEQUAL               : 60
DISTINT              : 61
DIVIDE               : 128
DRAW                 : 29
ELSE                 : 85
END                  : 15 86 110 113 118
EQUAL                : 25 26 29 36 38
FALSE                : 72
FLOAT                : 13
FOR                  : 109
FORWARD              : 106
GLOBAL               : 9
GREATER              : 33 56
GREATEREQUAL         : 57
HIDE                 : 100
ID                   : 24 29 30 32 41 74 89 115 122
IF                   : 83
INT                  : 12
LBRACKET             : 26 47 75
LEFT                 : 99
LESS                 : 33 58
LESSEQUAL            : 59
LPAREN               : 16 29 40 79 82 90 108 111 119
MAIN                 : 16
MINUS                : 126
NEWDRAW              : 29
OR                   : 
PERCENT              : 129
PLUS                 : 125
POINT                : 89
RBRACKET             : 27 28 48 49 77 78
RETURN               : 116
RIGHT                : 98
RPAREN               : 16 29 42 43 79 82 91 92 108 111 119
SEMICOLON            : 22 23 29 36 37 38 39 89 116
SETCOLOR             : 107
SETPOSITION          : 96
SHOW                 : 103
SPEED                : 105
SQUARE               : 101
TIMES                : 127
TRUE                 : 71
VOID                 : 16
WHILE                : 112
error                : 

Nonterminals, with rules where they appear

accion               : 20
accion_nombre        : 89
accion_params        : 89
accion_params_2      : 90
accion_params_cte    : 91 94
accion_params_cte_2  : 93
addop                : 63 80
array                : 32
array_2              : 33
asignacion           : 17
asignacion_2         : 23
asignacion_3         : 26
asignacion_id        : 23
bloque               : 10 15 82 85 108 111 114
ciclo                : 19
condicion            : 18
condicion_2          : 82
condicion_end        : 84 85
condicion_id         : 82
data_type            : 30 33 115 122
def_array            : 38
def_array_2          : 47
def_array_cte        : 48 51
def_array_cte_2      : 50
empty                : 3 8 11 35 46 52 55 64 67 76 95 121 124
estatuto             : 10
exp                  : 26 28 53 54 63 75 78
exp_2                : 62
expresion            : 25 26 36 44 79 82 111 116
expresion_2          : 53
factor               : 65
for                  : 87
for_end              : 108
for_init             : 108
funcion              : 4
funcion_1            : 114
funcion_2            : 114
funcion_end          : 116 117
funciones            : 1 2
global_1             : 6 7
globales             : 1
globales_2           : 6 7
llamada              : 22 73
llamada_2            : 40
llamada_exp          : 42 45
llamada_exp2         : 44
llamada_id           : 40
main                 : 4 5
main_1               : 15
programa             : 0
programa_end         : 1 2
relop                : 54
termino              : 62 66
termino_2            : 65
timesop              : 66
var_cte              : 50 80 81 93
var_cte_1            : 68
var_cte_2            : 74
var_cte_3            : 75
var_local            : 114
var_local_2          : 119 123
var_local_2_1        : 120
var_local_3          : 120
vars                 : 6 7 21
vars2                : 30
vars3                : 32
vars_aux             : 31
while                : 88
while_end            : 111
while_init           : 111

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones programa_end
    (2) programa -> . funciones programa_end
    (6) globales -> . global_1 vars globales_2
    (4) funciones -> . funcion main
    (5) funciones -> . main
    (9) global_1 -> . GLOBAL
    (114) funcion -> . funcion_1 var_local bloque funcion_2
    (15) main -> . main_1 bloque END
    (115) funcion_1 -> . DEF data_type ID
    (16) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    GLOBAL          shift and go to state 5
    DEF             shift and go to state 8

    globales                       shift and go to state 7
    main_1                         shift and go to state 1
    global_1                       shift and go to state 2
    funcion_1                      shift and go to state 9
    funcion                        shift and go to state 3
    programa                       shift and go to state 4
    main                           shift and go to state 6
    funciones                      shift and go to state 10

state 1

    (15) main -> main_1 . bloque END
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    for_init                       shift and go to state 35
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 18
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    estatuto                       shift and go to state 31
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 23
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 2

    (6) globales -> global_1 . vars globales_2
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 34
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    ARRAY           shift and go to state 21

    array                          shift and go to state 28
    vars                           shift and go to state 39
    data_type                      shift and go to state 30
    vars_aux                       shift and go to state 13

state 3

    (4) funciones -> funcion . main
    (15) main -> . main_1 bloque END
    (16) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    DEF             shift and go to state 41

    main                           shift and go to state 40
    main_1                         shift and go to state 1

state 4

    (0) S' -> programa .



state 5

    (9) global_1 -> GLOBAL .

    DRAW            reduce using rule 9 (global_1 -> GLOBAL .)
    INT             reduce using rule 9 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 9 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 9 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 9 (global_1 -> GLOBAL .)


state 6

    (5) funciones -> main .

    $end            reduce using rule 5 (funciones -> main .)


state 7

    (1) programa -> globales . funciones programa_end
    (4) funciones -> . funcion main
    (5) funciones -> . main
    (114) funcion -> . funcion_1 var_local bloque funcion_2
    (15) main -> . main_1 bloque END
    (115) funcion_1 -> . DEF data_type ID
    (16) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    DEF             shift and go to state 8

    main                           shift and go to state 6
    main_1                         shift and go to state 1
    funciones                      shift and go to state 42
    funcion_1                      shift and go to state 9
    funcion                        shift and go to state 3

state 8

    (115) funcion_1 -> DEF . data_type ID
    (16) main_1 -> DEF . VOID MAIN LPAREN RPAREN
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN

    VOID            shift and go to state 44
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24

    data_type                      shift and go to state 43

state 9

    (114) funcion -> funcion_1 . var_local bloque funcion_2
    (119) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 46

    var_local                      shift and go to state 45

state 10

    (2) programa -> funciones . programa_end
    (3) programa_end -> . empty
    (130) empty -> .

    $end            reduce using rule 130 (empty -> .)

    programa_end                   shift and go to state 47
    empty                          shift and go to state 48

state 11

    (13) data_type -> FLOAT .

    ID              reduce using rule 13 (data_type -> FLOAT .)
    COMMA           reduce using rule 13 (data_type -> FLOAT .)


state 12

    (19) estatuto -> ciclo .

    ID              reduce using rule 19 (estatuto -> ciclo .)
    DRAW            reduce using rule 19 (estatuto -> ciclo .)
    IF              reduce using rule 19 (estatuto -> ciclo .)
    INT             reduce using rule 19 (estatuto -> ciclo .)
    FLOAT           reduce using rule 19 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 19 (estatuto -> ciclo .)
    FOR             reduce using rule 19 (estatuto -> ciclo .)
    WHILE           reduce using rule 19 (estatuto -> ciclo .)
    ARRAY           reduce using rule 19 (estatuto -> ciclo .)
    RETURN          reduce using rule 19 (estatuto -> ciclo .)
    END             reduce using rule 19 (estatuto -> ciclo .)
    ELSE            reduce using rule 19 (estatuto -> ciclo .)


state 13

    (31) vars -> vars_aux .

    ID              reduce using rule 31 (vars -> vars_aux .)
    DRAW            reduce using rule 31 (vars -> vars_aux .)
    IF              reduce using rule 31 (vars -> vars_aux .)
    INT             reduce using rule 31 (vars -> vars_aux .)
    FLOAT           reduce using rule 31 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 31 (vars -> vars_aux .)
    FOR             reduce using rule 31 (vars -> vars_aux .)
    WHILE           reduce using rule 31 (vars -> vars_aux .)
    ARRAY           reduce using rule 31 (vars -> vars_aux .)
    END             reduce using rule 31 (vars -> vars_aux .)
    ELSE            reduce using rule 31 (vars -> vars_aux .)
    RETURN          reduce using rule 31 (vars -> vars_aux .)
    GLOBAL          reduce using rule 31 (vars -> vars_aux .)
    DEF             reduce using rule 31 (vars -> vars_aux .)


state 14

    (18) estatuto -> condicion .

    ID              reduce using rule 18 (estatuto -> condicion .)
    DRAW            reduce using rule 18 (estatuto -> condicion .)
    IF              reduce using rule 18 (estatuto -> condicion .)
    INT             reduce using rule 18 (estatuto -> condicion .)
    FLOAT           reduce using rule 18 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 18 (estatuto -> condicion .)
    FOR             reduce using rule 18 (estatuto -> condicion .)
    WHILE           reduce using rule 18 (estatuto -> condicion .)
    ARRAY           reduce using rule 18 (estatuto -> condicion .)
    RETURN          reduce using rule 18 (estatuto -> condicion .)
    END             reduce using rule 18 (estatuto -> condicion .)
    ELSE            reduce using rule 18 (estatuto -> condicion .)


state 15

    (20) estatuto -> accion .

    ID              reduce using rule 20 (estatuto -> accion .)
    DRAW            reduce using rule 20 (estatuto -> accion .)
    IF              reduce using rule 20 (estatuto -> accion .)
    INT             reduce using rule 20 (estatuto -> accion .)
    FLOAT           reduce using rule 20 (estatuto -> accion .)
    BOOLEAN         reduce using rule 20 (estatuto -> accion .)
    FOR             reduce using rule 20 (estatuto -> accion .)
    WHILE           reduce using rule 20 (estatuto -> accion .)
    ARRAY           reduce using rule 20 (estatuto -> accion .)
    RETURN          reduce using rule 20 (estatuto -> accion .)
    END             reduce using rule 20 (estatuto -> accion .)
    ELSE            reduce using rule 20 (estatuto -> accion .)


state 16

    (21) estatuto -> vars .

    ID              reduce using rule 21 (estatuto -> vars .)
    DRAW            reduce using rule 21 (estatuto -> vars .)
    IF              reduce using rule 21 (estatuto -> vars .)
    INT             reduce using rule 21 (estatuto -> vars .)
    FLOAT           reduce using rule 21 (estatuto -> vars .)
    BOOLEAN         reduce using rule 21 (estatuto -> vars .)
    FOR             reduce using rule 21 (estatuto -> vars .)
    WHILE           reduce using rule 21 (estatuto -> vars .)
    ARRAY           reduce using rule 21 (estatuto -> vars .)
    RETURN          reduce using rule 21 (estatuto -> vars .)
    END             reduce using rule 21 (estatuto -> vars .)
    ELSE            reduce using rule 21 (estatuto -> vars .)


state 17

    (23) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (25) asignacion_2 -> . EQUAL expresion
    (26) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL expresion

    EQUAL           shift and go to state 49
    LBRACKET        shift and go to state 50

    asignacion_2                   shift and go to state 51

state 18

    (15) main -> main_1 bloque . END

    END             shift and go to state 52


state 19

    (89) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (24) asignacion_id -> ID .
    (41) llamada_id -> ID .

    POINT           shift and go to state 53
    EQUAL           reduce using rule 24 (asignacion_id -> ID .)
    LBRACKET        reduce using rule 24 (asignacion_id -> ID .)
    LPAREN          reduce using rule 41 (llamada_id -> ID .)


state 20

    (83) condicion_id -> IF .

    LPAREN          reduce using rule 83 (condicion_id -> IF .)


state 21

    (33) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 54


state 22

    (82) condicion -> condicion_id . LPAREN expresion RPAREN bloque condicion_2

    LPAREN          shift and go to state 55


state 23

    (22) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 56


state 24

    (14) data_type -> BOOLEAN .

    ID              reduce using rule 14 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 14 (data_type -> BOOLEAN .)


state 25

    (12) data_type -> INT .

    ID              reduce using rule 12 (data_type -> INT .)
    COMMA           reduce using rule 12 (data_type -> INT .)


state 26

    (88) ciclo -> while .

    ID              reduce using rule 88 (ciclo -> while .)
    DRAW            reduce using rule 88 (ciclo -> while .)
    IF              reduce using rule 88 (ciclo -> while .)
    INT             reduce using rule 88 (ciclo -> while .)
    FLOAT           reduce using rule 88 (ciclo -> while .)
    BOOLEAN         reduce using rule 88 (ciclo -> while .)
    FOR             reduce using rule 88 (ciclo -> while .)
    WHILE           reduce using rule 88 (ciclo -> while .)
    ARRAY           reduce using rule 88 (ciclo -> while .)
    END             reduce using rule 88 (ciclo -> while .)
    RETURN          reduce using rule 88 (ciclo -> while .)
    ELSE            reduce using rule 88 (ciclo -> while .)


state 27

    (40) llamada -> llamada_id . LPAREN llamada_2

    LPAREN          shift and go to state 57


state 28

    (32) vars_aux -> array . ID vars3

    ID              shift and go to state 58


state 29

    (11) bloque -> empty .

    ELSE            reduce using rule 11 (bloque -> empty .)
    END             reduce using rule 11 (bloque -> empty .)
    RETURN          reduce using rule 11 (bloque -> empty .)


state 30

    (30) vars -> data_type . ID vars2

    ID              shift and go to state 59


state 31

    (10) bloque -> estatuto . bloque
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 130 (empty -> .)
    RETURN          reduce using rule 130 (empty -> .)
    ELSE            reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    for_init                       shift and go to state 35
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 60
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    estatuto                       shift and go to state 31
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 23
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 32

    (112) while_init -> WHILE .

    LPAREN          reduce using rule 112 (while_init -> WHILE .)


state 33

    (111) while -> while_init . LPAREN expresion RPAREN bloque while_end

    LPAREN          shift and go to state 61


state 34

    (29) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 62


state 35

    (108) for -> for_init . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    LPAREN          shift and go to state 63


state 36

    (109) for_init -> FOR .

    LPAREN          reduce using rule 109 (for_init -> FOR .)


state 37

    (87) ciclo -> for .

    ID              reduce using rule 87 (ciclo -> for .)
    DRAW            reduce using rule 87 (ciclo -> for .)
    IF              reduce using rule 87 (ciclo -> for .)
    INT             reduce using rule 87 (ciclo -> for .)
    FLOAT           reduce using rule 87 (ciclo -> for .)
    BOOLEAN         reduce using rule 87 (ciclo -> for .)
    FOR             reduce using rule 87 (ciclo -> for .)
    WHILE           reduce using rule 87 (ciclo -> for .)
    ARRAY           reduce using rule 87 (ciclo -> for .)
    END             reduce using rule 87 (ciclo -> for .)
    RETURN          reduce using rule 87 (ciclo -> for .)
    ELSE            reduce using rule 87 (ciclo -> for .)


state 38

    (17) estatuto -> asignacion .

    ID              reduce using rule 17 (estatuto -> asignacion .)
    DRAW            reduce using rule 17 (estatuto -> asignacion .)
    IF              reduce using rule 17 (estatuto -> asignacion .)
    INT             reduce using rule 17 (estatuto -> asignacion .)
    FLOAT           reduce using rule 17 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 17 (estatuto -> asignacion .)
    FOR             reduce using rule 17 (estatuto -> asignacion .)
    WHILE           reduce using rule 17 (estatuto -> asignacion .)
    ARRAY           reduce using rule 17 (estatuto -> asignacion .)
    RETURN          reduce using rule 17 (estatuto -> asignacion .)
    END             reduce using rule 17 (estatuto -> asignacion .)
    ELSE            reduce using rule 17 (estatuto -> asignacion .)


state 39

    (6) globales -> global_1 vars . globales_2
    (7) globales_2 -> . global_1 vars globales_2
    (8) globales_2 -> . empty
    (9) global_1 -> . GLOBAL
    (130) empty -> .

    GLOBAL          shift and go to state 5
    DEF             reduce using rule 130 (empty -> .)

    global_1                       shift and go to state 64
    globales_2                     shift and go to state 65
    empty                          shift and go to state 66

state 40

    (4) funciones -> funcion main .

    $end            reduce using rule 4 (funciones -> funcion main .)


state 41

    (16) main_1 -> DEF . VOID MAIN LPAREN RPAREN

    VOID            shift and go to state 44


state 42

    (1) programa -> globales funciones . programa_end
    (3) programa_end -> . empty
    (130) empty -> .

    $end            reduce using rule 130 (empty -> .)

    programa_end                   shift and go to state 67
    empty                          shift and go to state 48

state 43

    (115) funcion_1 -> DEF data_type . ID

    ID              shift and go to state 68


state 44

    (16) main_1 -> DEF VOID . MAIN LPAREN RPAREN

    MAIN            shift and go to state 69


state 45

    (114) funcion -> funcion_1 var_local . bloque funcion_2
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 130 (empty -> .)
    END             reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    for_init                       shift and go to state 35
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    estatuto                       shift and go to state 31
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 70
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 23
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 46

    (119) var_local -> LPAREN . var_local_2 RPAREN
    (120) var_local_2 -> . var_local_2_1 var_local_3
    (121) var_local_2 -> . empty
    (122) var_local_2_1 -> . data_type ID
    (130) empty -> .
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN

    RPAREN          reduce using rule 130 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24

    data_type                      shift and go to state 74
    empty                          shift and go to state 71
    var_local_2                    shift and go to state 72
    var_local_2_1                  shift and go to state 73

state 47

    (2) programa -> funciones programa_end .

    $end            reduce using rule 2 (programa -> funciones programa_end .)


state 48

    (3) programa_end -> empty .

    $end            reduce using rule 3 (programa_end -> empty .)


state 49

    (25) asignacion_2 -> EQUAL . expresion
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 78
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 50

    (26) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL expresion
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 91
    var_cte_1                      shift and go to state 84
    factor                         shift and go to state 77
    var_cte                        shift and go to state 86
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 51

    (23) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 92


state 52

    (15) main -> main_1 bloque END .

    $end            reduce using rule 15 (main -> main_1 bloque END .)


state 53

    (89) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (96) accion_nombre -> . SETPOSITION
    (97) accion_nombre -> . CIRCLE
    (98) accion_nombre -> . RIGHT
    (99) accion_nombre -> . LEFT
    (100) accion_nombre -> . HIDE
    (101) accion_nombre -> . SQUARE
    (102) accion_nombre -> . CLEAR
    (103) accion_nombre -> . SHOW
    (104) accion_nombre -> . BACK
    (105) accion_nombre -> . SPEED
    (106) accion_nombre -> . FORWARD
    (107) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 96
    CIRCLE          shift and go to state 103
    RIGHT           shift and go to state 95
    LEFT            shift and go to state 102
    HIDE            shift and go to state 94
    SQUARE          shift and go to state 100
    CLEAR           shift and go to state 105
    SHOW            shift and go to state 104
    BACK            shift and go to state 97
    SPEED           shift and go to state 99
    FORWARD         shift and go to state 101
    SETCOLOR        shift and go to state 98

    accion_nombre                  shift and go to state 93

state 54

    (33) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN

    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24

    data_type                      shift and go to state 106

state 55

    (82) condicion -> condicion_id LPAREN . expresion RPAREN bloque condicion_2
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 107
    exp                            shift and go to state 81
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 56

    (22) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 22 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 22 (estatuto -> llamada SEMICOLON .)


state 57

    (40) llamada -> llamada_id LPAREN . llamada_2
    (42) llamada_2 -> . llamada_exp RPAREN
    (43) llamada_2 -> . RPAREN
    (44) llamada_exp -> . expresion llamada_exp2
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    RPAREN          shift and go to state 109
    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    llamada_exp                    shift and go to state 108
    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 110
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_2                      shift and go to state 111
    llamada_id                     shift and go to state 27

state 58

    (32) vars_aux -> array ID . vars3
    (38) vars3 -> . EQUAL def_array SEMICOLON
    (39) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 112
    SEMICOLON       shift and go to state 113

    vars3                          shift and go to state 114

state 59

    (30) vars -> data_type ID . vars2
    (36) vars2 -> . EQUAL expresion SEMICOLON
    (37) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 115
    SEMICOLON       shift and go to state 116

    vars2                          shift and go to state 117

state 60

    (10) bloque -> estatuto bloque .

    ELSE            reduce using rule 10 (bloque -> estatuto bloque .)
    END             reduce using rule 10 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 10 (bloque -> estatuto bloque .)


state 61

    (111) while -> while_init LPAREN . expresion RPAREN bloque while_end
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 118
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 62

    (29) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 119


state 63

    (108) for -> for_init LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 120


state 64

    (7) globales_2 -> global_1 . vars globales_2
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 34
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    ARRAY           shift and go to state 21

    array                          shift and go to state 28
    vars                           shift and go to state 121
    data_type                      shift and go to state 30
    vars_aux                       shift and go to state 13

state 65

    (6) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 6 (globales -> global_1 vars globales_2 .)


state 66

    (8) globales_2 -> empty .

    DEF             reduce using rule 8 (globales_2 -> empty .)


state 67

    (1) programa -> globales funciones programa_end .

    $end            reduce using rule 1 (programa -> globales funciones programa_end .)


state 68

    (115) funcion_1 -> DEF data_type ID .

    LPAREN          reduce using rule 115 (funcion_1 -> DEF data_type ID .)


state 69

    (16) main_1 -> DEF VOID MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 122


state 70

    (114) funcion -> funcion_1 var_local bloque . funcion_2
    (116) funcion_2 -> . RETURN expresion SEMICOLON funcion_end
    (117) funcion_2 -> . funcion_end
    (118) funcion_end -> . END

    RETURN          shift and go to state 126
    END             shift and go to state 124

    funcion_end                    shift and go to state 123
    funcion_2                      shift and go to state 125

state 71

    (121) var_local_2 -> empty .

    RPAREN          reduce using rule 121 (var_local_2 -> empty .)


state 72

    (119) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 127


state 73

    (120) var_local_2 -> var_local_2_1 . var_local_3
    (123) var_local_3 -> . COMMA var_local_2
    (124) var_local_3 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 130
    RPAREN          reduce using rule 130 (empty -> .)

    var_local_3                    shift and go to state 128
    empty                          shift and go to state 129

state 74

    (122) var_local_2_1 -> data_type . ID

    ID              shift and go to state 131


state 75

    (71) var_cte -> TRUE .

    COMMA           reduce using rule 71 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 71 (var_cte -> TRUE .)
    TIMES           reduce using rule 71 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 71 (var_cte -> TRUE .)
    PERCENT         reduce using rule 71 (var_cte -> TRUE .)
    PLUS            reduce using rule 71 (var_cte -> TRUE .)
    MINUS           reduce using rule 71 (var_cte -> TRUE .)
    GREATER         reduce using rule 71 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 71 (var_cte -> TRUE .)
    LESS            reduce using rule 71 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 71 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 71 (var_cte -> TRUE .)
    DISTINT         reduce using rule 71 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 71 (var_cte -> TRUE .)
    RPAREN          reduce using rule 71 (var_cte -> TRUE .)


state 76

    (72) var_cte -> FALSE .

    COMMA           reduce using rule 72 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 72 (var_cte -> FALSE .)
    TIMES           reduce using rule 72 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 72 (var_cte -> FALSE .)
    PERCENT         reduce using rule 72 (var_cte -> FALSE .)
    PLUS            reduce using rule 72 (var_cte -> FALSE .)
    MINUS           reduce using rule 72 (var_cte -> FALSE .)
    GREATER         reduce using rule 72 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 72 (var_cte -> FALSE .)
    LESS            reduce using rule 72 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 72 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 72 (var_cte -> FALSE .)
    DISTINT         reduce using rule 72 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 72 (var_cte -> FALSE .)
    RPAREN          reduce using rule 72 (var_cte -> FALSE .)


state 77

    (65) termino -> factor . termino_2
    (66) termino_2 -> . timesop termino
    (67) termino_2 -> . empty
    (127) timesop -> . TIMES
    (128) timesop -> . DIVIDE
    (129) timesop -> . PERCENT
    (130) empty -> .

    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 137
    PERCENT         shift and go to state 136
    PLUS            reduce using rule 130 (empty -> .)
    MINUS           reduce using rule 130 (empty -> .)
    GREATER         reduce using rule 130 (empty -> .)
    GREATEREQUAL    reduce using rule 130 (empty -> .)
    LESS            reduce using rule 130 (empty -> .)
    LESSEQUAL       reduce using rule 130 (empty -> .)
    DEQUAL          reduce using rule 130 (empty -> .)
    DISTINT         reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    timesop                        shift and go to state 132
    empty                          shift and go to state 134
    termino_2                      shift and go to state 135

state 78

    (25) asignacion_2 -> EQUAL expresion .

    SEMICOLON       reduce using rule 25 (asignacion_2 -> EQUAL expresion .)


state 79

    (62) exp -> termino . exp_2
    (63) exp_2 -> . addop exp
    (64) exp_2 -> . empty
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (130) empty -> .

    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    GREATER         reduce using rule 130 (empty -> .)
    GREATEREQUAL    reduce using rule 130 (empty -> .)
    LESS            reduce using rule 130 (empty -> .)
    LESSEQUAL       reduce using rule 130 (empty -> .)
    DEQUAL          reduce using rule 130 (empty -> .)
    DISTINT         reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    addop                          shift and go to state 140
    exp_2                          shift and go to state 138
    empty                          shift and go to state 139

state 80

    (69) var_cte -> CTE_I .

    COMMA           reduce using rule 69 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 69 (var_cte -> CTE_I .)
    TIMES           reduce using rule 69 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 69 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 69 (var_cte -> CTE_I .)
    PLUS            reduce using rule 69 (var_cte -> CTE_I .)
    MINUS           reduce using rule 69 (var_cte -> CTE_I .)
    GREATER         reduce using rule 69 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 69 (var_cte -> CTE_I .)
    LESS            reduce using rule 69 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 69 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 69 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 69 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 69 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 69 (var_cte -> CTE_I .)


state 81

    (53) expresion -> exp . expresion_2
    (54) expresion_2 -> . relop exp
    (55) expresion_2 -> . empty
    (56) relop -> . GREATER
    (57) relop -> . GREATEREQUAL
    (58) relop -> . LESS
    (59) relop -> . LESSEQUAL
    (60) relop -> . DEQUAL
    (61) relop -> . DISTINT
    (130) empty -> .

    GREATER         shift and go to state 148
    GREATEREQUAL    shift and go to state 149
    LESS            shift and go to state 141
    LESSEQUAL       shift and go to state 147
    DEQUAL          shift and go to state 145
    DISTINT         shift and go to state 142
    SEMICOLON       reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    relop                          shift and go to state 146
    empty                          shift and go to state 144
    expresion_2                    shift and go to state 143

state 82

    (126) addop -> MINUS .

    CTE_I           reduce using rule 126 (addop -> MINUS .)
    CTE_F           reduce using rule 126 (addop -> MINUS .)
    TRUE            reduce using rule 126 (addop -> MINUS .)
    FALSE           reduce using rule 126 (addop -> MINUS .)
    ID              reduce using rule 126 (addop -> MINUS .)
    LPAREN          reduce using rule 126 (addop -> MINUS .)
    PLUS            reduce using rule 126 (addop -> MINUS .)
    MINUS           reduce using rule 126 (addop -> MINUS .)


state 83

    (125) addop -> PLUS .

    CTE_I           reduce using rule 125 (addop -> PLUS .)
    CTE_F           reduce using rule 125 (addop -> PLUS .)
    TRUE            reduce using rule 125 (addop -> PLUS .)
    FALSE           reduce using rule 125 (addop -> PLUS .)
    ID              reduce using rule 125 (addop -> PLUS .)
    LPAREN          reduce using rule 125 (addop -> PLUS .)
    PLUS            reduce using rule 125 (addop -> PLUS .)
    MINUS           reduce using rule 125 (addop -> PLUS .)


state 84

    (68) var_cte -> var_cte_1 .

    COMMA           reduce using rule 68 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 68 (var_cte -> var_cte_1 .)
    TIMES           reduce using rule 68 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 68 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 68 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 68 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 68 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 68 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 68 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 68 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 68 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 68 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 68 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 68 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 68 (var_cte -> var_cte_1 .)


state 85

    (74) var_cte_1 -> ID . var_cte_2
    (41) llamada_id -> ID .
    (75) var_cte_2 -> . LBRACKET exp var_cte_3
    (76) var_cte_2 -> . empty
    (130) empty -> .

    LPAREN          reduce using rule 41 (llamada_id -> ID .)
    LBRACKET        shift and go to state 150
    TIMES           reduce using rule 130 (empty -> .)
    DIVIDE          reduce using rule 130 (empty -> .)
    PERCENT         reduce using rule 130 (empty -> .)
    PLUS            reduce using rule 130 (empty -> .)
    MINUS           reduce using rule 130 (empty -> .)
    GREATER         reduce using rule 130 (empty -> .)
    GREATEREQUAL    reduce using rule 130 (empty -> .)
    LESS            reduce using rule 130 (empty -> .)
    LESSEQUAL       reduce using rule 130 (empty -> .)
    DEQUAL          reduce using rule 130 (empty -> .)
    DISTINT         reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    var_cte_2                      shift and go to state 152
    empty                          shift and go to state 151

state 86

    (81) factor -> var_cte .

    TIMES           reduce using rule 81 (factor -> var_cte .)
    DIVIDE          reduce using rule 81 (factor -> var_cte .)
    PERCENT         reduce using rule 81 (factor -> var_cte .)
    PLUS            reduce using rule 81 (factor -> var_cte .)
    MINUS           reduce using rule 81 (factor -> var_cte .)
    GREATER         reduce using rule 81 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 81 (factor -> var_cte .)
    LESS            reduce using rule 81 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 81 (factor -> var_cte .)
    DEQUAL          reduce using rule 81 (factor -> var_cte .)
    DISTINT         reduce using rule 81 (factor -> var_cte .)
    SEMICOLON       reduce using rule 81 (factor -> var_cte .)
    RBRACKET        reduce using rule 81 (factor -> var_cte .)
    COMMA           reduce using rule 81 (factor -> var_cte .)
    RPAREN          reduce using rule 81 (factor -> var_cte .)


state 87

    (73) var_cte -> llamada .

    COMMA           reduce using rule 73 (var_cte -> llamada .)
    RBRACKET        reduce using rule 73 (var_cte -> llamada .)
    TIMES           reduce using rule 73 (var_cte -> llamada .)
    DIVIDE          reduce using rule 73 (var_cte -> llamada .)
    PERCENT         reduce using rule 73 (var_cte -> llamada .)
    PLUS            reduce using rule 73 (var_cte -> llamada .)
    MINUS           reduce using rule 73 (var_cte -> llamada .)
    GREATER         reduce using rule 73 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 73 (var_cte -> llamada .)
    LESS            reduce using rule 73 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 73 (var_cte -> llamada .)
    DEQUAL          reduce using rule 73 (var_cte -> llamada .)
    DISTINT         reduce using rule 73 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 73 (var_cte -> llamada .)
    RPAREN          reduce using rule 73 (var_cte -> llamada .)


state 88

    (80) factor -> addop . var_cte
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    var_cte                        shift and go to state 153
    llamada                        shift and go to state 87
    var_cte_1                      shift and go to state 84
    llamada_id                     shift and go to state 27

state 89

    (79) factor -> LPAREN . expresion RPAREN
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 154
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 90

    (70) var_cte -> CTE_F .

    COMMA           reduce using rule 70 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 70 (var_cte -> CTE_F .)
    TIMES           reduce using rule 70 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 70 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 70 (var_cte -> CTE_F .)
    PLUS            reduce using rule 70 (var_cte -> CTE_F .)
    MINUS           reduce using rule 70 (var_cte -> CTE_F .)
    GREATER         reduce using rule 70 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 70 (var_cte -> CTE_F .)
    LESS            reduce using rule 70 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 70 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 70 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 70 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 70 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 70 (var_cte -> CTE_F .)


state 91

    (26) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL expresion
    (27) asignacion_3 -> . RBRACKET
    (28) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 157
    COMMA           shift and go to state 156

    asignacion_3                   shift and go to state 155

state 92

    (23) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 23 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 93

    (89) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (90) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 158

    accion_params                  shift and go to state 159

state 94

    (100) accion_nombre -> HIDE .

    LPAREN          reduce using rule 100 (accion_nombre -> HIDE .)


state 95

    (98) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 98 (accion_nombre -> RIGHT .)


state 96

    (96) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 96 (accion_nombre -> SETPOSITION .)


state 97

    (104) accion_nombre -> BACK .

    LPAREN          reduce using rule 104 (accion_nombre -> BACK .)


state 98

    (107) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 107 (accion_nombre -> SETCOLOR .)


state 99

    (105) accion_nombre -> SPEED .

    LPAREN          reduce using rule 105 (accion_nombre -> SPEED .)


state 100

    (101) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 101 (accion_nombre -> SQUARE .)


state 101

    (106) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 106 (accion_nombre -> FORWARD .)


state 102

    (99) accion_nombre -> LEFT .

    LPAREN          reduce using rule 99 (accion_nombre -> LEFT .)


state 103

    (97) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 97 (accion_nombre -> CIRCLE .)


state 104

    (103) accion_nombre -> SHOW .

    LPAREN          reduce using rule 103 (accion_nombre -> SHOW .)


state 105

    (102) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 102 (accion_nombre -> CLEAR .)


state 106

    (33) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 160


state 107

    (82) condicion -> condicion_id LPAREN expresion . RPAREN bloque condicion_2

    RPAREN          shift and go to state 161


state 108

    (42) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 162


state 109

    (43) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 43 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 43 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 43 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 43 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 43 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 43 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 43 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 43 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 43 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 43 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 43 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 43 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 43 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 43 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 43 (llamada_2 -> RPAREN .)


state 110

    (44) llamada_exp -> expresion . llamada_exp2
    (45) llamada_exp2 -> . COMMA llamada_exp
    (46) llamada_exp2 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 130 (empty -> .)

    empty                          shift and go to state 163
    llamada_exp2                   shift and go to state 165

state 111

    (40) llamada -> llamada_id LPAREN llamada_2 .

    TIMES           reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    DIVIDE          reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    PERCENT         reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    PLUS            reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    MINUS           reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATER         reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    LESS            reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    DEQUAL          reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    DISTINT         reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    SEMICOLON       reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    RBRACKET        reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    COMMA           reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)
    RPAREN          reduce using rule 40 (llamada -> llamada_id LPAREN llamada_2 .)


state 112

    (38) vars3 -> EQUAL . def_array SEMICOLON
    (47) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 167

    def_array                      shift and go to state 166

state 113

    (39) vars3 -> SEMICOLON .

    ID              reduce using rule 39 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 39 (vars3 -> SEMICOLON .)
    IF              reduce using rule 39 (vars3 -> SEMICOLON .)
    INT             reduce using rule 39 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 39 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 39 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 39 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 39 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 39 (vars3 -> SEMICOLON .)
    END             reduce using rule 39 (vars3 -> SEMICOLON .)
    GLOBAL          reduce using rule 39 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 39 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 39 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 39 (vars3 -> SEMICOLON .)


state 114

    (32) vars_aux -> array ID vars3 .

    ID              reduce using rule 32 (vars_aux -> array ID vars3 .)
    DRAW            reduce using rule 32 (vars_aux -> array ID vars3 .)
    IF              reduce using rule 32 (vars_aux -> array ID vars3 .)
    INT             reduce using rule 32 (vars_aux -> array ID vars3 .)
    FLOAT           reduce using rule 32 (vars_aux -> array ID vars3 .)
    BOOLEAN         reduce using rule 32 (vars_aux -> array ID vars3 .)
    FOR             reduce using rule 32 (vars_aux -> array ID vars3 .)
    WHILE           reduce using rule 32 (vars_aux -> array ID vars3 .)
    ARRAY           reduce using rule 32 (vars_aux -> array ID vars3 .)
    END             reduce using rule 32 (vars_aux -> array ID vars3 .)
    ELSE            reduce using rule 32 (vars_aux -> array ID vars3 .)
    RETURN          reduce using rule 32 (vars_aux -> array ID vars3 .)
    GLOBAL          reduce using rule 32 (vars_aux -> array ID vars3 .)
    DEF             reduce using rule 32 (vars_aux -> array ID vars3 .)


state 115

    (36) vars2 -> EQUAL . expresion SEMICOLON
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 168
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 116

    (37) vars2 -> SEMICOLON .

    ID              reduce using rule 37 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 37 (vars2 -> SEMICOLON .)
    IF              reduce using rule 37 (vars2 -> SEMICOLON .)
    INT             reduce using rule 37 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 37 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 37 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 37 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 37 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 37 (vars2 -> SEMICOLON .)
    END             reduce using rule 37 (vars2 -> SEMICOLON .)
    GLOBAL          reduce using rule 37 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 37 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 37 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 37 (vars2 -> SEMICOLON .)


state 117

    (30) vars -> data_type ID vars2 .

    ID              reduce using rule 30 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 30 (vars -> data_type ID vars2 .)
    IF              reduce using rule 30 (vars -> data_type ID vars2 .)
    INT             reduce using rule 30 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 30 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 30 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 30 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 30 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 30 (vars -> data_type ID vars2 .)
    END             reduce using rule 30 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 30 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 30 (vars -> data_type ID vars2 .)
    GLOBAL          reduce using rule 30 (vars -> data_type ID vars2 .)
    DEF             reduce using rule 30 (vars -> data_type ID vars2 .)


state 118

    (111) while -> while_init LPAREN expresion . RPAREN bloque while_end

    RPAREN          shift and go to state 169


state 119

    (29) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 170


state 120

    (108) for -> for_init LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 171


state 121

    (7) globales_2 -> global_1 vars . globales_2
    (7) globales_2 -> . global_1 vars globales_2
    (8) globales_2 -> . empty
    (9) global_1 -> . GLOBAL
    (130) empty -> .

    GLOBAL          shift and go to state 5
    DEF             reduce using rule 130 (empty -> .)

    global_1                       shift and go to state 64
    globales_2                     shift and go to state 172
    empty                          shift and go to state 66

state 122

    (16) main_1 -> DEF VOID MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 173


state 123

    (117) funcion_2 -> funcion_end .

    DEF             reduce using rule 117 (funcion_2 -> funcion_end .)


state 124

    (118) funcion_end -> END .

    DEF             reduce using rule 118 (funcion_end -> END .)


state 125

    (114) funcion -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 114 (funcion -> funcion_1 var_local bloque funcion_2 .)


state 126

    (116) funcion_2 -> RETURN . expresion SEMICOLON funcion_end
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 174
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 127

    (119) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 119 (var_local -> LPAREN var_local_2 RPAREN .)


state 128

    (120) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 120 (var_local_2 -> var_local_2_1 var_local_3 .)


state 129

    (124) var_local_3 -> empty .

    RPAREN          reduce using rule 124 (var_local_3 -> empty .)


state 130

    (123) var_local_3 -> COMMA . var_local_2
    (120) var_local_2 -> . var_local_2_1 var_local_3
    (121) var_local_2 -> . empty
    (122) var_local_2_1 -> . data_type ID
    (130) empty -> .
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN

    RPAREN          reduce using rule 130 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24

    data_type                      shift and go to state 74
    empty                          shift and go to state 71
    var_local_2                    shift and go to state 175
    var_local_2_1                  shift and go to state 73

state 131

    (122) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 122 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 122 (var_local_2_1 -> data_type ID .)


state 132

    (66) termino_2 -> timesop . termino
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    termino                        shift and go to state 176
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 133

    (127) timesop -> TIMES .

    LPAREN          reduce using rule 127 (timesop -> TIMES .)
    PLUS            reduce using rule 127 (timesop -> TIMES .)
    MINUS           reduce using rule 127 (timesop -> TIMES .)
    CTE_I           reduce using rule 127 (timesop -> TIMES .)
    CTE_F           reduce using rule 127 (timesop -> TIMES .)
    TRUE            reduce using rule 127 (timesop -> TIMES .)
    FALSE           reduce using rule 127 (timesop -> TIMES .)
    ID              reduce using rule 127 (timesop -> TIMES .)


state 134

    (67) termino_2 -> empty .

    PLUS            reduce using rule 67 (termino_2 -> empty .)
    MINUS           reduce using rule 67 (termino_2 -> empty .)
    GREATER         reduce using rule 67 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 67 (termino_2 -> empty .)
    LESS            reduce using rule 67 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 67 (termino_2 -> empty .)
    DEQUAL          reduce using rule 67 (termino_2 -> empty .)
    DISTINT         reduce using rule 67 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 67 (termino_2 -> empty .)
    RBRACKET        reduce using rule 67 (termino_2 -> empty .)
    COMMA           reduce using rule 67 (termino_2 -> empty .)
    RPAREN          reduce using rule 67 (termino_2 -> empty .)


state 135

    (65) termino -> factor termino_2 .

    PLUS            reduce using rule 65 (termino -> factor termino_2 .)
    MINUS           reduce using rule 65 (termino -> factor termino_2 .)
    GREATER         reduce using rule 65 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 65 (termino -> factor termino_2 .)
    LESS            reduce using rule 65 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 65 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 65 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 65 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 65 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 65 (termino -> factor termino_2 .)
    COMMA           reduce using rule 65 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 65 (termino -> factor termino_2 .)


state 136

    (129) timesop -> PERCENT .

    LPAREN          reduce using rule 129 (timesop -> PERCENT .)
    PLUS            reduce using rule 129 (timesop -> PERCENT .)
    MINUS           reduce using rule 129 (timesop -> PERCENT .)
    CTE_I           reduce using rule 129 (timesop -> PERCENT .)
    CTE_F           reduce using rule 129 (timesop -> PERCENT .)
    TRUE            reduce using rule 129 (timesop -> PERCENT .)
    FALSE           reduce using rule 129 (timesop -> PERCENT .)
    ID              reduce using rule 129 (timesop -> PERCENT .)


state 137

    (128) timesop -> DIVIDE .

    LPAREN          reduce using rule 128 (timesop -> DIVIDE .)
    PLUS            reduce using rule 128 (timesop -> DIVIDE .)
    MINUS           reduce using rule 128 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 128 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 128 (timesop -> DIVIDE .)
    TRUE            reduce using rule 128 (timesop -> DIVIDE .)
    FALSE           reduce using rule 128 (timesop -> DIVIDE .)
    ID              reduce using rule 128 (timesop -> DIVIDE .)


state 138

    (62) exp -> termino exp_2 .

    GREATER         reduce using rule 62 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 62 (exp -> termino exp_2 .)
    LESS            reduce using rule 62 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 62 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 62 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 62 (exp -> termino exp_2 .)
    COMMA           reduce using rule 62 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 62 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 62 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 62 (exp -> termino exp_2 .)


state 139

    (64) exp_2 -> empty .

    GREATER         reduce using rule 64 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 64 (exp_2 -> empty .)
    LESS            reduce using rule 64 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 64 (exp_2 -> empty .)
    DEQUAL          reduce using rule 64 (exp_2 -> empty .)
    DISTINT         reduce using rule 64 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 64 (exp_2 -> empty .)
    RBRACKET        reduce using rule 64 (exp_2 -> empty .)
    COMMA           reduce using rule 64 (exp_2 -> empty .)
    RPAREN          reduce using rule 64 (exp_2 -> empty .)


state 140

    (63) exp_2 -> addop . exp
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 177
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 141

    (58) relop -> LESS .

    LPAREN          reduce using rule 58 (relop -> LESS .)
    PLUS            reduce using rule 58 (relop -> LESS .)
    MINUS           reduce using rule 58 (relop -> LESS .)
    CTE_I           reduce using rule 58 (relop -> LESS .)
    CTE_F           reduce using rule 58 (relop -> LESS .)
    TRUE            reduce using rule 58 (relop -> LESS .)
    FALSE           reduce using rule 58 (relop -> LESS .)
    ID              reduce using rule 58 (relop -> LESS .)


state 142

    (61) relop -> DISTINT .

    LPAREN          reduce using rule 61 (relop -> DISTINT .)
    PLUS            reduce using rule 61 (relop -> DISTINT .)
    MINUS           reduce using rule 61 (relop -> DISTINT .)
    CTE_I           reduce using rule 61 (relop -> DISTINT .)
    CTE_F           reduce using rule 61 (relop -> DISTINT .)
    TRUE            reduce using rule 61 (relop -> DISTINT .)
    FALSE           reduce using rule 61 (relop -> DISTINT .)
    ID              reduce using rule 61 (relop -> DISTINT .)


state 143

    (53) expresion -> exp expresion_2 .

    COMMA           reduce using rule 53 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 53 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 53 (expresion -> exp expresion_2 .)


state 144

    (55) expresion_2 -> empty .

    SEMICOLON       reduce using rule 55 (expresion_2 -> empty .)
    RPAREN          reduce using rule 55 (expresion_2 -> empty .)
    COMMA           reduce using rule 55 (expresion_2 -> empty .)


state 145

    (60) relop -> DEQUAL .

    LPAREN          reduce using rule 60 (relop -> DEQUAL .)
    PLUS            reduce using rule 60 (relop -> DEQUAL .)
    MINUS           reduce using rule 60 (relop -> DEQUAL .)
    CTE_I           reduce using rule 60 (relop -> DEQUAL .)
    CTE_F           reduce using rule 60 (relop -> DEQUAL .)
    TRUE            reduce using rule 60 (relop -> DEQUAL .)
    FALSE           reduce using rule 60 (relop -> DEQUAL .)
    ID              reduce using rule 60 (relop -> DEQUAL .)


state 146

    (54) expresion_2 -> relop . exp
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 178
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 147

    (59) relop -> LESSEQUAL .

    LPAREN          reduce using rule 59 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 59 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 59 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 59 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 59 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 59 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 59 (relop -> LESSEQUAL .)
    ID              reduce using rule 59 (relop -> LESSEQUAL .)


state 148

    (56) relop -> GREATER .

    LPAREN          reduce using rule 56 (relop -> GREATER .)
    PLUS            reduce using rule 56 (relop -> GREATER .)
    MINUS           reduce using rule 56 (relop -> GREATER .)
    CTE_I           reduce using rule 56 (relop -> GREATER .)
    CTE_F           reduce using rule 56 (relop -> GREATER .)
    TRUE            reduce using rule 56 (relop -> GREATER .)
    FALSE           reduce using rule 56 (relop -> GREATER .)
    ID              reduce using rule 56 (relop -> GREATER .)


state 149

    (57) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 57 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 57 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 57 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 57 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 57 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 57 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 57 (relop -> GREATEREQUAL .)
    ID              reduce using rule 57 (relop -> GREATEREQUAL .)


state 150

    (75) var_cte_2 -> LBRACKET . exp var_cte_3
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 179
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 151

    (76) var_cte_2 -> empty .

    TIMES           reduce using rule 76 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 76 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 76 (var_cte_2 -> empty .)
    PLUS            reduce using rule 76 (var_cte_2 -> empty .)
    MINUS           reduce using rule 76 (var_cte_2 -> empty .)
    GREATER         reduce using rule 76 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 76 (var_cte_2 -> empty .)
    LESS            reduce using rule 76 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 76 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 76 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 76 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 76 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 76 (var_cte_2 -> empty .)
    COMMA           reduce using rule 76 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 76 (var_cte_2 -> empty .)


state 152

    (74) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 74 (var_cte_1 -> ID var_cte_2 .)


state 153

    (80) factor -> addop var_cte .

    TIMES           reduce using rule 80 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 80 (factor -> addop var_cte .)
    PERCENT         reduce using rule 80 (factor -> addop var_cte .)
    PLUS            reduce using rule 80 (factor -> addop var_cte .)
    MINUS           reduce using rule 80 (factor -> addop var_cte .)
    GREATER         reduce using rule 80 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 80 (factor -> addop var_cte .)
    LESS            reduce using rule 80 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 80 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 80 (factor -> addop var_cte .)
    DISTINT         reduce using rule 80 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 80 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 80 (factor -> addop var_cte .)
    COMMA           reduce using rule 80 (factor -> addop var_cte .)
    RPAREN          reduce using rule 80 (factor -> addop var_cte .)


state 154

    (79) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 180


state 155

    (26) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL expresion

    EQUAL           shift and go to state 181


state 156

    (28) asignacion_3 -> COMMA . exp RBRACKET
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 182
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 157

    (27) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 27 (asignacion_3 -> RBRACKET .)


state 158

    (90) accion_params -> LPAREN . accion_params_2
    (91) accion_params_2 -> . accion_params_cte RPAREN
    (92) accion_params_2 -> . RPAREN
    (93) accion_params_cte -> . var_cte accion_params_cte_2
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    RPAREN          shift and go to state 184
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    accion_params_2                shift and go to state 183
    llamada                        shift and go to state 87
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 185
    llamada_id                     shift and go to state 27
    accion_params_cte              shift and go to state 186

state 159

    (89) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 187


state 160

    (33) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 188


state 161

    (82) condicion -> condicion_id LPAREN expresion RPAREN . bloque condicion_2
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    ELSE            reduce using rule 130 (empty -> .)
    END             reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    for_init                       shift and go to state 35
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    estatuto                       shift and go to state 31
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 189
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 23
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 162

    (42) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 42 (llamada_2 -> llamada_exp RPAREN .)


state 163

    (46) llamada_exp2 -> empty .

    RPAREN          reduce using rule 46 (llamada_exp2 -> empty .)


state 164

    (45) llamada_exp2 -> COMMA . llamada_exp
    (44) llamada_exp -> . expresion llamada_exp2
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    llamada_exp                    shift and go to state 190
    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    expresion                      shift and go to state 110
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 165

    (44) llamada_exp -> expresion llamada_exp2 .

    RPAREN          reduce using rule 44 (llamada_exp -> expresion llamada_exp2 .)


state 166

    (38) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 191


state 167

    (47) def_array -> LBRACKET . def_array_2
    (48) def_array_2 -> . def_array_cte RBRACKET
    (49) def_array_2 -> . RBRACKET
    (50) def_array_cte -> . var_cte def_array_cte_2
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    RBRACKET        shift and go to state 195
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    def_array_2                    shift and go to state 192
    var_cte                        shift and go to state 193
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 87
    def_array_cte                  shift and go to state 194
    var_cte_1                      shift and go to state 84

state 168

    (36) vars2 -> EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 196


state 169

    (111) while -> while_init LPAREN expresion RPAREN . bloque while_end
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    for_init                       shift and go to state 35
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    estatuto                       shift and go to state 31
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 197
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 23
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 170

    (29) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 198


state 171

    (108) for -> for_init LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 199


state 172

    (7) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 7 (globales_2 -> global_1 vars globales_2 .)


state 173

    (16) main_1 -> DEF VOID MAIN LPAREN RPAREN .

    ID              reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    IF              reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    INT             reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    FOR             reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    END             reduce using rule 16 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)


state 174

    (116) funcion_2 -> RETURN expresion . SEMICOLON funcion_end

    SEMICOLON       shift and go to state 200


state 175

    (123) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 123 (var_local_3 -> COMMA var_local_2 .)


state 176

    (66) termino_2 -> timesop termino .

    PLUS            reduce using rule 66 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 66 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 66 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 66 (termino_2 -> timesop termino .)
    LESS            reduce using rule 66 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 66 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 66 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 66 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 66 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 66 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 66 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 66 (termino_2 -> timesop termino .)


state 177

    (63) exp_2 -> addop exp .

    GREATER         reduce using rule 63 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 63 (exp_2 -> addop exp .)
    LESS            reduce using rule 63 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 63 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 63 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 63 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 63 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 63 (exp_2 -> addop exp .)
    COMMA           reduce using rule 63 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 63 (exp_2 -> addop exp .)


state 178

    (54) expresion_2 -> relop exp .

    SEMICOLON       reduce using rule 54 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 54 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 54 (expresion_2 -> relop exp .)


state 179

    (75) var_cte_2 -> LBRACKET exp . var_cte_3
    (77) var_cte_3 -> . RBRACKET
    (78) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 202
    COMMA           shift and go to state 203

    var_cte_3                      shift and go to state 201

state 180

    (79) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    PERCENT         reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 79 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 79 (factor -> LPAREN expresion RPAREN .)


state 181

    (26) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . expresion
    (53) expresion -> . exp expresion_2
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 81
    var_cte_1                      shift and go to state 84
    expresion                      shift and go to state 204
    factor                         shift and go to state 77
    var_cte                        shift and go to state 86
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 182

    (28) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 205


state 183

    (90) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 90 (accion_params -> LPAREN accion_params_2 .)


state 184

    (92) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 92 (accion_params_2 -> RPAREN .)


state 185

    (93) accion_params_cte -> var_cte . accion_params_cte_2
    (94) accion_params_cte_2 -> . COMMA accion_params_cte
    (95) accion_params_cte_2 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 208
    RPAREN          reduce using rule 130 (empty -> .)

    accion_params_cte_2            shift and go to state 206
    empty                          shift and go to state 207

state 186

    (91) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 209


state 187

    (89) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 89 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 188

    (33) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (34) array_2 -> . COMMA CTE_I
    (35) array_2 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 211
    GREATER         reduce using rule 130 (empty -> .)

    empty                          shift and go to state 210
    array_2                        shift and go to state 212

state 189

    (82) condicion -> condicion_id LPAREN expresion RPAREN bloque . condicion_2
    (84) condicion_2 -> . condicion_end
    (85) condicion_2 -> . ELSE bloque condicion_end
    (86) condicion_end -> . END

    ELSE            shift and go to state 214
    END             shift and go to state 216

    condicion_2                    shift and go to state 213
    condicion_end                  shift and go to state 215

state 190

    (45) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 45 (llamada_exp2 -> COMMA llamada_exp .)


state 191

    (38) vars3 -> EQUAL def_array SEMICOLON .

    ID              reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    GLOBAL          reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 38 (vars3 -> EQUAL def_array SEMICOLON .)


state 192

    (47) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 47 (def_array -> LBRACKET def_array_2 .)


state 193

    (50) def_array_cte -> var_cte . def_array_cte_2
    (51) def_array_cte_2 -> . COMMA def_array_cte
    (52) def_array_cte_2 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 218
    RBRACKET        reduce using rule 130 (empty -> .)

    empty                          shift and go to state 217
    def_array_cte_2                shift and go to state 219

state 194

    (48) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 220


state 195

    (49) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 49 (def_array_2 -> RBRACKET .)


state 196

    (36) vars2 -> EQUAL expresion SEMICOLON .

    ID              reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    DRAW            reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    IF              reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    INT             reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    BOOLEAN         reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    FOR             reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    ARRAY           reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    END             reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    GLOBAL          reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    DEF             reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)
    ELSE            reduce using rule 36 (vars2 -> EQUAL expresion SEMICOLON .)


state 197

    (111) while -> while_init LPAREN expresion RPAREN bloque . while_end
    (113) while_end -> . END

    END             shift and go to state 222

    while_end                      shift and go to state 221

state 198

    (29) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 223


state 199

    (108) for -> for_init LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 224


state 200

    (116) funcion_2 -> RETURN expresion SEMICOLON . funcion_end
    (118) funcion_end -> . END

    END             shift and go to state 124

    funcion_end                    shift and go to state 225

state 201

    (75) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 75 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 202

    (77) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 77 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 77 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 77 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 77 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 77 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 77 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 77 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 77 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 77 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 77 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 77 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 77 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 77 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 77 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 77 (var_cte_3 -> RBRACKET .)


state 203

    (78) var_cte_3 -> COMMA . exp RBRACKET
    (62) exp -> . termino exp_2
    (65) termino -> . factor termino_2
    (79) factor -> . LPAREN expresion RPAREN
    (80) factor -> . addop var_cte
    (81) factor -> . var_cte
    (125) addop -> . PLUS
    (126) addop -> . MINUS
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 82
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    exp                            shift and go to state 226
    var_cte_1                      shift and go to state 84
    var_cte                        shift and go to state 86
    factor                         shift and go to state 77
    termino                        shift and go to state 79
    llamada                        shift and go to state 87
    addop                          shift and go to state 88
    llamada_id                     shift and go to state 27

state 204

    (26) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .

    SEMICOLON       reduce using rule 26 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .)


state 205

    (28) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 28 (asignacion_3 -> COMMA exp RBRACKET .)


state 206

    (93) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 93 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 207

    (95) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 95 (accion_params_cte_2 -> empty .)


state 208

    (94) accion_params_cte_2 -> COMMA . accion_params_cte
    (93) accion_params_cte -> . var_cte accion_params_cte_2
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    var_cte                        shift and go to state 185
    llamada                        shift and go to state 87
    var_cte_1                      shift and go to state 84
    llamada_id                     shift and go to state 27
    accion_params_cte              shift and go to state 227

state 209

    (91) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 91 (accion_params_2 -> accion_params_cte RPAREN .)


state 210

    (35) array_2 -> empty .

    GREATER         reduce using rule 35 (array_2 -> empty .)


state 211

    (34) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 228


state 212

    (33) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 229


state 213

    (82) condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .

    ID              reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    IF              reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    INT             reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    FOR             reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    END             reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 82 (condicion -> condicion_id LPAREN expresion RPAREN bloque condicion_2 .)


state 214

    (85) condicion_2 -> ELSE . bloque condicion_end
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    for_init                       shift and go to state 35
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 230
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    estatuto                       shift and go to state 31
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 23
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 215

    (84) condicion_2 -> condicion_end .

    ID              reduce using rule 84 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 84 (condicion_2 -> condicion_end .)
    IF              reduce using rule 84 (condicion_2 -> condicion_end .)
    INT             reduce using rule 84 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 84 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 84 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 84 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 84 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 84 (condicion_2 -> condicion_end .)
    END             reduce using rule 84 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 84 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 84 (condicion_2 -> condicion_end .)


state 216

    (86) condicion_end -> END .

    ID              reduce using rule 86 (condicion_end -> END .)
    DRAW            reduce using rule 86 (condicion_end -> END .)
    IF              reduce using rule 86 (condicion_end -> END .)
    INT             reduce using rule 86 (condicion_end -> END .)
    FLOAT           reduce using rule 86 (condicion_end -> END .)
    BOOLEAN         reduce using rule 86 (condicion_end -> END .)
    FOR             reduce using rule 86 (condicion_end -> END .)
    WHILE           reduce using rule 86 (condicion_end -> END .)
    ARRAY           reduce using rule 86 (condicion_end -> END .)
    END             reduce using rule 86 (condicion_end -> END .)
    RETURN          reduce using rule 86 (condicion_end -> END .)
    ELSE            reduce using rule 86 (condicion_end -> END .)


state 217

    (52) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 52 (def_array_cte_2 -> empty .)


state 218

    (51) def_array_cte_2 -> COMMA . def_array_cte
    (50) def_array_cte -> . var_cte def_array_cte_2
    (68) var_cte -> . var_cte_1
    (69) var_cte -> . CTE_I
    (70) var_cte -> . CTE_F
    (71) var_cte -> . TRUE
    (72) var_cte -> . FALSE
    (73) var_cte -> . llamada
    (74) var_cte_1 -> . ID var_cte_2
    (40) llamada -> . llamada_id LPAREN llamada_2
    (41) llamada_id -> . ID

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    ID              shift and go to state 85

    var_cte                        shift and go to state 193
    llamada_id                     shift and go to state 27
    llamada                        shift and go to state 87
    def_array_cte                  shift and go to state 231
    var_cte_1                      shift and go to state 84

state 219

    (50) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 50 (def_array_cte -> var_cte def_array_cte_2 .)


state 220

    (48) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 48 (def_array_2 -> def_array_cte RBRACKET .)


state 221

    (111) while -> while_init LPAREN expresion RPAREN bloque while_end .

    ID              reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    DRAW            reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    IF              reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    INT             reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    FLOAT           reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    BOOLEAN         reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    FOR             reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    WHILE           reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    ARRAY           reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    END             reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    RETURN          reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)
    ELSE            reduce using rule 111 (while -> while_init LPAREN expresion RPAREN bloque while_end .)


state 222

    (113) while_end -> END .

    ID              reduce using rule 113 (while_end -> END .)
    DRAW            reduce using rule 113 (while_end -> END .)
    IF              reduce using rule 113 (while_end -> END .)
    INT             reduce using rule 113 (while_end -> END .)
    FLOAT           reduce using rule 113 (while_end -> END .)
    BOOLEAN         reduce using rule 113 (while_end -> END .)
    FOR             reduce using rule 113 (while_end -> END .)
    WHILE           reduce using rule 113 (while_end -> END .)
    ARRAY           reduce using rule 113 (while_end -> END .)
    END             reduce using rule 113 (while_end -> END .)
    RETURN          reduce using rule 113 (while_end -> END .)
    ELSE            reduce using rule 113 (while_end -> END .)


state 223

    (29) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 224

    (108) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 233


state 225

    (116) funcion_2 -> RETURN expresion SEMICOLON funcion_end .

    DEF             reduce using rule 116 (funcion_2 -> RETURN expresion SEMICOLON funcion_end .)


state 226

    (78) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 234


state 227

    (94) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 94 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 228

    (34) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 34 (array_2 -> COMMA CTE_I .)


state 229

    (33) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 33 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 230

    (85) condicion_2 -> ELSE bloque . condicion_end
    (86) condicion_end -> . END

    END             shift and go to state 216

    condicion_end                  shift and go to state 235

state 231

    (51) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 51 (def_array_cte_2 -> COMMA def_array_cte .)


state 232

    (29) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    GLOBAL          reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 29 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 233

    (108) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque for_end

    RPAREN          shift and go to state 236


state 234

    (78) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 78 (var_cte_3 -> COMMA exp RBRACKET .)


state 235

    (85) condicion_2 -> ELSE bloque condicion_end .

    ID              reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    DRAW            reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    IF              reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    INT             reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    FLOAT           reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    BOOLEAN         reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    FOR             reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    WHILE           reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    ARRAY           reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    END             reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    RETURN          reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)
    ELSE            reduce using rule 85 (condicion_2 -> ELSE bloque condicion_end .)


state 236

    (108) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque for_end
    (10) bloque -> . estatuto bloque
    (11) bloque -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . ciclo
    (20) estatuto -> . accion
    (21) estatuto -> . vars
    (22) estatuto -> . llamada SEMICOLON
    (130) empty -> .
    (23) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (82) condicion -> . condicion_id LPAREN expresion RPAREN bloque condicion_2
    (87) ciclo -> . for
    (88) ciclo -> . while
    (89) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (29) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (30) vars -> . data_type ID vars2
    (31) vars -> . vars_aux
    (40) llamada -> . llamada_id LPAREN llamada_2
    (24) asignacion_id -> . ID
    (83) condicion_id -> . IF
    (108) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (111) while -> . while_init LPAREN expresion RPAREN bloque while_end
    (12) data_type -> . INT
    (13) data_type -> . FLOAT
    (14) data_type -> . BOOLEAN
    (32) vars_aux -> . array ID vars3
    (41) llamada_id -> . ID
    (109) for_init -> . FOR
    (112) while_init -> . WHILE
    (33) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 130 (empty -> .)
    ID              shift and go to state 19
    DRAW            shift and go to state 34
    IF              shift and go to state 20
    INT             shift and go to state 25
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 24
    FOR             shift and go to state 36
    WHILE           shift and go to state 32
    ARRAY           shift and go to state 21

    condicion_id                   shift and go to state 22
    llamada                        shift and go to state 23
    ciclo                          shift and go to state 12
    vars_aux                       shift and go to state 13
    condicion                      shift and go to state 14
    accion                         shift and go to state 15
    vars                           shift and go to state 16
    asignacion_id                  shift and go to state 17
    bloque                         shift and go to state 237
    array                          shift and go to state 28
    while                          shift and go to state 26
    empty                          shift and go to state 29
    estatuto                       shift and go to state 31
    while_init                     shift and go to state 33
    llamada_id                     shift and go to state 27
    for_init                       shift and go to state 35
    for                            shift and go to state 37
    data_type                      shift and go to state 30
    asignacion                     shift and go to state 38

state 237

    (108) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . for_end
    (110) for_end -> . END

    END             shift and go to state 239

    for_end                        shift and go to state 238

state 238

    (108) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .

    ID              reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    DRAW            reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    IF              reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    INT             reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FLOAT           reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    BOOLEAN         reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FOR             reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    WHILE           reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ARRAY           reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ELSE            reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    END             reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    RETURN          reduce using rule 108 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)


state 239

    (110) for_end -> END .

    ID              reduce using rule 110 (for_end -> END .)
    DRAW            reduce using rule 110 (for_end -> END .)
    IF              reduce using rule 110 (for_end -> END .)
    INT             reduce using rule 110 (for_end -> END .)
    FLOAT           reduce using rule 110 (for_end -> END .)
    BOOLEAN         reduce using rule 110 (for_end -> END .)
    FOR             reduce using rule 110 (for_end -> END .)
    WHILE           reduce using rule 110 (for_end -> END .)
    ARRAY           reduce using rule 110 (for_end -> END .)
    END             reduce using rule 110 (for_end -> END .)
    RETURN          reduce using rule 110 (for_end -> END .)
    ELSE            reduce using rule 110 (for_end -> END .)

