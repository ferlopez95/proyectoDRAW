Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones programa_end
Rule 2     programa -> funciones programa_end
Rule 3     programa_end -> empty
Rule 4     funciones -> funciones_2 main
Rule 5     funciones_2 -> funcion funciones_2
Rule 6     funciones_2 -> empty
Rule 7     globales -> global_1 vars globales_2
Rule 8     globales_2 -> global_1 vars globales_2
Rule 9     globales_2 -> empty
Rule 10    global_1 -> GLOBAL
Rule 11    bloque -> estatuto bloque
Rule 12    bloque -> empty
Rule 13    data_type -> INT
Rule 14    data_type -> FLOAT
Rule 15    data_type -> BOOLEAN
Rule 16    data_type_func -> INT
Rule 17    data_type_func -> FLOAT
Rule 18    data_type_func -> BOOLEAN
Rule 19    data_type_func -> VOID
Rule 20    main -> main_1 bloque END
Rule 21    main_1 -> MAIN LPAREN RPAREN
Rule 22    estatuto -> asignacion
Rule 23    estatuto -> condicion
Rule 24    estatuto -> ciclo
Rule 25    estatuto -> accion
Rule 26    estatuto -> vars
Rule 27    estatuto -> llamada SEMICOLON
Rule 28    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 29    asignacion_id -> ID
Rule 30    asignacion_2 -> asignacion_equal super_exp
Rule 31    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp
Rule 32    asignacion_equal -> EQUAL
Rule 33    asignacion_3 -> RBRACKET
Rule 34    asignacion_3 -> COMMA exp RBRACKET
Rule 35    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 36    vars -> vars_id vars2
Rule 37    vars -> vars_aux
Rule 38    vars_id -> data_type ID
Rule 39    vars_aux -> array ID vars3
Rule 40    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 41    array_2 -> COMMA CTE_I
Rule 42    array_2 -> empty
Rule 43    vars2 -> asignacion_equal super_exp SEMICOLON
Rule 44    vars2 -> SEMICOLON
Rule 45    vars3 -> EQUAL def_array SEMICOLON
Rule 46    vars3 -> SEMICOLON
Rule 47    llamada -> llamada_id LPAREN llamada_2
Rule 48    llamada_id -> ID
Rule 49    llamada_2 -> llamada_exp RPAREN
Rule 50    llamada_2 -> RPAREN
Rule 51    llamada_exp -> super_exp llamada_exp2
Rule 52    llamada_exp2 -> COMMA llamada_exp
Rule 53    llamada_exp2 -> empty
Rule 54    def_array -> LBRACKET def_array_2
Rule 55    def_array_2 -> def_array_cte RBRACKET
Rule 56    def_array_2 -> RBRACKET
Rule 57    def_array_cte -> var_cte def_array_cte_2
Rule 58    def_array_cte_2 -> COMMA def_array_cte
Rule 59    def_array_cte_2 -> empty
Rule 60    super_exp -> expresion super_exp_2
Rule 61    super_exp_2 -> logicop super_exp
Rule 62    super_exp_2 -> empty
Rule 63    expresion -> exp expresion_2
Rule 64    expresion_2 -> relop exp
Rule 65    expresion_2 -> empty
Rule 66    relop -> GREATER
Rule 67    relop -> GREATEREQUAL
Rule 68    relop -> LESS
Rule 69    relop -> LESSEQUAL
Rule 70    relop -> DEQUAL
Rule 71    relop -> DISTINT
Rule 72    exp -> termino exp_2
Rule 73    exp_2 -> addop exp
Rule 74    exp_2 -> empty
Rule 75    termino -> factor termino_2
Rule 76    termino_2 -> timesop termino
Rule 77    termino_2 -> empty
Rule 78    var_cte -> var_cte_1
Rule 79    var_cte -> CTE_I
Rule 80    var_cte -> CTE_F
Rule 81    var_cte -> TRUE
Rule 82    var_cte -> FALSE
Rule 83    var_cte -> llamada
Rule 84    var_cte_1 -> ID var_cte_2
Rule 85    var_cte_2 -> LBRACKET exp var_cte_3
Rule 86    var_cte_2 -> empty
Rule 87    var_cte_3 -> RBRACKET
Rule 88    var_cte_3 -> COMMA exp RBRACKET
Rule 89    factor -> LPAREN super_exp RPAREN
Rule 90    factor -> addop var_cte
Rule 91    factor -> var_cte
Rule 92    condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2
Rule 93    condicion_id -> IF
Rule 94    condicion_2 -> condicion_end
Rule 95    condicion_2 -> ELSE bloque condicion_end
Rule 96    condicion_end -> END
Rule 97    ciclo -> for
Rule 98    ciclo -> while
Rule 99    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 100   accion_params -> LPAREN accion_params_2
Rule 101   accion_params_2 -> accion_params_cte RPAREN
Rule 102   accion_params_2 -> RPAREN
Rule 103   accion_params_cte -> var_cte accion_params_cte_2
Rule 104   accion_params_cte_2 -> COMMA accion_params_cte
Rule 105   accion_params_cte_2 -> empty
Rule 106   accion_nombre -> SETPOSITION
Rule 107   accion_nombre -> CIRCLE
Rule 108   accion_nombre -> RIGHT
Rule 109   accion_nombre -> LEFT
Rule 110   accion_nombre -> HIDE
Rule 111   accion_nombre -> SQUARE
Rule 112   accion_nombre -> CLEAR
Rule 113   accion_nombre -> SHOW
Rule 114   accion_nombre -> BACK
Rule 115   accion_nombre -> SPEED
Rule 116   accion_nombre -> FORWARD
Rule 117   accion_nombre -> SETCOLOR
Rule 118   for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
Rule 119   for_init -> FOR
Rule 120   for_end -> END
Rule 121   while -> while_init LPAREN super_exp RPAREN bloque while_end
Rule 122   while_init -> WHILE
Rule 123   while_end -> END
Rule 124   funcion -> funcion_1 var_local bloque funcion_2
Rule 125   funcion_1 -> DEF data_type_func ID
Rule 126   funcion_2 -> RETURN super_exp SEMICOLON funcion_end
Rule 127   funcion_2 -> funcion_end
Rule 128   funcion_end -> END
Rule 129   var_local -> LPAREN var_local_2 RPAREN
Rule 130   var_local_2 -> var_local_2_1 var_local_3
Rule 131   var_local_2 -> empty
Rule 132   var_local_2_1 -> data_type ID
Rule 133   var_local_3 -> COMMA var_local_2
Rule 134   var_local_3 -> empty
Rule 135   addop -> PLUS
Rule 136   addop -> MINUS
Rule 137   timesop -> TIMES
Rule 138   timesop -> DIVIDE
Rule 139   timesop -> PERCENT
Rule 140   logicop -> AND
Rule 141   logicop -> OR
Rule 142   empty -> <empty>

Terminals, with rules where they appear

AND                  : 140
ARRAY                : 40
BACK                 : 114
BOOLEAN              : 15 18
CIRCLE               : 107
CLEAR                : 112
COMMA                : 34 40 41 52 58 88 104 118 118 133
CTE_F                : 80
CTE_I                : 40 41 79 118 118 118
DEF                  : 125
DEQUAL               : 70
DISTINT              : 71
DIVIDE               : 138
DRAW                 : 35
ELSE                 : 95
END                  : 20 96 120 123 128
EQUAL                : 31 32 35 45
FALSE                : 82
FLOAT                : 14 17
FOR                  : 119
FORWARD              : 116
GLOBAL               : 10
GREATER              : 40 66
GREATEREQUAL         : 67
HIDE                 : 110
ID                   : 29 35 38 39 48 84 99 125 132
IF                   : 93
INT                  : 13 16
LBRACKET             : 31 54 85
LEFT                 : 109
LESS                 : 40 68
LESSEQUAL            : 69
LPAREN               : 21 35 47 89 92 100 118 121 129
MAIN                 : 21
MINUS                : 136
NEWDRAW              : 35
OR                   : 141
PERCENT              : 139
PLUS                 : 135
POINT                : 99
RBRACKET             : 33 34 55 56 87 88
RETURN               : 126
RIGHT                : 108
RPAREN               : 21 35 49 50 89 92 101 102 118 121 129
SEMICOLON            : 27 28 35 43 44 45 46 99 126
SETCOLOR             : 117
SETPOSITION          : 106
SHOW                 : 113
SPEED                : 115
SQUARE               : 111
TIMES                : 137
TRUE                 : 81
VOID                 : 19
WHILE                : 122
error                : 

Nonterminals, with rules where they appear

accion               : 25
accion_nombre        : 99
accion_params        : 99
accion_params_2      : 100
accion_params_cte    : 101 104
accion_params_cte_2  : 103
addop                : 73 90
array                : 39
array_2              : 40
asignacion           : 22
asignacion_2         : 28
asignacion_3         : 31
asignacion_equal     : 30 43
asignacion_id        : 28
bloque               : 11 20 92 95 118 121 124
ciclo                : 24
condicion            : 23
condicion_2          : 92
condicion_end        : 94 95
condicion_id         : 92
data_type            : 38 40 132
data_type_func       : 125
def_array            : 45
def_array_2          : 54
def_array_cte        : 55 58
def_array_cte_2      : 57
empty                : 3 6 9 12 42 53 59 62 65 74 77 86 105 131 134
estatuto             : 11
exp                  : 31 34 63 64 73 85 88
exp_2                : 72
expresion            : 60
expresion_2          : 63
factor               : 75
for                  : 97
for_end              : 118
for_init             : 118
funcion              : 5
funcion_1            : 124
funcion_2            : 124
funcion_end          : 126 127
funciones            : 1 2
funciones_2          : 4 5
global_1             : 7 8
globales             : 1
globales_2           : 7 8
llamada              : 27 83
llamada_2            : 47
llamada_exp          : 49 52
llamada_exp2         : 51
llamada_id           : 47
logicop              : 61
main                 : 4
main_1               : 20
programa             : 0
programa_end         : 1 2
relop                : 64
super_exp            : 30 31 43 51 61 89 92 121 126
super_exp_2          : 60
termino              : 72 76
termino_2            : 75
timesop              : 76
var_cte              : 57 90 91 103
var_cte_1            : 78
var_cte_2            : 84
var_cte_3            : 85
var_local            : 124
var_local_2          : 129 133
var_local_2_1        : 130
var_local_3          : 130
vars                 : 7 8 26
vars2                : 36
vars3                : 39
vars_aux             : 37
vars_id              : 36
while                : 98
while_end            : 121
while_init           : 121

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones programa_end
    (2) programa -> . funciones programa_end
    (7) globales -> . global_1 vars globales_2
    (4) funciones -> . funciones_2 main
    (10) global_1 -> . GLOBAL
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (124) funcion -> . funcion_1 var_local bloque funcion_2
    (142) empty -> .
    (125) funcion_1 -> . DEF data_type_func ID

    GLOBAL          shift and go to state 6
    MAIN            reduce using rule 142 (empty -> .)
    DEF             shift and go to state 10

    programa                       shift and go to state 1
    globales                       shift and go to state 2
    funciones                      shift and go to state 3
    global_1                       shift and go to state 4
    funciones_2                    shift and go to state 5
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> globales . funciones programa_end
    (4) funciones -> . funciones_2 main
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (124) funcion -> . funcion_1 var_local bloque funcion_2
    (142) empty -> .
    (125) funcion_1 -> . DEF data_type_func ID

    MAIN            reduce using rule 142 (empty -> .)
    DEF             shift and go to state 10

    funciones                      shift and go to state 11
    funciones_2                    shift and go to state 5
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 3

    (2) programa -> funciones . programa_end
    (3) programa_end -> . empty
    (142) empty -> .

    $end            reduce using rule 142 (empty -> .)

    programa_end                   shift and go to state 12
    empty                          shift and go to state 13

state 4

    (7) globales -> global_1 . vars globales_2
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    vars                           shift and go to state 14
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 5

    (4) funciones -> funciones_2 . main
    (20) main -> . main_1 bloque END
    (21) main_1 -> . MAIN LPAREN RPAREN

    MAIN            shift and go to state 26

    main                           shift and go to state 24
    main_1                         shift and go to state 25

state 6

    (10) global_1 -> GLOBAL .

    DRAW            reduce using rule 10 (global_1 -> GLOBAL .)
    INT             reduce using rule 10 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 10 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 10 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 10 (global_1 -> GLOBAL .)


state 7

    (5) funciones_2 -> funcion . funciones_2
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (124) funcion -> . funcion_1 var_local bloque funcion_2
    (142) empty -> .
    (125) funcion_1 -> . DEF data_type_func ID

    MAIN            reduce using rule 142 (empty -> .)
    DEF             shift and go to state 10

    funcion                        shift and go to state 7
    funciones_2                    shift and go to state 27
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 8

    (6) funciones_2 -> empty .

    MAIN            reduce using rule 6 (funciones_2 -> empty .)


state 9

    (124) funcion -> funcion_1 . var_local bloque funcion_2
    (129) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 29

    var_local                      shift and go to state 28

state 10

    (125) funcion_1 -> DEF . data_type_func ID
    (16) data_type_func -> . INT
    (17) data_type_func -> . FLOAT
    (18) data_type_func -> . BOOLEAN
    (19) data_type_func -> . VOID

    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    BOOLEAN         shift and go to state 33
    VOID            shift and go to state 34

    data_type_func                 shift and go to state 30

state 11

    (1) programa -> globales funciones . programa_end
    (3) programa_end -> . empty
    (142) empty -> .

    $end            reduce using rule 142 (empty -> .)

    programa_end                   shift and go to state 35
    empty                          shift and go to state 13

state 12

    (2) programa -> funciones programa_end .

    $end            reduce using rule 2 (programa -> funciones programa_end .)


state 13

    (3) programa_end -> empty .

    $end            reduce using rule 3 (programa_end -> empty .)


state 14

    (7) globales -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (142) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 142 (empty -> .)
    MAIN            reduce using rule 142 (empty -> .)

    global_1                       shift and go to state 36
    globales_2                     shift and go to state 37
    empty                          shift and go to state 38

state 15

    (35) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 39


state 16

    (36) vars -> vars_id . vars2
    (43) vars2 -> . asignacion_equal super_exp SEMICOLON
    (44) vars2 -> . SEMICOLON
    (32) asignacion_equal -> . EQUAL

    SEMICOLON       shift and go to state 42
    EQUAL           shift and go to state 43

    vars2                          shift and go to state 40
    asignacion_equal               shift and go to state 41

state 17

    (37) vars -> vars_aux .

    GLOBAL          reduce using rule 37 (vars -> vars_aux .)
    DEF             reduce using rule 37 (vars -> vars_aux .)
    MAIN            reduce using rule 37 (vars -> vars_aux .)
    ID              reduce using rule 37 (vars -> vars_aux .)
    DRAW            reduce using rule 37 (vars -> vars_aux .)
    IF              reduce using rule 37 (vars -> vars_aux .)
    FOR             reduce using rule 37 (vars -> vars_aux .)
    WHILE           reduce using rule 37 (vars -> vars_aux .)
    INT             reduce using rule 37 (vars -> vars_aux .)
    FLOAT           reduce using rule 37 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 37 (vars -> vars_aux .)
    ARRAY           reduce using rule 37 (vars -> vars_aux .)
    END             reduce using rule 37 (vars -> vars_aux .)
    RETURN          reduce using rule 37 (vars -> vars_aux .)
    ELSE            reduce using rule 37 (vars -> vars_aux .)


state 18

    (38) vars_id -> data_type . ID

    ID              shift and go to state 44


state 19

    (39) vars_aux -> array . ID vars3

    ID              shift and go to state 45


state 20

    (13) data_type -> INT .

    ID              reduce using rule 13 (data_type -> INT .)
    COMMA           reduce using rule 13 (data_type -> INT .)


state 21

    (14) data_type -> FLOAT .

    ID              reduce using rule 14 (data_type -> FLOAT .)
    COMMA           reduce using rule 14 (data_type -> FLOAT .)


state 22

    (15) data_type -> BOOLEAN .

    ID              reduce using rule 15 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 15 (data_type -> BOOLEAN .)


state 23

    (40) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 46


state 24

    (4) funciones -> funciones_2 main .

    $end            reduce using rule 4 (funciones -> funciones_2 main .)


state 25

    (20) main -> main_1 . bloque END
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    bloque                         shift and go to state 47
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 26

    (21) main_1 -> MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 67


state 27

    (5) funciones_2 -> funcion funciones_2 .

    MAIN            reduce using rule 5 (funciones_2 -> funcion funciones_2 .)


state 28

    (124) funcion -> funcion_1 var_local . bloque funcion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 142 (empty -> .)
    END             reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    bloque                         shift and go to state 68
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 29

    (129) var_local -> LPAREN . var_local_2 RPAREN
    (130) var_local_2 -> . var_local_2_1 var_local_3
    (131) var_local_2 -> . empty
    (132) var_local_2_1 -> . data_type ID
    (142) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 142 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    var_local_2                    shift and go to state 69
    var_local_2_1                  shift and go to state 70
    empty                          shift and go to state 71
    data_type                      shift and go to state 72

state 30

    (125) funcion_1 -> DEF data_type_func . ID

    ID              shift and go to state 73


state 31

    (16) data_type_func -> INT .

    ID              reduce using rule 16 (data_type_func -> INT .)


state 32

    (17) data_type_func -> FLOAT .

    ID              reduce using rule 17 (data_type_func -> FLOAT .)


state 33

    (18) data_type_func -> BOOLEAN .

    ID              reduce using rule 18 (data_type_func -> BOOLEAN .)


state 34

    (19) data_type_func -> VOID .

    ID              reduce using rule 19 (data_type_func -> VOID .)


state 35

    (1) programa -> globales funciones programa_end .

    $end            reduce using rule 1 (programa -> globales funciones programa_end .)


state 36

    (8) globales_2 -> global_1 . vars globales_2
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    vars                           shift and go to state 74
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 37

    (7) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 7 (globales -> global_1 vars globales_2 .)
    MAIN            reduce using rule 7 (globales -> global_1 vars globales_2 .)


state 38

    (9) globales_2 -> empty .

    DEF             reduce using rule 9 (globales_2 -> empty .)
    MAIN            reduce using rule 9 (globales_2 -> empty .)


state 39

    (35) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 75


state 40

    (36) vars -> vars_id vars2 .

    GLOBAL          reduce using rule 36 (vars -> vars_id vars2 .)
    DEF             reduce using rule 36 (vars -> vars_id vars2 .)
    MAIN            reduce using rule 36 (vars -> vars_id vars2 .)
    ID              reduce using rule 36 (vars -> vars_id vars2 .)
    DRAW            reduce using rule 36 (vars -> vars_id vars2 .)
    IF              reduce using rule 36 (vars -> vars_id vars2 .)
    FOR             reduce using rule 36 (vars -> vars_id vars2 .)
    WHILE           reduce using rule 36 (vars -> vars_id vars2 .)
    INT             reduce using rule 36 (vars -> vars_id vars2 .)
    FLOAT           reduce using rule 36 (vars -> vars_id vars2 .)
    BOOLEAN         reduce using rule 36 (vars -> vars_id vars2 .)
    ARRAY           reduce using rule 36 (vars -> vars_id vars2 .)
    END             reduce using rule 36 (vars -> vars_id vars2 .)
    RETURN          reduce using rule 36 (vars -> vars_id vars2 .)
    ELSE            reduce using rule 36 (vars -> vars_id vars2 .)


state 41

    (43) vars2 -> asignacion_equal . super_exp SEMICOLON
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 76
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 42

    (44) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 44 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 44 (vars2 -> SEMICOLON .)
    MAIN            reduce using rule 44 (vars2 -> SEMICOLON .)
    ID              reduce using rule 44 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 44 (vars2 -> SEMICOLON .)
    IF              reduce using rule 44 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 44 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 44 (vars2 -> SEMICOLON .)
    INT             reduce using rule 44 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 44 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 44 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 44 (vars2 -> SEMICOLON .)
    END             reduce using rule 44 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 44 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 44 (vars2 -> SEMICOLON .)


state 43

    (32) asignacion_equal -> EQUAL .

    LPAREN          reduce using rule 32 (asignacion_equal -> EQUAL .)
    PLUS            reduce using rule 32 (asignacion_equal -> EQUAL .)
    MINUS           reduce using rule 32 (asignacion_equal -> EQUAL .)
    CTE_I           reduce using rule 32 (asignacion_equal -> EQUAL .)
    CTE_F           reduce using rule 32 (asignacion_equal -> EQUAL .)
    TRUE            reduce using rule 32 (asignacion_equal -> EQUAL .)
    FALSE           reduce using rule 32 (asignacion_equal -> EQUAL .)
    ID              reduce using rule 32 (asignacion_equal -> EQUAL .)


state 44

    (38) vars_id -> data_type ID .

    SEMICOLON       reduce using rule 38 (vars_id -> data_type ID .)
    EQUAL           reduce using rule 38 (vars_id -> data_type ID .)


state 45

    (39) vars_aux -> array ID . vars3
    (45) vars3 -> . EQUAL def_array SEMICOLON
    (46) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 94
    SEMICOLON       shift and go to state 95

    vars3                          shift and go to state 93

state 46

    (40) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    data_type                      shift and go to state 96

state 47

    (20) main -> main_1 bloque . END

    END             shift and go to state 97


state 48

    (11) bloque -> estatuto . bloque
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 142 (empty -> .)
    RETURN          reduce using rule 142 (empty -> .)
    ELSE            reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    estatuto                       shift and go to state 48
    bloque                         shift and go to state 98
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 49

    (12) bloque -> empty .

    END             reduce using rule 12 (bloque -> empty .)
    RETURN          reduce using rule 12 (bloque -> empty .)
    ELSE            reduce using rule 12 (bloque -> empty .)


state 50

    (22) estatuto -> asignacion .

    ID              reduce using rule 22 (estatuto -> asignacion .)
    DRAW            reduce using rule 22 (estatuto -> asignacion .)
    IF              reduce using rule 22 (estatuto -> asignacion .)
    FOR             reduce using rule 22 (estatuto -> asignacion .)
    WHILE           reduce using rule 22 (estatuto -> asignacion .)
    INT             reduce using rule 22 (estatuto -> asignacion .)
    FLOAT           reduce using rule 22 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 22 (estatuto -> asignacion .)
    ARRAY           reduce using rule 22 (estatuto -> asignacion .)
    END             reduce using rule 22 (estatuto -> asignacion .)
    RETURN          reduce using rule 22 (estatuto -> asignacion .)
    ELSE            reduce using rule 22 (estatuto -> asignacion .)


state 51

    (23) estatuto -> condicion .

    ID              reduce using rule 23 (estatuto -> condicion .)
    DRAW            reduce using rule 23 (estatuto -> condicion .)
    IF              reduce using rule 23 (estatuto -> condicion .)
    FOR             reduce using rule 23 (estatuto -> condicion .)
    WHILE           reduce using rule 23 (estatuto -> condicion .)
    INT             reduce using rule 23 (estatuto -> condicion .)
    FLOAT           reduce using rule 23 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 23 (estatuto -> condicion .)
    ARRAY           reduce using rule 23 (estatuto -> condicion .)
    END             reduce using rule 23 (estatuto -> condicion .)
    RETURN          reduce using rule 23 (estatuto -> condicion .)
    ELSE            reduce using rule 23 (estatuto -> condicion .)


state 52

    (24) estatuto -> ciclo .

    ID              reduce using rule 24 (estatuto -> ciclo .)
    DRAW            reduce using rule 24 (estatuto -> ciclo .)
    IF              reduce using rule 24 (estatuto -> ciclo .)
    FOR             reduce using rule 24 (estatuto -> ciclo .)
    WHILE           reduce using rule 24 (estatuto -> ciclo .)
    INT             reduce using rule 24 (estatuto -> ciclo .)
    FLOAT           reduce using rule 24 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 24 (estatuto -> ciclo .)
    ARRAY           reduce using rule 24 (estatuto -> ciclo .)
    END             reduce using rule 24 (estatuto -> ciclo .)
    RETURN          reduce using rule 24 (estatuto -> ciclo .)
    ELSE            reduce using rule 24 (estatuto -> ciclo .)


state 53

    (25) estatuto -> accion .

    ID              reduce using rule 25 (estatuto -> accion .)
    DRAW            reduce using rule 25 (estatuto -> accion .)
    IF              reduce using rule 25 (estatuto -> accion .)
    FOR             reduce using rule 25 (estatuto -> accion .)
    WHILE           reduce using rule 25 (estatuto -> accion .)
    INT             reduce using rule 25 (estatuto -> accion .)
    FLOAT           reduce using rule 25 (estatuto -> accion .)
    BOOLEAN         reduce using rule 25 (estatuto -> accion .)
    ARRAY           reduce using rule 25 (estatuto -> accion .)
    END             reduce using rule 25 (estatuto -> accion .)
    RETURN          reduce using rule 25 (estatuto -> accion .)
    ELSE            reduce using rule 25 (estatuto -> accion .)


state 54

    (26) estatuto -> vars .

    ID              reduce using rule 26 (estatuto -> vars .)
    DRAW            reduce using rule 26 (estatuto -> vars .)
    IF              reduce using rule 26 (estatuto -> vars .)
    FOR             reduce using rule 26 (estatuto -> vars .)
    WHILE           reduce using rule 26 (estatuto -> vars .)
    INT             reduce using rule 26 (estatuto -> vars .)
    FLOAT           reduce using rule 26 (estatuto -> vars .)
    BOOLEAN         reduce using rule 26 (estatuto -> vars .)
    ARRAY           reduce using rule 26 (estatuto -> vars .)
    END             reduce using rule 26 (estatuto -> vars .)
    RETURN          reduce using rule 26 (estatuto -> vars .)
    ELSE            reduce using rule 26 (estatuto -> vars .)


state 55

    (27) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 99


state 56

    (28) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (30) asignacion_2 -> . asignacion_equal super_exp
    (31) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL super_exp
    (32) asignacion_equal -> . EQUAL

    LBRACKET        shift and go to state 102
    EQUAL           shift and go to state 43

    asignacion_2                   shift and go to state 100
    asignacion_equal               shift and go to state 101

state 57

    (92) condicion -> condicion_id . LPAREN super_exp RPAREN bloque condicion_2

    LPAREN          shift and go to state 103


state 58

    (97) ciclo -> for .

    ID              reduce using rule 97 (ciclo -> for .)
    DRAW            reduce using rule 97 (ciclo -> for .)
    IF              reduce using rule 97 (ciclo -> for .)
    FOR             reduce using rule 97 (ciclo -> for .)
    WHILE           reduce using rule 97 (ciclo -> for .)
    INT             reduce using rule 97 (ciclo -> for .)
    FLOAT           reduce using rule 97 (ciclo -> for .)
    BOOLEAN         reduce using rule 97 (ciclo -> for .)
    ARRAY           reduce using rule 97 (ciclo -> for .)
    END             reduce using rule 97 (ciclo -> for .)
    RETURN          reduce using rule 97 (ciclo -> for .)
    ELSE            reduce using rule 97 (ciclo -> for .)


state 59

    (98) ciclo -> while .

    ID              reduce using rule 98 (ciclo -> while .)
    DRAW            reduce using rule 98 (ciclo -> while .)
    IF              reduce using rule 98 (ciclo -> while .)
    FOR             reduce using rule 98 (ciclo -> while .)
    WHILE           reduce using rule 98 (ciclo -> while .)
    INT             reduce using rule 98 (ciclo -> while .)
    FLOAT           reduce using rule 98 (ciclo -> while .)
    BOOLEAN         reduce using rule 98 (ciclo -> while .)
    ARRAY           reduce using rule 98 (ciclo -> while .)
    END             reduce using rule 98 (ciclo -> while .)
    RETURN          reduce using rule 98 (ciclo -> while .)
    ELSE            reduce using rule 98 (ciclo -> while .)


state 60

    (99) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (29) asignacion_id -> ID .
    (48) llamada_id -> ID .

    POINT           shift and go to state 104
    LBRACKET        reduce using rule 29 (asignacion_id -> ID .)
    EQUAL           reduce using rule 29 (asignacion_id -> ID .)
    LPAREN          reduce using rule 48 (llamada_id -> ID .)


state 61

    (47) llamada -> llamada_id . LPAREN llamada_2

    LPAREN          shift and go to state 105


state 62

    (93) condicion_id -> IF .

    LPAREN          reduce using rule 93 (condicion_id -> IF .)


state 63

    (118) for -> for_init . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    LPAREN          shift and go to state 106


state 64

    (121) while -> while_init . LPAREN super_exp RPAREN bloque while_end

    LPAREN          shift and go to state 107


state 65

    (119) for_init -> FOR .

    LPAREN          reduce using rule 119 (for_init -> FOR .)


state 66

    (122) while_init -> WHILE .

    LPAREN          reduce using rule 122 (while_init -> WHILE .)


state 67

    (21) main_1 -> MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 108


state 68

    (124) funcion -> funcion_1 var_local bloque . funcion_2
    (126) funcion_2 -> . RETURN super_exp SEMICOLON funcion_end
    (127) funcion_2 -> . funcion_end
    (128) funcion_end -> . END

    RETURN          shift and go to state 110
    END             shift and go to state 112

    funcion_2                      shift and go to state 109
    funcion_end                    shift and go to state 111

state 69

    (129) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 113


state 70

    (130) var_local_2 -> var_local_2_1 . var_local_3
    (133) var_local_3 -> . COMMA var_local_2
    (134) var_local_3 -> . empty
    (142) empty -> .

    COMMA           shift and go to state 115
    RPAREN          reduce using rule 142 (empty -> .)

    var_local_3                    shift and go to state 114
    empty                          shift and go to state 116

state 71

    (131) var_local_2 -> empty .

    RPAREN          reduce using rule 131 (var_local_2 -> empty .)


state 72

    (132) var_local_2_1 -> data_type . ID

    ID              shift and go to state 117


state 73

    (125) funcion_1 -> DEF data_type_func ID .

    LPAREN          reduce using rule 125 (funcion_1 -> DEF data_type_func ID .)


state 74

    (8) globales_2 -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (142) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 142 (empty -> .)
    MAIN            reduce using rule 142 (empty -> .)

    global_1                       shift and go to state 36
    globales_2                     shift and go to state 118
    empty                          shift and go to state 38

state 75

    (35) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 119


state 76

    (43) vars2 -> asignacion_equal super_exp . SEMICOLON

    SEMICOLON       shift and go to state 120


state 77

    (60) super_exp -> expresion . super_exp_2
    (61) super_exp_2 -> . logicop super_exp
    (62) super_exp_2 -> . empty
    (140) logicop -> . AND
    (141) logicop -> . OR
    (142) empty -> .

    AND             shift and go to state 124
    OR              shift and go to state 125
    SEMICOLON       reduce using rule 142 (empty -> .)
    RPAREN          reduce using rule 142 (empty -> .)
    COMMA           reduce using rule 142 (empty -> .)

    super_exp_2                    shift and go to state 121
    logicop                        shift and go to state 122
    empty                          shift and go to state 123

state 78

    (63) expresion -> exp . expresion_2
    (64) expresion_2 -> . relop exp
    (65) expresion_2 -> . empty
    (66) relop -> . GREATER
    (67) relop -> . GREATEREQUAL
    (68) relop -> . LESS
    (69) relop -> . LESSEQUAL
    (70) relop -> . DEQUAL
    (71) relop -> . DISTINT
    (142) empty -> .

    GREATER         shift and go to state 129
    GREATEREQUAL    shift and go to state 130
    LESS            shift and go to state 131
    LESSEQUAL       shift and go to state 132
    DEQUAL          shift and go to state 133
    DISTINT         shift and go to state 134
    AND             reduce using rule 142 (empty -> .)
    OR              reduce using rule 142 (empty -> .)
    SEMICOLON       reduce using rule 142 (empty -> .)
    RPAREN          reduce using rule 142 (empty -> .)
    COMMA           reduce using rule 142 (empty -> .)

    expresion_2                    shift and go to state 126
    relop                          shift and go to state 127
    empty                          shift and go to state 128

state 79

    (72) exp -> termino . exp_2
    (73) exp_2 -> . addop exp
    (74) exp_2 -> . empty
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (142) empty -> .

    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    GREATER         reduce using rule 142 (empty -> .)
    GREATEREQUAL    reduce using rule 142 (empty -> .)
    LESS            reduce using rule 142 (empty -> .)
    LESSEQUAL       reduce using rule 142 (empty -> .)
    DEQUAL          reduce using rule 142 (empty -> .)
    DISTINT         reduce using rule 142 (empty -> .)
    AND             reduce using rule 142 (empty -> .)
    OR              reduce using rule 142 (empty -> .)
    SEMICOLON       reduce using rule 142 (empty -> .)
    RPAREN          reduce using rule 142 (empty -> .)
    RBRACKET        reduce using rule 142 (empty -> .)
    COMMA           reduce using rule 142 (empty -> .)

    exp_2                          shift and go to state 135
    addop                          shift and go to state 136
    empty                          shift and go to state 137

state 80

    (75) termino -> factor . termino_2
    (76) termino_2 -> . timesop termino
    (77) termino_2 -> . empty
    (137) timesop -> . TIMES
    (138) timesop -> . DIVIDE
    (139) timesop -> . PERCENT
    (142) empty -> .

    TIMES           shift and go to state 141
    DIVIDE          shift and go to state 142
    PERCENT         shift and go to state 143
    PLUS            reduce using rule 142 (empty -> .)
    MINUS           reduce using rule 142 (empty -> .)
    GREATER         reduce using rule 142 (empty -> .)
    GREATEREQUAL    reduce using rule 142 (empty -> .)
    LESS            reduce using rule 142 (empty -> .)
    LESSEQUAL       reduce using rule 142 (empty -> .)
    DEQUAL          reduce using rule 142 (empty -> .)
    DISTINT         reduce using rule 142 (empty -> .)
    AND             reduce using rule 142 (empty -> .)
    OR              reduce using rule 142 (empty -> .)
    SEMICOLON       reduce using rule 142 (empty -> .)
    RPAREN          reduce using rule 142 (empty -> .)
    RBRACKET        reduce using rule 142 (empty -> .)
    COMMA           reduce using rule 142 (empty -> .)

    termino_2                      shift and go to state 138
    timesop                        shift and go to state 139
    empty                          shift and go to state 140

state 81

    (89) factor -> LPAREN . super_exp RPAREN
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 144
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 82

    (90) factor -> addop . var_cte
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    var_cte                        shift and go to state 145
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 83

    (91) factor -> var_cte .

    TIMES           reduce using rule 91 (factor -> var_cte .)
    DIVIDE          reduce using rule 91 (factor -> var_cte .)
    PERCENT         reduce using rule 91 (factor -> var_cte .)
    PLUS            reduce using rule 91 (factor -> var_cte .)
    MINUS           reduce using rule 91 (factor -> var_cte .)
    GREATER         reduce using rule 91 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 91 (factor -> var_cte .)
    LESS            reduce using rule 91 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 91 (factor -> var_cte .)
    DEQUAL          reduce using rule 91 (factor -> var_cte .)
    DISTINT         reduce using rule 91 (factor -> var_cte .)
    AND             reduce using rule 91 (factor -> var_cte .)
    OR              reduce using rule 91 (factor -> var_cte .)
    SEMICOLON       reduce using rule 91 (factor -> var_cte .)
    RPAREN          reduce using rule 91 (factor -> var_cte .)
    RBRACKET        reduce using rule 91 (factor -> var_cte .)
    COMMA           reduce using rule 91 (factor -> var_cte .)


state 84

    (135) addop -> PLUS .

    CTE_I           reduce using rule 135 (addop -> PLUS .)
    CTE_F           reduce using rule 135 (addop -> PLUS .)
    TRUE            reduce using rule 135 (addop -> PLUS .)
    FALSE           reduce using rule 135 (addop -> PLUS .)
    ID              reduce using rule 135 (addop -> PLUS .)
    LPAREN          reduce using rule 135 (addop -> PLUS .)
    PLUS            reduce using rule 135 (addop -> PLUS .)
    MINUS           reduce using rule 135 (addop -> PLUS .)


state 85

    (136) addop -> MINUS .

    CTE_I           reduce using rule 136 (addop -> MINUS .)
    CTE_F           reduce using rule 136 (addop -> MINUS .)
    TRUE            reduce using rule 136 (addop -> MINUS .)
    FALSE           reduce using rule 136 (addop -> MINUS .)
    ID              reduce using rule 136 (addop -> MINUS .)
    LPAREN          reduce using rule 136 (addop -> MINUS .)
    PLUS            reduce using rule 136 (addop -> MINUS .)
    MINUS           reduce using rule 136 (addop -> MINUS .)


state 86

    (78) var_cte -> var_cte_1 .

    TIMES           reduce using rule 78 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 78 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 78 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 78 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 78 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 78 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 78 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 78 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 78 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 78 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 78 (var_cte -> var_cte_1 .)
    AND             reduce using rule 78 (var_cte -> var_cte_1 .)
    OR              reduce using rule 78 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 78 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 78 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 78 (var_cte -> var_cte_1 .)
    COMMA           reduce using rule 78 (var_cte -> var_cte_1 .)


state 87

    (79) var_cte -> CTE_I .

    TIMES           reduce using rule 79 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 79 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 79 (var_cte -> CTE_I .)
    PLUS            reduce using rule 79 (var_cte -> CTE_I .)
    MINUS           reduce using rule 79 (var_cte -> CTE_I .)
    GREATER         reduce using rule 79 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 79 (var_cte -> CTE_I .)
    LESS            reduce using rule 79 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 79 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 79 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 79 (var_cte -> CTE_I .)
    AND             reduce using rule 79 (var_cte -> CTE_I .)
    OR              reduce using rule 79 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 79 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 79 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 79 (var_cte -> CTE_I .)
    COMMA           reduce using rule 79 (var_cte -> CTE_I .)


state 88

    (80) var_cte -> CTE_F .

    TIMES           reduce using rule 80 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 80 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 80 (var_cte -> CTE_F .)
    PLUS            reduce using rule 80 (var_cte -> CTE_F .)
    MINUS           reduce using rule 80 (var_cte -> CTE_F .)
    GREATER         reduce using rule 80 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 80 (var_cte -> CTE_F .)
    LESS            reduce using rule 80 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 80 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 80 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 80 (var_cte -> CTE_F .)
    AND             reduce using rule 80 (var_cte -> CTE_F .)
    OR              reduce using rule 80 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 80 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 80 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 80 (var_cte -> CTE_F .)
    COMMA           reduce using rule 80 (var_cte -> CTE_F .)


state 89

    (81) var_cte -> TRUE .

    TIMES           reduce using rule 81 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 81 (var_cte -> TRUE .)
    PERCENT         reduce using rule 81 (var_cte -> TRUE .)
    PLUS            reduce using rule 81 (var_cte -> TRUE .)
    MINUS           reduce using rule 81 (var_cte -> TRUE .)
    GREATER         reduce using rule 81 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 81 (var_cte -> TRUE .)
    LESS            reduce using rule 81 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 81 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 81 (var_cte -> TRUE .)
    DISTINT         reduce using rule 81 (var_cte -> TRUE .)
    AND             reduce using rule 81 (var_cte -> TRUE .)
    OR              reduce using rule 81 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 81 (var_cte -> TRUE .)
    RPAREN          reduce using rule 81 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 81 (var_cte -> TRUE .)
    COMMA           reduce using rule 81 (var_cte -> TRUE .)


state 90

    (82) var_cte -> FALSE .

    TIMES           reduce using rule 82 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 82 (var_cte -> FALSE .)
    PERCENT         reduce using rule 82 (var_cte -> FALSE .)
    PLUS            reduce using rule 82 (var_cte -> FALSE .)
    MINUS           reduce using rule 82 (var_cte -> FALSE .)
    GREATER         reduce using rule 82 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 82 (var_cte -> FALSE .)
    LESS            reduce using rule 82 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 82 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 82 (var_cte -> FALSE .)
    DISTINT         reduce using rule 82 (var_cte -> FALSE .)
    AND             reduce using rule 82 (var_cte -> FALSE .)
    OR              reduce using rule 82 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 82 (var_cte -> FALSE .)
    RPAREN          reduce using rule 82 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 82 (var_cte -> FALSE .)
    COMMA           reduce using rule 82 (var_cte -> FALSE .)


state 91

    (83) var_cte -> llamada .

    TIMES           reduce using rule 83 (var_cte -> llamada .)
    DIVIDE          reduce using rule 83 (var_cte -> llamada .)
    PERCENT         reduce using rule 83 (var_cte -> llamada .)
    PLUS            reduce using rule 83 (var_cte -> llamada .)
    MINUS           reduce using rule 83 (var_cte -> llamada .)
    GREATER         reduce using rule 83 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 83 (var_cte -> llamada .)
    LESS            reduce using rule 83 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 83 (var_cte -> llamada .)
    DEQUAL          reduce using rule 83 (var_cte -> llamada .)
    DISTINT         reduce using rule 83 (var_cte -> llamada .)
    AND             reduce using rule 83 (var_cte -> llamada .)
    OR              reduce using rule 83 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 83 (var_cte -> llamada .)
    RPAREN          reduce using rule 83 (var_cte -> llamada .)
    RBRACKET        reduce using rule 83 (var_cte -> llamada .)
    COMMA           reduce using rule 83 (var_cte -> llamada .)


state 92

    (84) var_cte_1 -> ID . var_cte_2
    (48) llamada_id -> ID .
    (85) var_cte_2 -> . LBRACKET exp var_cte_3
    (86) var_cte_2 -> . empty
    (142) empty -> .

    LPAREN          reduce using rule 48 (llamada_id -> ID .)
    LBRACKET        shift and go to state 147
    TIMES           reduce using rule 142 (empty -> .)
    DIVIDE          reduce using rule 142 (empty -> .)
    PERCENT         reduce using rule 142 (empty -> .)
    PLUS            reduce using rule 142 (empty -> .)
    MINUS           reduce using rule 142 (empty -> .)
    GREATER         reduce using rule 142 (empty -> .)
    GREATEREQUAL    reduce using rule 142 (empty -> .)
    LESS            reduce using rule 142 (empty -> .)
    LESSEQUAL       reduce using rule 142 (empty -> .)
    DEQUAL          reduce using rule 142 (empty -> .)
    DISTINT         reduce using rule 142 (empty -> .)
    AND             reduce using rule 142 (empty -> .)
    OR              reduce using rule 142 (empty -> .)
    SEMICOLON       reduce using rule 142 (empty -> .)
    RPAREN          reduce using rule 142 (empty -> .)
    RBRACKET        reduce using rule 142 (empty -> .)
    COMMA           reduce using rule 142 (empty -> .)

    var_cte_2                      shift and go to state 146
    empty                          shift and go to state 148

state 93

    (39) vars_aux -> array ID vars3 .

    GLOBAL          reduce using rule 39 (vars_aux -> array ID vars3 .)
    DEF             reduce using rule 39 (vars_aux -> array ID vars3 .)
    MAIN            reduce using rule 39 (vars_aux -> array ID vars3 .)
    ID              reduce using rule 39 (vars_aux -> array ID vars3 .)
    DRAW            reduce using rule 39 (vars_aux -> array ID vars3 .)
    IF              reduce using rule 39 (vars_aux -> array ID vars3 .)
    FOR             reduce using rule 39 (vars_aux -> array ID vars3 .)
    WHILE           reduce using rule 39 (vars_aux -> array ID vars3 .)
    INT             reduce using rule 39 (vars_aux -> array ID vars3 .)
    FLOAT           reduce using rule 39 (vars_aux -> array ID vars3 .)
    BOOLEAN         reduce using rule 39 (vars_aux -> array ID vars3 .)
    ARRAY           reduce using rule 39 (vars_aux -> array ID vars3 .)
    END             reduce using rule 39 (vars_aux -> array ID vars3 .)
    RETURN          reduce using rule 39 (vars_aux -> array ID vars3 .)
    ELSE            reduce using rule 39 (vars_aux -> array ID vars3 .)


state 94

    (45) vars3 -> EQUAL . def_array SEMICOLON
    (54) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 150

    def_array                      shift and go to state 149

state 95

    (46) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 46 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 46 (vars3 -> SEMICOLON .)
    MAIN            reduce using rule 46 (vars3 -> SEMICOLON .)
    ID              reduce using rule 46 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 46 (vars3 -> SEMICOLON .)
    IF              reduce using rule 46 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 46 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 46 (vars3 -> SEMICOLON .)
    INT             reduce using rule 46 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 46 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 46 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 46 (vars3 -> SEMICOLON .)
    END             reduce using rule 46 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 46 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 46 (vars3 -> SEMICOLON .)


state 96

    (40) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 151


state 97

    (20) main -> main_1 bloque END .

    $end            reduce using rule 20 (main -> main_1 bloque END .)


state 98

    (11) bloque -> estatuto bloque .

    END             reduce using rule 11 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 11 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 11 (bloque -> estatuto bloque .)


state 99

    (27) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 27 (estatuto -> llamada SEMICOLON .)


state 100

    (28) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 152


state 101

    (30) asignacion_2 -> asignacion_equal . super_exp
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 153
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 102

    (31) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL super_exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    exp                            shift and go to state 154
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 103

    (92) condicion -> condicion_id LPAREN . super_exp RPAREN bloque condicion_2
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 155
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 104

    (99) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (106) accion_nombre -> . SETPOSITION
    (107) accion_nombre -> . CIRCLE
    (108) accion_nombre -> . RIGHT
    (109) accion_nombre -> . LEFT
    (110) accion_nombre -> . HIDE
    (111) accion_nombre -> . SQUARE
    (112) accion_nombre -> . CLEAR
    (113) accion_nombre -> . SHOW
    (114) accion_nombre -> . BACK
    (115) accion_nombre -> . SPEED
    (116) accion_nombre -> . FORWARD
    (117) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 157
    CIRCLE          shift and go to state 158
    RIGHT           shift and go to state 159
    LEFT            shift and go to state 160
    HIDE            shift and go to state 161
    SQUARE          shift and go to state 162
    CLEAR           shift and go to state 163
    SHOW            shift and go to state 164
    BACK            shift and go to state 165
    SPEED           shift and go to state 166
    FORWARD         shift and go to state 167
    SETCOLOR        shift and go to state 168

    accion_nombre                  shift and go to state 156

state 105

    (47) llamada -> llamada_id LPAREN . llamada_2
    (49) llamada_2 -> . llamada_exp RPAREN
    (50) llamada_2 -> . RPAREN
    (51) llamada_exp -> . super_exp llamada_exp2
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    RPAREN          shift and go to state 171
    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    llamada_id                     shift and go to state 61
    llamada_2                      shift and go to state 169
    llamada_exp                    shift and go to state 170
    super_exp                      shift and go to state 172
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91

state 106

    (118) for -> for_init LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 173


state 107

    (121) while -> while_init LPAREN . super_exp RPAREN bloque while_end
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 174
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 108

    (21) main_1 -> MAIN LPAREN RPAREN .

    ID              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    IF              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FOR             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    INT             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    END             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)


state 109

    (124) funcion -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 124 (funcion -> funcion_1 var_local bloque funcion_2 .)
    MAIN            reduce using rule 124 (funcion -> funcion_1 var_local bloque funcion_2 .)


state 110

    (126) funcion_2 -> RETURN . super_exp SEMICOLON funcion_end
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 175
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 111

    (127) funcion_2 -> funcion_end .

    DEF             reduce using rule 127 (funcion_2 -> funcion_end .)
    MAIN            reduce using rule 127 (funcion_2 -> funcion_end .)


state 112

    (128) funcion_end -> END .

    DEF             reduce using rule 128 (funcion_end -> END .)
    MAIN            reduce using rule 128 (funcion_end -> END .)


state 113

    (129) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 129 (var_local -> LPAREN var_local_2 RPAREN .)


state 114

    (130) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 130 (var_local_2 -> var_local_2_1 var_local_3 .)


state 115

    (133) var_local_3 -> COMMA . var_local_2
    (130) var_local_2 -> . var_local_2_1 var_local_3
    (131) var_local_2 -> . empty
    (132) var_local_2_1 -> . data_type ID
    (142) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 142 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    var_local_2                    shift and go to state 176
    var_local_2_1                  shift and go to state 70
    empty                          shift and go to state 71
    data_type                      shift and go to state 72

state 116

    (134) var_local_3 -> empty .

    RPAREN          reduce using rule 134 (var_local_3 -> empty .)


state 117

    (132) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 132 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 132 (var_local_2_1 -> data_type ID .)


state 118

    (8) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)
    MAIN            reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)


state 119

    (35) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 177


state 120

    (43) vars2 -> asignacion_equal super_exp SEMICOLON .

    GLOBAL          reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DEF             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    MAIN            reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ID              reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DRAW            reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    IF              reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FOR             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    WHILE           reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    INT             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FLOAT           reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    BOOLEAN         reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ARRAY           reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    END             reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    RETURN          reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ELSE            reduce using rule 43 (vars2 -> asignacion_equal super_exp SEMICOLON .)


state 121

    (60) super_exp -> expresion super_exp_2 .

    SEMICOLON       reduce using rule 60 (super_exp -> expresion super_exp_2 .)
    RPAREN          reduce using rule 60 (super_exp -> expresion super_exp_2 .)
    COMMA           reduce using rule 60 (super_exp -> expresion super_exp_2 .)


state 122

    (61) super_exp_2 -> logicop . super_exp
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    super_exp                      shift and go to state 178
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 123

    (62) super_exp_2 -> empty .

    SEMICOLON       reduce using rule 62 (super_exp_2 -> empty .)
    RPAREN          reduce using rule 62 (super_exp_2 -> empty .)
    COMMA           reduce using rule 62 (super_exp_2 -> empty .)


state 124

    (140) logicop -> AND .

    LPAREN          reduce using rule 140 (logicop -> AND .)
    PLUS            reduce using rule 140 (logicop -> AND .)
    MINUS           reduce using rule 140 (logicop -> AND .)
    CTE_I           reduce using rule 140 (logicop -> AND .)
    CTE_F           reduce using rule 140 (logicop -> AND .)
    TRUE            reduce using rule 140 (logicop -> AND .)
    FALSE           reduce using rule 140 (logicop -> AND .)
    ID              reduce using rule 140 (logicop -> AND .)


state 125

    (141) logicop -> OR .

    LPAREN          reduce using rule 141 (logicop -> OR .)
    PLUS            reduce using rule 141 (logicop -> OR .)
    MINUS           reduce using rule 141 (logicop -> OR .)
    CTE_I           reduce using rule 141 (logicop -> OR .)
    CTE_F           reduce using rule 141 (logicop -> OR .)
    TRUE            reduce using rule 141 (logicop -> OR .)
    FALSE           reduce using rule 141 (logicop -> OR .)
    ID              reduce using rule 141 (logicop -> OR .)


state 126

    (63) expresion -> exp expresion_2 .

    AND             reduce using rule 63 (expresion -> exp expresion_2 .)
    OR              reduce using rule 63 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 63 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 63 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 63 (expresion -> exp expresion_2 .)


state 127

    (64) expresion_2 -> relop . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    exp                            shift and go to state 179
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 128

    (65) expresion_2 -> empty .

    AND             reduce using rule 65 (expresion_2 -> empty .)
    OR              reduce using rule 65 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 65 (expresion_2 -> empty .)
    RPAREN          reduce using rule 65 (expresion_2 -> empty .)
    COMMA           reduce using rule 65 (expresion_2 -> empty .)


state 129

    (66) relop -> GREATER .

    LPAREN          reduce using rule 66 (relop -> GREATER .)
    PLUS            reduce using rule 66 (relop -> GREATER .)
    MINUS           reduce using rule 66 (relop -> GREATER .)
    CTE_I           reduce using rule 66 (relop -> GREATER .)
    CTE_F           reduce using rule 66 (relop -> GREATER .)
    TRUE            reduce using rule 66 (relop -> GREATER .)
    FALSE           reduce using rule 66 (relop -> GREATER .)
    ID              reduce using rule 66 (relop -> GREATER .)


state 130

    (67) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 67 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 67 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 67 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 67 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 67 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 67 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 67 (relop -> GREATEREQUAL .)
    ID              reduce using rule 67 (relop -> GREATEREQUAL .)


state 131

    (68) relop -> LESS .

    LPAREN          reduce using rule 68 (relop -> LESS .)
    PLUS            reduce using rule 68 (relop -> LESS .)
    MINUS           reduce using rule 68 (relop -> LESS .)
    CTE_I           reduce using rule 68 (relop -> LESS .)
    CTE_F           reduce using rule 68 (relop -> LESS .)
    TRUE            reduce using rule 68 (relop -> LESS .)
    FALSE           reduce using rule 68 (relop -> LESS .)
    ID              reduce using rule 68 (relop -> LESS .)


state 132

    (69) relop -> LESSEQUAL .

    LPAREN          reduce using rule 69 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 69 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 69 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 69 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 69 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 69 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 69 (relop -> LESSEQUAL .)
    ID              reduce using rule 69 (relop -> LESSEQUAL .)


state 133

    (70) relop -> DEQUAL .

    LPAREN          reduce using rule 70 (relop -> DEQUAL .)
    PLUS            reduce using rule 70 (relop -> DEQUAL .)
    MINUS           reduce using rule 70 (relop -> DEQUAL .)
    CTE_I           reduce using rule 70 (relop -> DEQUAL .)
    CTE_F           reduce using rule 70 (relop -> DEQUAL .)
    TRUE            reduce using rule 70 (relop -> DEQUAL .)
    FALSE           reduce using rule 70 (relop -> DEQUAL .)
    ID              reduce using rule 70 (relop -> DEQUAL .)


state 134

    (71) relop -> DISTINT .

    LPAREN          reduce using rule 71 (relop -> DISTINT .)
    PLUS            reduce using rule 71 (relop -> DISTINT .)
    MINUS           reduce using rule 71 (relop -> DISTINT .)
    CTE_I           reduce using rule 71 (relop -> DISTINT .)
    CTE_F           reduce using rule 71 (relop -> DISTINT .)
    TRUE            reduce using rule 71 (relop -> DISTINT .)
    FALSE           reduce using rule 71 (relop -> DISTINT .)
    ID              reduce using rule 71 (relop -> DISTINT .)


state 135

    (72) exp -> termino exp_2 .

    GREATER         reduce using rule 72 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 72 (exp -> termino exp_2 .)
    LESS            reduce using rule 72 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 72 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 72 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 72 (exp -> termino exp_2 .)
    AND             reduce using rule 72 (exp -> termino exp_2 .)
    OR              reduce using rule 72 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 72 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 72 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 72 (exp -> termino exp_2 .)
    COMMA           reduce using rule 72 (exp -> termino exp_2 .)


state 136

    (73) exp_2 -> addop . exp
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    addop                          shift and go to state 82
    exp                            shift and go to state 180
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 137

    (74) exp_2 -> empty .

    GREATER         reduce using rule 74 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 74 (exp_2 -> empty .)
    LESS            reduce using rule 74 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 74 (exp_2 -> empty .)
    DEQUAL          reduce using rule 74 (exp_2 -> empty .)
    DISTINT         reduce using rule 74 (exp_2 -> empty .)
    AND             reduce using rule 74 (exp_2 -> empty .)
    OR              reduce using rule 74 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 74 (exp_2 -> empty .)
    RPAREN          reduce using rule 74 (exp_2 -> empty .)
    RBRACKET        reduce using rule 74 (exp_2 -> empty .)
    COMMA           reduce using rule 74 (exp_2 -> empty .)


state 138

    (75) termino -> factor termino_2 .

    PLUS            reduce using rule 75 (termino -> factor termino_2 .)
    MINUS           reduce using rule 75 (termino -> factor termino_2 .)
    GREATER         reduce using rule 75 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 75 (termino -> factor termino_2 .)
    LESS            reduce using rule 75 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 75 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 75 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 75 (termino -> factor termino_2 .)
    AND             reduce using rule 75 (termino -> factor termino_2 .)
    OR              reduce using rule 75 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 75 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 75 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 75 (termino -> factor termino_2 .)
    COMMA           reduce using rule 75 (termino -> factor termino_2 .)


state 139

    (76) termino_2 -> timesop . termino
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    termino                        shift and go to state 181
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 140

    (77) termino_2 -> empty .

    PLUS            reduce using rule 77 (termino_2 -> empty .)
    MINUS           reduce using rule 77 (termino_2 -> empty .)
    GREATER         reduce using rule 77 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 77 (termino_2 -> empty .)
    LESS            reduce using rule 77 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 77 (termino_2 -> empty .)
    DEQUAL          reduce using rule 77 (termino_2 -> empty .)
    DISTINT         reduce using rule 77 (termino_2 -> empty .)
    AND             reduce using rule 77 (termino_2 -> empty .)
    OR              reduce using rule 77 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 77 (termino_2 -> empty .)
    RPAREN          reduce using rule 77 (termino_2 -> empty .)
    RBRACKET        reduce using rule 77 (termino_2 -> empty .)
    COMMA           reduce using rule 77 (termino_2 -> empty .)


state 141

    (137) timesop -> TIMES .

    LPAREN          reduce using rule 137 (timesop -> TIMES .)
    PLUS            reduce using rule 137 (timesop -> TIMES .)
    MINUS           reduce using rule 137 (timesop -> TIMES .)
    CTE_I           reduce using rule 137 (timesop -> TIMES .)
    CTE_F           reduce using rule 137 (timesop -> TIMES .)
    TRUE            reduce using rule 137 (timesop -> TIMES .)
    FALSE           reduce using rule 137 (timesop -> TIMES .)
    ID              reduce using rule 137 (timesop -> TIMES .)


state 142

    (138) timesop -> DIVIDE .

    LPAREN          reduce using rule 138 (timesop -> DIVIDE .)
    PLUS            reduce using rule 138 (timesop -> DIVIDE .)
    MINUS           reduce using rule 138 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 138 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 138 (timesop -> DIVIDE .)
    TRUE            reduce using rule 138 (timesop -> DIVIDE .)
    FALSE           reduce using rule 138 (timesop -> DIVIDE .)
    ID              reduce using rule 138 (timesop -> DIVIDE .)


state 143

    (139) timesop -> PERCENT .

    LPAREN          reduce using rule 139 (timesop -> PERCENT .)
    PLUS            reduce using rule 139 (timesop -> PERCENT .)
    MINUS           reduce using rule 139 (timesop -> PERCENT .)
    CTE_I           reduce using rule 139 (timesop -> PERCENT .)
    CTE_F           reduce using rule 139 (timesop -> PERCENT .)
    TRUE            reduce using rule 139 (timesop -> PERCENT .)
    FALSE           reduce using rule 139 (timesop -> PERCENT .)
    ID              reduce using rule 139 (timesop -> PERCENT .)


state 144

    (89) factor -> LPAREN super_exp . RPAREN

    RPAREN          shift and go to state 182


state 145

    (90) factor -> addop var_cte .

    TIMES           reduce using rule 90 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 90 (factor -> addop var_cte .)
    PERCENT         reduce using rule 90 (factor -> addop var_cte .)
    PLUS            reduce using rule 90 (factor -> addop var_cte .)
    MINUS           reduce using rule 90 (factor -> addop var_cte .)
    GREATER         reduce using rule 90 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 90 (factor -> addop var_cte .)
    LESS            reduce using rule 90 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 90 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 90 (factor -> addop var_cte .)
    DISTINT         reduce using rule 90 (factor -> addop var_cte .)
    AND             reduce using rule 90 (factor -> addop var_cte .)
    OR              reduce using rule 90 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 90 (factor -> addop var_cte .)
    RPAREN          reduce using rule 90 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 90 (factor -> addop var_cte .)
    COMMA           reduce using rule 90 (factor -> addop var_cte .)


state 146

    (84) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    AND             reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    OR              reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 84 (var_cte_1 -> ID var_cte_2 .)


state 147

    (85) var_cte_2 -> LBRACKET . exp var_cte_3
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    exp                            shift and go to state 183
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 148

    (86) var_cte_2 -> empty .

    TIMES           reduce using rule 86 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 86 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 86 (var_cte_2 -> empty .)
    PLUS            reduce using rule 86 (var_cte_2 -> empty .)
    MINUS           reduce using rule 86 (var_cte_2 -> empty .)
    GREATER         reduce using rule 86 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 86 (var_cte_2 -> empty .)
    LESS            reduce using rule 86 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 86 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 86 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 86 (var_cte_2 -> empty .)
    AND             reduce using rule 86 (var_cte_2 -> empty .)
    OR              reduce using rule 86 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 86 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 86 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 86 (var_cte_2 -> empty .)
    COMMA           reduce using rule 86 (var_cte_2 -> empty .)


state 149

    (45) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 184


state 150

    (54) def_array -> LBRACKET . def_array_2
    (55) def_array_2 -> . def_array_cte RBRACKET
    (56) def_array_2 -> . RBRACKET
    (57) def_array_cte -> . var_cte def_array_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    RBRACKET        shift and go to state 187
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    def_array_2                    shift and go to state 185
    def_array_cte                  shift and go to state 186
    var_cte                        shift and go to state 188
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 151

    (40) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 189


state 152

    (28) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 153

    (30) asignacion_2 -> asignacion_equal super_exp .

    SEMICOLON       reduce using rule 30 (asignacion_2 -> asignacion_equal super_exp .)


state 154

    (31) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL super_exp
    (33) asignacion_3 -> . RBRACKET
    (34) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 191
    COMMA           shift and go to state 192

    asignacion_3                   shift and go to state 190

state 155

    (92) condicion -> condicion_id LPAREN super_exp . RPAREN bloque condicion_2

    RPAREN          shift and go to state 193


state 156

    (99) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (100) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 195

    accion_params                  shift and go to state 194

state 157

    (106) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 106 (accion_nombre -> SETPOSITION .)


state 158

    (107) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 107 (accion_nombre -> CIRCLE .)


state 159

    (108) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 108 (accion_nombre -> RIGHT .)


state 160

    (109) accion_nombre -> LEFT .

    LPAREN          reduce using rule 109 (accion_nombre -> LEFT .)


state 161

    (110) accion_nombre -> HIDE .

    LPAREN          reduce using rule 110 (accion_nombre -> HIDE .)


state 162

    (111) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 111 (accion_nombre -> SQUARE .)


state 163

    (112) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 112 (accion_nombre -> CLEAR .)


state 164

    (113) accion_nombre -> SHOW .

    LPAREN          reduce using rule 113 (accion_nombre -> SHOW .)


state 165

    (114) accion_nombre -> BACK .

    LPAREN          reduce using rule 114 (accion_nombre -> BACK .)


state 166

    (115) accion_nombre -> SPEED .

    LPAREN          reduce using rule 115 (accion_nombre -> SPEED .)


state 167

    (116) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 116 (accion_nombre -> FORWARD .)


state 168

    (117) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 117 (accion_nombre -> SETCOLOR .)


state 169

    (47) llamada -> llamada_id LPAREN llamada_2 .

    SEMICOLON       reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    TIMES           reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    DIVIDE          reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    PERCENT         reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    PLUS            reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    MINUS           reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATER         reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    LESS            reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    DEQUAL          reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    DISTINT         reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    AND             reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    OR              reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    RPAREN          reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    RBRACKET        reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)
    COMMA           reduce using rule 47 (llamada -> llamada_id LPAREN llamada_2 .)


state 170

    (49) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 196


state 171

    (50) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 50 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 50 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 50 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 50 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 50 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 50 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 50 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 50 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 50 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 50 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 50 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 50 (llamada_2 -> RPAREN .)
    AND             reduce using rule 50 (llamada_2 -> RPAREN .)
    OR              reduce using rule 50 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 50 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 50 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 50 (llamada_2 -> RPAREN .)


state 172

    (51) llamada_exp -> super_exp . llamada_exp2
    (52) llamada_exp2 -> . COMMA llamada_exp
    (53) llamada_exp2 -> . empty
    (142) empty -> .

    COMMA           shift and go to state 198
    RPAREN          reduce using rule 142 (empty -> .)

    llamada_exp2                   shift and go to state 197
    empty                          shift and go to state 199

state 173

    (118) for -> for_init LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 200


state 174

    (121) while -> while_init LPAREN super_exp . RPAREN bloque while_end

    RPAREN          shift and go to state 201


state 175

    (126) funcion_2 -> RETURN super_exp . SEMICOLON funcion_end

    SEMICOLON       shift and go to state 202


state 176

    (133) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 133 (var_local_3 -> COMMA var_local_2 .)


state 177

    (35) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 203


state 178

    (61) super_exp_2 -> logicop super_exp .

    SEMICOLON       reduce using rule 61 (super_exp_2 -> logicop super_exp .)
    RPAREN          reduce using rule 61 (super_exp_2 -> logicop super_exp .)
    COMMA           reduce using rule 61 (super_exp_2 -> logicop super_exp .)


state 179

    (64) expresion_2 -> relop exp .

    AND             reduce using rule 64 (expresion_2 -> relop exp .)
    OR              reduce using rule 64 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 64 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 64 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 64 (expresion_2 -> relop exp .)


state 180

    (73) exp_2 -> addop exp .

    GREATER         reduce using rule 73 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 73 (exp_2 -> addop exp .)
    LESS            reduce using rule 73 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 73 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 73 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 73 (exp_2 -> addop exp .)
    AND             reduce using rule 73 (exp_2 -> addop exp .)
    OR              reduce using rule 73 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 73 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 73 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 73 (exp_2 -> addop exp .)
    COMMA           reduce using rule 73 (exp_2 -> addop exp .)


state 181

    (76) termino_2 -> timesop termino .

    PLUS            reduce using rule 76 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 76 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 76 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 76 (termino_2 -> timesop termino .)
    LESS            reduce using rule 76 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 76 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 76 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 76 (termino_2 -> timesop termino .)
    AND             reduce using rule 76 (termino_2 -> timesop termino .)
    OR              reduce using rule 76 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 76 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 76 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 76 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 76 (termino_2 -> timesop termino .)


state 182

    (89) factor -> LPAREN super_exp RPAREN .

    TIMES           reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    DIVIDE          reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    PERCENT         reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    PLUS            reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    MINUS           reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    GREATER         reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    GREATEREQUAL    reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    LESS            reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    LESSEQUAL       reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    DEQUAL          reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    DISTINT         reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    AND             reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    OR              reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    SEMICOLON       reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    RPAREN          reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    RBRACKET        reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)
    COMMA           reduce using rule 89 (factor -> LPAREN super_exp RPAREN .)


state 183

    (85) var_cte_2 -> LBRACKET exp . var_cte_3
    (87) var_cte_3 -> . RBRACKET
    (88) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 205
    COMMA           shift and go to state 206

    var_cte_3                      shift and go to state 204

state 184

    (45) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    MAIN            reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 45 (vars3 -> EQUAL def_array SEMICOLON .)


state 185

    (54) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 54 (def_array -> LBRACKET def_array_2 .)


state 186

    (55) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 207


state 187

    (56) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 56 (def_array_2 -> RBRACKET .)


state 188

    (57) def_array_cte -> var_cte . def_array_cte_2
    (58) def_array_cte_2 -> . COMMA def_array_cte
    (59) def_array_cte_2 -> . empty
    (142) empty -> .

    COMMA           shift and go to state 209
    RBRACKET        reduce using rule 142 (empty -> .)

    def_array_cte_2                shift and go to state 208
    empty                          shift and go to state 210

state 189

    (40) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (41) array_2 -> . COMMA CTE_I
    (42) array_2 -> . empty
    (142) empty -> .

    COMMA           shift and go to state 211
    GREATER         reduce using rule 142 (empty -> .)

    array_2                        shift and go to state 212
    empty                          shift and go to state 213

state 190

    (31) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL super_exp

    EQUAL           shift and go to state 214


state 191

    (33) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 33 (asignacion_3 -> RBRACKET .)


state 192

    (34) asignacion_3 -> COMMA . exp RBRACKET
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    exp                            shift and go to state 215
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 193

    (92) condicion -> condicion_id LPAREN super_exp RPAREN . bloque condicion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    ELSE            reduce using rule 142 (empty -> .)
    END             reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    condicion_id                   shift and go to state 57
    bloque                         shift and go to state 216
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 194

    (99) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 217


state 195

    (100) accion_params -> LPAREN . accion_params_2
    (101) accion_params_2 -> . accion_params_cte RPAREN
    (102) accion_params_2 -> . RPAREN
    (103) accion_params_cte -> . var_cte accion_params_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    RPAREN          shift and go to state 220
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    accion_params_2                shift and go to state 218
    accion_params_cte              shift and go to state 219
    var_cte                        shift and go to state 221
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 196

    (49) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    AND             reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    OR              reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 49 (llamada_2 -> llamada_exp RPAREN .)


state 197

    (51) llamada_exp -> super_exp llamada_exp2 .

    RPAREN          reduce using rule 51 (llamada_exp -> super_exp llamada_exp2 .)


state 198

    (52) llamada_exp2 -> COMMA . llamada_exp
    (51) llamada_exp -> . super_exp llamada_exp2
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    llamada_exp                    shift and go to state 222
    super_exp                      shift and go to state 172
    expresion                      shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 199

    (53) llamada_exp2 -> empty .

    RPAREN          reduce using rule 53 (llamada_exp2 -> empty .)


state 200

    (118) for -> for_init LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 223


state 201

    (121) while -> while_init LPAREN super_exp RPAREN . bloque while_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    while_init                     shift and go to state 64
    bloque                         shift and go to state 224
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 202

    (126) funcion_2 -> RETURN super_exp SEMICOLON . funcion_end
    (128) funcion_end -> . END

    END             shift and go to state 112

    funcion_end                    shift and go to state 225

state 203

    (35) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 204

    (85) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    AND             reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    OR              reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 85 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 205

    (87) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 87 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 87 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 87 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 87 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 87 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 87 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 87 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 87 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 87 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 87 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 87 (var_cte_3 -> RBRACKET .)
    AND             reduce using rule 87 (var_cte_3 -> RBRACKET .)
    OR              reduce using rule 87 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 87 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 87 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 87 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 87 (var_cte_3 -> RBRACKET .)


state 206

    (88) var_cte_3 -> COMMA . exp RBRACKET
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    exp                            shift and go to state 227
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 207

    (55) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 55 (def_array_2 -> def_array_cte RBRACKET .)


state 208

    (57) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 57 (def_array_cte -> var_cte def_array_cte_2 .)


state 209

    (58) def_array_cte_2 -> COMMA . def_array_cte
    (57) def_array_cte -> . var_cte def_array_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    def_array_cte                  shift and go to state 228
    var_cte                        shift and go to state 188
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 210

    (59) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 59 (def_array_cte_2 -> empty .)


state 211

    (41) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 229


state 212

    (40) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 230


state 213

    (42) array_2 -> empty .

    GREATER         reduce using rule 42 (array_2 -> empty .)


state 214

    (31) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . super_exp
    (60) super_exp -> . expresion super_exp_2
    (63) expresion -> . exp expresion_2
    (72) exp -> . termino exp_2
    (75) termino -> . factor termino_2
    (89) factor -> . LPAREN super_exp RPAREN
    (90) factor -> . addop var_cte
    (91) factor -> . var_cte
    (135) addop -> . PLUS
    (136) addop -> . MINUS
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    exp                            shift and go to state 78
    super_exp                      shift and go to state 231
    expresion                      shift and go to state 77
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    addop                          shift and go to state 82
    var_cte                        shift and go to state 83
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 215

    (34) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 232


state 216

    (92) condicion -> condicion_id LPAREN super_exp RPAREN bloque . condicion_2
    (94) condicion_2 -> . condicion_end
    (95) condicion_2 -> . ELSE bloque condicion_end
    (96) condicion_end -> . END

    ELSE            shift and go to state 235
    END             shift and go to state 236

    condicion_2                    shift and go to state 233
    condicion_end                  shift and go to state 234

state 217

    (99) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 99 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 218

    (100) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 100 (accion_params -> LPAREN accion_params_2 .)


state 219

    (101) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 237


state 220

    (102) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 102 (accion_params_2 -> RPAREN .)


state 221

    (103) accion_params_cte -> var_cte . accion_params_cte_2
    (104) accion_params_cte_2 -> . COMMA accion_params_cte
    (105) accion_params_cte_2 -> . empty
    (142) empty -> .

    COMMA           shift and go to state 239
    RPAREN          reduce using rule 142 (empty -> .)

    accion_params_cte_2            shift and go to state 238
    empty                          shift and go to state 240

state 222

    (52) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 52 (llamada_exp2 -> COMMA llamada_exp .)


state 223

    (118) for -> for_init LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 241


state 224

    (121) while -> while_init LPAREN super_exp RPAREN bloque . while_end
    (123) while_end -> . END

    END             shift and go to state 243

    while_end                      shift and go to state 242

state 225

    (126) funcion_2 -> RETURN super_exp SEMICOLON funcion_end .

    DEF             reduce using rule 126 (funcion_2 -> RETURN super_exp SEMICOLON funcion_end .)
    MAIN            reduce using rule 126 (funcion_2 -> RETURN super_exp SEMICOLON funcion_end .)


state 226

    (35) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    GLOBAL          reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    MAIN            reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 35 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 227

    (88) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 244


state 228

    (58) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 58 (def_array_cte_2 -> COMMA def_array_cte .)


state 229

    (41) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 41 (array_2 -> COMMA CTE_I .)


state 230

    (40) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 40 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 231

    (31) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .

    SEMICOLON       reduce using rule 31 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .)


state 232

    (34) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 34 (asignacion_3 -> COMMA exp RBRACKET .)


state 233

    (92) condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .

    ID              reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    IF              reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    FOR             reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    INT             reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    END             reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 92 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)


state 234

    (94) condicion_2 -> condicion_end .

    ID              reduce using rule 94 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 94 (condicion_2 -> condicion_end .)
    IF              reduce using rule 94 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 94 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 94 (condicion_2 -> condicion_end .)
    INT             reduce using rule 94 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 94 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 94 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 94 (condicion_2 -> condicion_end .)
    END             reduce using rule 94 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 94 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 94 (condicion_2 -> condicion_end .)


state 235

    (95) condicion_2 -> ELSE . bloque condicion_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    bloque                         shift and go to state 245
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    for_init                       shift and go to state 63
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 236

    (96) condicion_end -> END .

    ID              reduce using rule 96 (condicion_end -> END .)
    DRAW            reduce using rule 96 (condicion_end -> END .)
    IF              reduce using rule 96 (condicion_end -> END .)
    FOR             reduce using rule 96 (condicion_end -> END .)
    WHILE           reduce using rule 96 (condicion_end -> END .)
    INT             reduce using rule 96 (condicion_end -> END .)
    FLOAT           reduce using rule 96 (condicion_end -> END .)
    BOOLEAN         reduce using rule 96 (condicion_end -> END .)
    ARRAY           reduce using rule 96 (condicion_end -> END .)
    END             reduce using rule 96 (condicion_end -> END .)
    RETURN          reduce using rule 96 (condicion_end -> END .)
    ELSE            reduce using rule 96 (condicion_end -> END .)


state 237

    (101) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 101 (accion_params_2 -> accion_params_cte RPAREN .)


state 238

    (103) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 103 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 239

    (104) accion_params_cte_2 -> COMMA . accion_params_cte
    (103) accion_params_cte -> . var_cte accion_params_cte_2
    (78) var_cte -> . var_cte_1
    (79) var_cte -> . CTE_I
    (80) var_cte -> . CTE_F
    (81) var_cte -> . TRUE
    (82) var_cte -> . FALSE
    (83) var_cte -> . llamada
    (84) var_cte_1 -> . ID var_cte_2
    (47) llamada -> . llamada_id LPAREN llamada_2
    (48) llamada_id -> . ID

    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    ID              shift and go to state 92

    accion_params_cte              shift and go to state 246
    var_cte                        shift and go to state 221
    var_cte_1                      shift and go to state 86
    llamada                        shift and go to state 91
    llamada_id                     shift and go to state 61

state 240

    (105) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 105 (accion_params_cte_2 -> empty .)


state 241

    (118) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 247


state 242

    (121) while -> while_init LPAREN super_exp RPAREN bloque while_end .

    ID              reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    DRAW            reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    IF              reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    FOR             reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    WHILE           reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    INT             reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    FLOAT           reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    BOOLEAN         reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    ARRAY           reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    END             reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    RETURN          reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    ELSE            reduce using rule 121 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)


state 243

    (123) while_end -> END .

    ID              reduce using rule 123 (while_end -> END .)
    DRAW            reduce using rule 123 (while_end -> END .)
    IF              reduce using rule 123 (while_end -> END .)
    FOR             reduce using rule 123 (while_end -> END .)
    WHILE           reduce using rule 123 (while_end -> END .)
    INT             reduce using rule 123 (while_end -> END .)
    FLOAT           reduce using rule 123 (while_end -> END .)
    BOOLEAN         reduce using rule 123 (while_end -> END .)
    ARRAY           reduce using rule 123 (while_end -> END .)
    END             reduce using rule 123 (while_end -> END .)
    RETURN          reduce using rule 123 (while_end -> END .)
    ELSE            reduce using rule 123 (while_end -> END .)


state 244

    (88) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    AND             reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    OR              reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 88 (var_cte_3 -> COMMA exp RBRACKET .)


state 245

    (95) condicion_2 -> ELSE bloque . condicion_end
    (96) condicion_end -> . END

    END             shift and go to state 236

    condicion_end                  shift and go to state 248

state 246

    (104) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 104 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 247

    (118) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque for_end

    RPAREN          shift and go to state 249


state 248

    (95) condicion_2 -> ELSE bloque condicion_end .

    ID              reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    DRAW            reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    IF              reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    FOR             reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    WHILE           reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    INT             reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    FLOAT           reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    BOOLEAN         reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    ARRAY           reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    END             reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    RETURN          reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)
    ELSE            reduce using rule 95 (condicion_2 -> ELSE bloque condicion_end .)


state 249

    (118) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque for_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (142) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (92) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (97) ciclo -> . for
    (98) ciclo -> . while
    (99) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (35) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (36) vars -> . vars_id vars2
    (37) vars -> . vars_aux
    (47) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (93) condicion_id -> . IF
    (118) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (121) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (38) vars_id -> . data_type ID
    (39) vars_aux -> . array ID vars3
    (48) llamada_id -> . ID
    (119) for_init -> . FOR
    (122) while_init -> . WHILE
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (40) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 142 (empty -> .)
    ID              shift and go to state 60
    DRAW            shift and go to state 15
    IF              shift and go to state 62
    FOR             shift and go to state 65
    WHILE           shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22
    ARRAY           shift and go to state 23

    for_init                       shift and go to state 63
    bloque                         shift and go to state 250
    estatuto                       shift and go to state 48
    empty                          shift and go to state 49
    asignacion                     shift and go to state 50
    condicion                      shift and go to state 51
    ciclo                          shift and go to state 52
    accion                         shift and go to state 53
    vars                           shift and go to state 54
    llamada                        shift and go to state 55
    asignacion_id                  shift and go to state 56
    condicion_id                   shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    vars_id                        shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 61
    while_init                     shift and go to state 64
    data_type                      shift and go to state 18
    array                          shift and go to state 19

state 250

    (118) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . for_end
    (120) for_end -> . END

    END             shift and go to state 252

    for_end                        shift and go to state 251

state 251

    (118) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .

    ID              reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    DRAW            reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    IF              reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FOR             reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    WHILE           reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    INT             reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FLOAT           reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    BOOLEAN         reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ARRAY           reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    END             reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    RETURN          reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ELSE            reduce using rule 118 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)


state 252

    (120) for_end -> END .

    ID              reduce using rule 120 (for_end -> END .)
    DRAW            reduce using rule 120 (for_end -> END .)
    IF              reduce using rule 120 (for_end -> END .)
    FOR             reduce using rule 120 (for_end -> END .)
    WHILE           reduce using rule 120 (for_end -> END .)
    INT             reduce using rule 120 (for_end -> END .)
    FLOAT           reduce using rule 120 (for_end -> END .)
    BOOLEAN         reduce using rule 120 (for_end -> END .)
    ARRAY           reduce using rule 120 (for_end -> END .)
    END             reduce using rule 120 (for_end -> END .)
    RETURN          reduce using rule 120 (for_end -> END .)
    ELSE            reduce using rule 120 (for_end -> END .)

