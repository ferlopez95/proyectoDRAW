Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> init globales funciones programa_end
Rule 2     programa -> init funciones programa_end
Rule 3     init -> empty
Rule 4     programa_end -> empty
Rule 5     funciones -> funciones_2 main
Rule 6     funciones_2 -> funcion funciones_2
Rule 7     funciones_2 -> empty
Rule 8     globales -> global_1 vars globales_2
Rule 9     globales_2 -> global_1 vars globales_2
Rule 10    globales_2 -> empty
Rule 11    global_1 -> GLOBAL
Rule 12    bloque -> estatuto bloque
Rule 13    bloque -> empty
Rule 14    data_type -> INT
Rule 15    data_type -> FLOAT
Rule 16    data_type -> BOOLEAN
Rule 17    data_type_func -> INT
Rule 18    data_type_func -> FLOAT
Rule 19    data_type_func -> BOOLEAN
Rule 20    main -> main_1 bloque END
Rule 21    main_1 -> MAIN LPAREN RPAREN
Rule 22    estatuto -> asignacion
Rule 23    estatuto -> condicion
Rule 24    estatuto -> ciclo
Rule 25    estatuto -> accion
Rule 26    estatuto -> vars
Rule 27    estatuto -> llamada SEMICOLON
Rule 28    estatuto -> print
Rule 29    print -> PRINT LPAREN super_exp RPAREN SEMICOLON
Rule 30    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 31    asignacion_id -> ID asignacion_array
Rule 32    asignacion_2 -> asignacion_equal super_exp
Rule 33    asignacion_array -> LBRACKET super_exp asignacion_3
Rule 34    asignacion_array -> empty
Rule 35    asignacion_equal -> EQUAL
Rule 36    asignacion_3 -> RBRACKET
Rule 37    asignacion_3 -> COMMA super_exp RBRACKET
Rule 38    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 39    vars -> vars_id vars2
Rule 40    vars -> vars_aux
Rule 41    vars_id -> data_type ID
Rule 42    vars_aux -> array vars3
Rule 43    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID
Rule 44    array_2 -> COMMA CTE_I
Rule 45    array_2 -> empty
Rule 46    vars2 -> asignacion_equal super_exp SEMICOLON
Rule 47    vars2 -> SEMICOLON
Rule 48    vars3 -> EQUAL def_array SEMICOLON
Rule 49    vars3 -> SEMICOLON
Rule 50    llamada -> llamada_id llamada_2
Rule 51    llamada_id -> ID LPAREN
Rule 52    llamada_2 -> llamada_exp llamada_rparen
Rule 53    llamada_2 -> llamada_rparen
Rule 54    llamada_rparen -> RPAREN
Rule 55    llamada_exp -> llamada_super_exp llamada_exp2
Rule 56    llamada_super_exp -> super_exp
Rule 57    llamada_exp2 -> COMMA llamada_exp
Rule 58    llamada_exp2 -> empty
Rule 59    def_array -> LBRACKET def_array_2
Rule 60    def_array_2 -> def_array_cte RBRACKET
Rule 61    def_array_2 -> RBRACKET
Rule 62    def_array_cte -> super_exp def_array_cte_2
Rule 63    def_array_cte_2 -> COMMA def_array_cte
Rule 64    def_array_cte_2 -> empty
Rule 65    super_exp -> expresion super_exp_2
Rule 66    super_exp_2 -> logicop super_exp
Rule 67    super_exp_2 -> empty
Rule 68    expresion -> exp expresion_2
Rule 69    expresion_2 -> relop exp
Rule 70    expresion_2 -> empty
Rule 71    relop -> GREATER
Rule 72    relop -> GREATEREQUAL
Rule 73    relop -> LESS
Rule 74    relop -> LESSEQUAL
Rule 75    relop -> DEQUAL
Rule 76    relop -> DISTINT
Rule 77    exp -> termino exp_2
Rule 78    exp_2 -> addop exp
Rule 79    exp_2 -> empty
Rule 80    termino -> factor termino_2
Rule 81    termino_2 -> timesop termino
Rule 82    termino_2 -> empty
Rule 83    var_cte -> var_cte_1
Rule 84    var_cte -> var_cte_i
Rule 85    var_cte -> var_cte_f
Rule 86    var_cte -> var_cte_b
Rule 87    var_cte -> llamada
Rule 88    var_cte_i -> CTE_I
Rule 89    var_cte_f -> CTE_F
Rule 90    var_cte_b -> TRUE
Rule 91    var_cte_b -> FALSE
Rule 92    var_cte_1 -> ID var_cte_2
Rule 93    var_cte_2 -> LBRACKET super_exp var_cte_3
Rule 94    var_cte_2 -> empty
Rule 95    var_cte_3 -> RBRACKET
Rule 96    var_cte_3 -> COMMA super_exp RBRACKET
Rule 97    factor -> lparen_factor super_exp rparen_factor
Rule 98    factor -> addop var_cte
Rule 99    factor -> var_cte
Rule 100   lparen_factor -> LPAREN
Rule 101   rparen_factor -> RPAREN
Rule 102   condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
Rule 103   rparen_condicion -> RPAREN
Rule 104   condicion_id -> IF
Rule 105   condicion_2 -> condicion_end
Rule 106   condicion_2 -> condicion_else bloque condicion_end
Rule 107   condicion_else -> ELSE
Rule 108   condicion_end -> END
Rule 109   ciclo -> for
Rule 110   ciclo -> while
Rule 111   accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 112   accion_params -> LPAREN accion_params_2
Rule 113   accion_params_2 -> accion_params_cte RPAREN
Rule 114   accion_params_2 -> RPAREN
Rule 115   accion_params_cte -> var_cte accion_params_cte_2
Rule 116   accion_params_cte_2 -> COMMA accion_params_cte
Rule 117   accion_params_cte_2 -> empty
Rule 118   accion_nombre -> SETPOSITION
Rule 119   accion_nombre -> CIRCLE
Rule 120   accion_nombre -> RIGHT
Rule 121   accion_nombre -> LEFT
Rule 122   accion_nombre -> HIDE
Rule 123   accion_nombre -> SQUARE
Rule 124   accion_nombre -> CLEAR
Rule 125   accion_nombre -> SHOW
Rule 126   accion_nombre -> BACK
Rule 127   accion_nombre -> SPEED
Rule 128   accion_nombre -> FORWARD
Rule 129   accion_nombre -> SETCOLOR
Rule 130   for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
Rule 131   for_exp -> exp
Rule 132   for_exp2 -> exp
Rule 133   for_rparen -> RPAREN
Rule 134   for_init -> FOR
Rule 135   for_end -> END
Rule 136   while -> while_init LPAREN super_exp rparen_while bloque while_end
Rule 137   while_init -> WHILE
Rule 138   rparen_while -> RPAREN
Rule 139   while_end -> END
Rule 140   funcion -> DEF funcion_aux
Rule 141   funcion_aux -> funcion_1 var_local bloque funcion_2
Rule 142   funcion_aux -> funcion_void var_local bloque funcion_end
Rule 143   funcion_void -> VOID ID
Rule 144   funcion_1 -> data_type_func ID
Rule 145   funcion_2 -> RETURN super_exp SEMICOLON END
Rule 146   funcion_end -> END
Rule 147   var_local -> LPAREN var_local_2 RPAREN
Rule 148   var_local_2 -> var_local_2_1 var_local_3
Rule 149   var_local_2 -> empty
Rule 150   var_local_2_1 -> data_type ID
Rule 151   var_local_3 -> COMMA var_local_2
Rule 152   var_local_3 -> empty
Rule 153   addop -> PLUS
Rule 154   addop -> MINUS
Rule 155   timesop -> TIMES
Rule 156   timesop -> DIVIDE
Rule 157   timesop -> PERCENT
Rule 158   logicop -> AND
Rule 159   logicop -> OR
Rule 160   empty -> <empty>

Terminals, with rules where they appear

AND                  : 158
ARRAY                : 43
BACK                 : 126
BOOLEAN              : 16 19
CIRCLE               : 119
CLEAR                : 124
COMMA                : 37 43 44 57 63 96 116 130 130 151
CTE_F                : 89
CTE_I                : 43 44 88
DEF                  : 140
DEQUAL               : 75
DISTINT              : 76
DIVIDE               : 156
DRAW                 : 38
ELSE                 : 107
END                  : 20 108 135 139 145 146
EQUAL                : 35 38 48
FALSE                : 91
FLOAT                : 15 18
FOR                  : 134
FORWARD              : 128
GLOBAL               : 11
GREATER              : 43 71
GREATEREQUAL         : 72
HIDE                 : 122
ID                   : 31 38 41 43 51 92 111 143 144 150
IF                   : 104
INT                  : 14 17
LBRACKET             : 33 59 93
LEFT                 : 121
LESS                 : 43 73
LESSEQUAL            : 74
LPAREN               : 21 29 38 51 100 102 112 130 136 147
MAIN                 : 21
MINUS                : 154
NEWDRAW              : 38
OR                   : 159
PERCENT              : 157
PLUS                 : 153
POINT                : 111
PRINT                : 29
RBRACKET             : 36 37 60 61 95 96
RETURN               : 145
RIGHT                : 120
RPAREN               : 21 29 38 54 101 103 113 114 133 138 147
SEMICOLON            : 27 29 30 38 46 47 48 49 111 145
SETCOLOR             : 129
SETPOSITION          : 118
SHOW                 : 125
SPEED                : 127
SQUARE               : 123
TIMES                : 155
TRUE                 : 90
VOID                 : 143
WHILE                : 137
error                : 

Nonterminals, with rules where they appear

accion               : 25
accion_nombre        : 111
accion_params        : 111
accion_params_2      : 112
accion_params_cte    : 113 116
accion_params_cte_2  : 115
addop                : 78 98
array                : 42
array_2              : 43
asignacion           : 22
asignacion_2         : 30
asignacion_3         : 33
asignacion_array     : 31
asignacion_equal     : 32 46
asignacion_id        : 30
bloque               : 12 20 102 106 130 136 141 142
ciclo                : 24
condicion            : 23
condicion_2          : 102
condicion_else       : 106
condicion_end        : 105 106
condicion_id         : 102
data_type            : 41 43 150
data_type_func       : 144
def_array            : 48
def_array_2          : 59
def_array_cte        : 60 63
def_array_cte_2      : 62
empty                : 3 4 7 10 13 34 45 58 64 67 70 79 82 94 117 149 152
estatuto             : 12
exp                  : 68 69 78 131 132
exp_2                : 77
expresion            : 65
expresion_2          : 68
factor               : 80
for                  : 109
for_end              : 130
for_exp              : 130 130
for_exp2             : 130
for_init             : 130
for_rparen           : 130
funcion              : 6
funcion_1            : 141
funcion_2            : 141
funcion_aux          : 140
funcion_end          : 142
funcion_void         : 142
funciones            : 1 2
funciones_2          : 5 6
global_1             : 8 9
globales             : 1
globales_2           : 8 9
init                 : 1 2
llamada              : 27 87
llamada_2            : 50
llamada_exp          : 52 57
llamada_exp2         : 55
llamada_id           : 50
llamada_rparen       : 52 53
llamada_super_exp    : 55
logicop              : 66
lparen_factor        : 97
main                 : 5
main_1               : 20
print                : 28
programa             : 0
programa_end         : 1 2
relop                : 69
rparen_condicion     : 102
rparen_factor        : 97
rparen_while         : 136
super_exp            : 29 32 33 37 46 56 62 66 93 96 97 102 136 145
super_exp_2          : 65
termino              : 77 81
termino_2            : 80
timesop              : 81
var_cte              : 98 99 115
var_cte_1            : 83
var_cte_2            : 92
var_cte_3            : 93
var_cte_b            : 86
var_cte_f            : 85
var_cte_i            : 84
var_local            : 141 142
var_local_2          : 147 151
var_local_2_1        : 148
var_local_3          : 148
vars                 : 8 9 26
vars2                : 39
vars3                : 42
vars_aux             : 40
vars_id              : 39
while                : 110
while_end            : 136
while_init           : 136

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . init globales funciones programa_end
    (2) programa -> . init funciones programa_end
    (3) init -> . empty
    (160) empty -> .

    GLOBAL          reduce using rule 160 (empty -> .)
    DEF             reduce using rule 160 (empty -> .)
    MAIN            reduce using rule 160 (empty -> .)

    programa                       shift and go to state 1
    init                           shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> programa .



state 2

    (1) programa -> init . globales funciones programa_end
    (2) programa -> init . funciones programa_end
    (8) globales -> . global_1 vars globales_2
    (5) funciones -> . funciones_2 main
    (11) global_1 -> . GLOBAL
    (6) funciones_2 -> . funcion funciones_2
    (7) funciones_2 -> . empty
    (140) funcion -> . DEF funcion_aux
    (160) empty -> .

    GLOBAL          shift and go to state 8
    DEF             shift and go to state 11
    MAIN            reduce using rule 160 (empty -> .)

    globales                       shift and go to state 4
    funciones                      shift and go to state 5
    global_1                       shift and go to state 6
    funciones_2                    shift and go to state 7
    funcion                        shift and go to state 9
    empty                          shift and go to state 10

state 3

    (3) init -> empty .

    GLOBAL          reduce using rule 3 (init -> empty .)
    DEF             reduce using rule 3 (init -> empty .)
    MAIN            reduce using rule 3 (init -> empty .)


state 4

    (1) programa -> init globales . funciones programa_end
    (5) funciones -> . funciones_2 main
    (6) funciones_2 -> . funcion funciones_2
    (7) funciones_2 -> . empty
    (140) funcion -> . DEF funcion_aux
    (160) empty -> .

    DEF             shift and go to state 11
    MAIN            reduce using rule 160 (empty -> .)

    funciones                      shift and go to state 12
    funciones_2                    shift and go to state 7
    funcion                        shift and go to state 9
    empty                          shift and go to state 10

state 5

    (2) programa -> init funciones . programa_end
    (4) programa_end -> . empty
    (160) empty -> .

    $end            reduce using rule 160 (empty -> .)

    programa_end                   shift and go to state 13
    empty                          shift and go to state 14

state 6

    (8) globales -> global_1 . vars globales_2
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    DRAW            shift and go to state 16
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    vars                           shift and go to state 15
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 7

    (5) funciones -> funciones_2 . main
    (20) main -> . main_1 bloque END
    (21) main_1 -> . MAIN LPAREN RPAREN

    MAIN            shift and go to state 27

    main                           shift and go to state 25
    main_1                         shift and go to state 26

state 8

    (11) global_1 -> GLOBAL .

    DRAW            reduce using rule 11 (global_1 -> GLOBAL .)
    INT             reduce using rule 11 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 11 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 11 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 11 (global_1 -> GLOBAL .)


state 9

    (6) funciones_2 -> funcion . funciones_2
    (6) funciones_2 -> . funcion funciones_2
    (7) funciones_2 -> . empty
    (140) funcion -> . DEF funcion_aux
    (160) empty -> .

    DEF             shift and go to state 11
    MAIN            reduce using rule 160 (empty -> .)

    funcion                        shift and go to state 9
    funciones_2                    shift and go to state 28
    empty                          shift and go to state 10

state 10

    (7) funciones_2 -> empty .

    MAIN            reduce using rule 7 (funciones_2 -> empty .)


state 11

    (140) funcion -> DEF . funcion_aux
    (141) funcion_aux -> . funcion_1 var_local bloque funcion_2
    (142) funcion_aux -> . funcion_void var_local bloque funcion_end
    (144) funcion_1 -> . data_type_func ID
    (143) funcion_void -> . VOID ID
    (17) data_type_func -> . INT
    (18) data_type_func -> . FLOAT
    (19) data_type_func -> . BOOLEAN

    VOID            shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    funcion_aux                    shift and go to state 29
    funcion_1                      shift and go to state 30
    funcion_void                   shift and go to state 31
    data_type_func                 shift and go to state 32

state 12

    (1) programa -> init globales funciones . programa_end
    (4) programa_end -> . empty
    (160) empty -> .

    $end            reduce using rule 160 (empty -> .)

    programa_end                   shift and go to state 37
    empty                          shift and go to state 14

state 13

    (2) programa -> init funciones programa_end .

    $end            reduce using rule 2 (programa -> init funciones programa_end .)


state 14

    (4) programa_end -> empty .

    $end            reduce using rule 4 (programa_end -> empty .)


state 15

    (8) globales -> global_1 vars . globales_2
    (9) globales_2 -> . global_1 vars globales_2
    (10) globales_2 -> . empty
    (11) global_1 -> . GLOBAL
    (160) empty -> .

    GLOBAL          shift and go to state 8
    DEF             reduce using rule 160 (empty -> .)
    MAIN            reduce using rule 160 (empty -> .)

    global_1                       shift and go to state 38
    globales_2                     shift and go to state 39
    empty                          shift and go to state 40

state 16

    (38) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 41


state 17

    (39) vars -> vars_id . vars2
    (46) vars2 -> . asignacion_equal super_exp SEMICOLON
    (47) vars2 -> . SEMICOLON
    (35) asignacion_equal -> . EQUAL

    SEMICOLON       shift and go to state 44
    EQUAL           shift and go to state 45

    vars2                          shift and go to state 42
    asignacion_equal               shift and go to state 43

state 18

    (40) vars -> vars_aux .

    GLOBAL          reduce using rule 40 (vars -> vars_aux .)
    DEF             reduce using rule 40 (vars -> vars_aux .)
    MAIN            reduce using rule 40 (vars -> vars_aux .)
    ID              reduce using rule 40 (vars -> vars_aux .)
    DRAW            reduce using rule 40 (vars -> vars_aux .)
    PRINT           reduce using rule 40 (vars -> vars_aux .)
    IF              reduce using rule 40 (vars -> vars_aux .)
    FOR             reduce using rule 40 (vars -> vars_aux .)
    WHILE           reduce using rule 40 (vars -> vars_aux .)
    INT             reduce using rule 40 (vars -> vars_aux .)
    FLOAT           reduce using rule 40 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 40 (vars -> vars_aux .)
    ARRAY           reduce using rule 40 (vars -> vars_aux .)
    END             reduce using rule 40 (vars -> vars_aux .)
    RETURN          reduce using rule 40 (vars -> vars_aux .)
    ELSE            reduce using rule 40 (vars -> vars_aux .)


state 19

    (41) vars_id -> data_type . ID

    ID              shift and go to state 46


state 20

    (42) vars_aux -> array . vars3
    (48) vars3 -> . EQUAL def_array SEMICOLON
    (49) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 48
    SEMICOLON       shift and go to state 49

    vars3                          shift and go to state 47

state 21

    (14) data_type -> INT .

    ID              reduce using rule 14 (data_type -> INT .)
    COMMA           reduce using rule 14 (data_type -> INT .)


state 22

    (15) data_type -> FLOAT .

    ID              reduce using rule 15 (data_type -> FLOAT .)
    COMMA           reduce using rule 15 (data_type -> FLOAT .)


state 23

    (16) data_type -> BOOLEAN .

    ID              reduce using rule 16 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 16 (data_type -> BOOLEAN .)


state 24

    (43) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER ID

    LESS            shift and go to state 50


state 25

    (5) funciones -> funciones_2 main .

    $end            reduce using rule 5 (funciones -> funciones_2 main .)


state 26

    (20) main -> main_1 . bloque END
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    bloque                         shift and go to state 51
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 27

    (21) main_1 -> MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 73


state 28

    (6) funciones_2 -> funcion funciones_2 .

    MAIN            reduce using rule 6 (funciones_2 -> funcion funciones_2 .)


state 29

    (140) funcion -> DEF funcion_aux .

    DEF             reduce using rule 140 (funcion -> DEF funcion_aux .)
    MAIN            reduce using rule 140 (funcion -> DEF funcion_aux .)


state 30

    (141) funcion_aux -> funcion_1 . var_local bloque funcion_2
    (147) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 75

    var_local                      shift and go to state 74

state 31

    (142) funcion_aux -> funcion_void . var_local bloque funcion_end
    (147) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 75

    var_local                      shift and go to state 76

state 32

    (144) funcion_1 -> data_type_func . ID

    ID              shift and go to state 77


state 33

    (143) funcion_void -> VOID . ID

    ID              shift and go to state 78


state 34

    (17) data_type_func -> INT .

    ID              reduce using rule 17 (data_type_func -> INT .)


state 35

    (18) data_type_func -> FLOAT .

    ID              reduce using rule 18 (data_type_func -> FLOAT .)


state 36

    (19) data_type_func -> BOOLEAN .

    ID              reduce using rule 19 (data_type_func -> BOOLEAN .)


state 37

    (1) programa -> init globales funciones programa_end .

    $end            reduce using rule 1 (programa -> init globales funciones programa_end .)


state 38

    (9) globales_2 -> global_1 . vars globales_2
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    DRAW            shift and go to state 16
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    vars                           shift and go to state 79
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 39

    (8) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 8 (globales -> global_1 vars globales_2 .)
    MAIN            reduce using rule 8 (globales -> global_1 vars globales_2 .)


state 40

    (10) globales_2 -> empty .

    DEF             reduce using rule 10 (globales_2 -> empty .)
    MAIN            reduce using rule 10 (globales_2 -> empty .)


state 41

    (38) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 80


state 42

    (39) vars -> vars_id vars2 .

    GLOBAL          reduce using rule 39 (vars -> vars_id vars2 .)
    DEF             reduce using rule 39 (vars -> vars_id vars2 .)
    MAIN            reduce using rule 39 (vars -> vars_id vars2 .)
    ID              reduce using rule 39 (vars -> vars_id vars2 .)
    DRAW            reduce using rule 39 (vars -> vars_id vars2 .)
    PRINT           reduce using rule 39 (vars -> vars_id vars2 .)
    IF              reduce using rule 39 (vars -> vars_id vars2 .)
    FOR             reduce using rule 39 (vars -> vars_id vars2 .)
    WHILE           reduce using rule 39 (vars -> vars_id vars2 .)
    INT             reduce using rule 39 (vars -> vars_id vars2 .)
    FLOAT           reduce using rule 39 (vars -> vars_id vars2 .)
    BOOLEAN         reduce using rule 39 (vars -> vars_id vars2 .)
    ARRAY           reduce using rule 39 (vars -> vars_id vars2 .)
    END             reduce using rule 39 (vars -> vars_id vars2 .)
    RETURN          reduce using rule 39 (vars -> vars_id vars2 .)
    ELSE            reduce using rule 39 (vars -> vars_id vars2 .)


state 43

    (46) vars2 -> asignacion_equal . super_exp SEMICOLON
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 81
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 44

    (47) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 47 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 47 (vars2 -> SEMICOLON .)
    MAIN            reduce using rule 47 (vars2 -> SEMICOLON .)
    ID              reduce using rule 47 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 47 (vars2 -> SEMICOLON .)
    PRINT           reduce using rule 47 (vars2 -> SEMICOLON .)
    IF              reduce using rule 47 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 47 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 47 (vars2 -> SEMICOLON .)
    INT             reduce using rule 47 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 47 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 47 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 47 (vars2 -> SEMICOLON .)
    END             reduce using rule 47 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 47 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 47 (vars2 -> SEMICOLON .)


state 45

    (35) asignacion_equal -> EQUAL .

    LPAREN          reduce using rule 35 (asignacion_equal -> EQUAL .)
    PLUS            reduce using rule 35 (asignacion_equal -> EQUAL .)
    MINUS           reduce using rule 35 (asignacion_equal -> EQUAL .)
    ID              reduce using rule 35 (asignacion_equal -> EQUAL .)
    CTE_I           reduce using rule 35 (asignacion_equal -> EQUAL .)
    CTE_F           reduce using rule 35 (asignacion_equal -> EQUAL .)
    TRUE            reduce using rule 35 (asignacion_equal -> EQUAL .)
    FALSE           reduce using rule 35 (asignacion_equal -> EQUAL .)


state 46

    (41) vars_id -> data_type ID .

    SEMICOLON       reduce using rule 41 (vars_id -> data_type ID .)
    EQUAL           reduce using rule 41 (vars_id -> data_type ID .)


state 47

    (42) vars_aux -> array vars3 .

    GLOBAL          reduce using rule 42 (vars_aux -> array vars3 .)
    DEF             reduce using rule 42 (vars_aux -> array vars3 .)
    MAIN            reduce using rule 42 (vars_aux -> array vars3 .)
    ID              reduce using rule 42 (vars_aux -> array vars3 .)
    DRAW            reduce using rule 42 (vars_aux -> array vars3 .)
    PRINT           reduce using rule 42 (vars_aux -> array vars3 .)
    IF              reduce using rule 42 (vars_aux -> array vars3 .)
    FOR             reduce using rule 42 (vars_aux -> array vars3 .)
    WHILE           reduce using rule 42 (vars_aux -> array vars3 .)
    INT             reduce using rule 42 (vars_aux -> array vars3 .)
    FLOAT           reduce using rule 42 (vars_aux -> array vars3 .)
    BOOLEAN         reduce using rule 42 (vars_aux -> array vars3 .)
    ARRAY           reduce using rule 42 (vars_aux -> array vars3 .)
    END             reduce using rule 42 (vars_aux -> array vars3 .)
    RETURN          reduce using rule 42 (vars_aux -> array vars3 .)
    ELSE            reduce using rule 42 (vars_aux -> array vars3 .)


state 48

    (48) vars3 -> EQUAL . def_array SEMICOLON
    (59) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 103

    def_array                      shift and go to state 102

state 49

    (49) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 49 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 49 (vars3 -> SEMICOLON .)
    MAIN            reduce using rule 49 (vars3 -> SEMICOLON .)
    ID              reduce using rule 49 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 49 (vars3 -> SEMICOLON .)
    PRINT           reduce using rule 49 (vars3 -> SEMICOLON .)
    IF              reduce using rule 49 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 49 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 49 (vars3 -> SEMICOLON .)
    INT             reduce using rule 49 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 49 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 49 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 49 (vars3 -> SEMICOLON .)
    END             reduce using rule 49 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 49 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 49 (vars3 -> SEMICOLON .)


state 50

    (43) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER ID
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23

    data_type                      shift and go to state 104

state 51

    (20) main -> main_1 bloque . END

    END             shift and go to state 105


state 52

    (12) bloque -> estatuto . bloque
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    RETURN          reduce using rule 160 (empty -> .)
    ELSE            reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    estatuto                       shift and go to state 52
    bloque                         shift and go to state 106
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 53

    (13) bloque -> empty .

    END             reduce using rule 13 (bloque -> empty .)
    RETURN          reduce using rule 13 (bloque -> empty .)
    ELSE            reduce using rule 13 (bloque -> empty .)


state 54

    (22) estatuto -> asignacion .

    ID              reduce using rule 22 (estatuto -> asignacion .)
    DRAW            reduce using rule 22 (estatuto -> asignacion .)
    PRINT           reduce using rule 22 (estatuto -> asignacion .)
    IF              reduce using rule 22 (estatuto -> asignacion .)
    FOR             reduce using rule 22 (estatuto -> asignacion .)
    WHILE           reduce using rule 22 (estatuto -> asignacion .)
    INT             reduce using rule 22 (estatuto -> asignacion .)
    FLOAT           reduce using rule 22 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 22 (estatuto -> asignacion .)
    ARRAY           reduce using rule 22 (estatuto -> asignacion .)
    END             reduce using rule 22 (estatuto -> asignacion .)
    RETURN          reduce using rule 22 (estatuto -> asignacion .)
    ELSE            reduce using rule 22 (estatuto -> asignacion .)


state 55

    (23) estatuto -> condicion .

    ID              reduce using rule 23 (estatuto -> condicion .)
    DRAW            reduce using rule 23 (estatuto -> condicion .)
    PRINT           reduce using rule 23 (estatuto -> condicion .)
    IF              reduce using rule 23 (estatuto -> condicion .)
    FOR             reduce using rule 23 (estatuto -> condicion .)
    WHILE           reduce using rule 23 (estatuto -> condicion .)
    INT             reduce using rule 23 (estatuto -> condicion .)
    FLOAT           reduce using rule 23 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 23 (estatuto -> condicion .)
    ARRAY           reduce using rule 23 (estatuto -> condicion .)
    END             reduce using rule 23 (estatuto -> condicion .)
    RETURN          reduce using rule 23 (estatuto -> condicion .)
    ELSE            reduce using rule 23 (estatuto -> condicion .)


state 56

    (24) estatuto -> ciclo .

    ID              reduce using rule 24 (estatuto -> ciclo .)
    DRAW            reduce using rule 24 (estatuto -> ciclo .)
    PRINT           reduce using rule 24 (estatuto -> ciclo .)
    IF              reduce using rule 24 (estatuto -> ciclo .)
    FOR             reduce using rule 24 (estatuto -> ciclo .)
    WHILE           reduce using rule 24 (estatuto -> ciclo .)
    INT             reduce using rule 24 (estatuto -> ciclo .)
    FLOAT           reduce using rule 24 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 24 (estatuto -> ciclo .)
    ARRAY           reduce using rule 24 (estatuto -> ciclo .)
    END             reduce using rule 24 (estatuto -> ciclo .)
    RETURN          reduce using rule 24 (estatuto -> ciclo .)
    ELSE            reduce using rule 24 (estatuto -> ciclo .)


state 57

    (25) estatuto -> accion .

    ID              reduce using rule 25 (estatuto -> accion .)
    DRAW            reduce using rule 25 (estatuto -> accion .)
    PRINT           reduce using rule 25 (estatuto -> accion .)
    IF              reduce using rule 25 (estatuto -> accion .)
    FOR             reduce using rule 25 (estatuto -> accion .)
    WHILE           reduce using rule 25 (estatuto -> accion .)
    INT             reduce using rule 25 (estatuto -> accion .)
    FLOAT           reduce using rule 25 (estatuto -> accion .)
    BOOLEAN         reduce using rule 25 (estatuto -> accion .)
    ARRAY           reduce using rule 25 (estatuto -> accion .)
    END             reduce using rule 25 (estatuto -> accion .)
    RETURN          reduce using rule 25 (estatuto -> accion .)
    ELSE            reduce using rule 25 (estatuto -> accion .)


state 58

    (26) estatuto -> vars .

    ID              reduce using rule 26 (estatuto -> vars .)
    DRAW            reduce using rule 26 (estatuto -> vars .)
    PRINT           reduce using rule 26 (estatuto -> vars .)
    IF              reduce using rule 26 (estatuto -> vars .)
    FOR             reduce using rule 26 (estatuto -> vars .)
    WHILE           reduce using rule 26 (estatuto -> vars .)
    INT             reduce using rule 26 (estatuto -> vars .)
    FLOAT           reduce using rule 26 (estatuto -> vars .)
    BOOLEAN         reduce using rule 26 (estatuto -> vars .)
    ARRAY           reduce using rule 26 (estatuto -> vars .)
    END             reduce using rule 26 (estatuto -> vars .)
    RETURN          reduce using rule 26 (estatuto -> vars .)
    ELSE            reduce using rule 26 (estatuto -> vars .)


state 59

    (27) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 107


state 60

    (28) estatuto -> print .

    ID              reduce using rule 28 (estatuto -> print .)
    DRAW            reduce using rule 28 (estatuto -> print .)
    PRINT           reduce using rule 28 (estatuto -> print .)
    IF              reduce using rule 28 (estatuto -> print .)
    FOR             reduce using rule 28 (estatuto -> print .)
    WHILE           reduce using rule 28 (estatuto -> print .)
    INT             reduce using rule 28 (estatuto -> print .)
    FLOAT           reduce using rule 28 (estatuto -> print .)
    BOOLEAN         reduce using rule 28 (estatuto -> print .)
    ARRAY           reduce using rule 28 (estatuto -> print .)
    END             reduce using rule 28 (estatuto -> print .)
    RETURN          reduce using rule 28 (estatuto -> print .)
    ELSE            reduce using rule 28 (estatuto -> print .)


state 61

    (30) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (32) asignacion_2 -> . asignacion_equal super_exp
    (35) asignacion_equal -> . EQUAL

    EQUAL           shift and go to state 45

    asignacion_2                   shift and go to state 108
    asignacion_equal               shift and go to state 109

state 62

    (102) condicion -> condicion_id . LPAREN super_exp rparen_condicion bloque condicion_2

    LPAREN          shift and go to state 110


state 63

    (109) ciclo -> for .

    ID              reduce using rule 109 (ciclo -> for .)
    DRAW            reduce using rule 109 (ciclo -> for .)
    PRINT           reduce using rule 109 (ciclo -> for .)
    IF              reduce using rule 109 (ciclo -> for .)
    FOR             reduce using rule 109 (ciclo -> for .)
    WHILE           reduce using rule 109 (ciclo -> for .)
    INT             reduce using rule 109 (ciclo -> for .)
    FLOAT           reduce using rule 109 (ciclo -> for .)
    BOOLEAN         reduce using rule 109 (ciclo -> for .)
    ARRAY           reduce using rule 109 (ciclo -> for .)
    END             reduce using rule 109 (ciclo -> for .)
    RETURN          reduce using rule 109 (ciclo -> for .)
    ELSE            reduce using rule 109 (ciclo -> for .)


state 64

    (110) ciclo -> while .

    ID              reduce using rule 110 (ciclo -> while .)
    DRAW            reduce using rule 110 (ciclo -> while .)
    PRINT           reduce using rule 110 (ciclo -> while .)
    IF              reduce using rule 110 (ciclo -> while .)
    FOR             reduce using rule 110 (ciclo -> while .)
    WHILE           reduce using rule 110 (ciclo -> while .)
    INT             reduce using rule 110 (ciclo -> while .)
    FLOAT           reduce using rule 110 (ciclo -> while .)
    BOOLEAN         reduce using rule 110 (ciclo -> while .)
    ARRAY           reduce using rule 110 (ciclo -> while .)
    END             reduce using rule 110 (ciclo -> while .)
    RETURN          reduce using rule 110 (ciclo -> while .)
    ELSE            reduce using rule 110 (ciclo -> while .)


state 65

    (111) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (31) asignacion_id -> ID . asignacion_array
    (51) llamada_id -> ID . LPAREN
    (33) asignacion_array -> . LBRACKET super_exp asignacion_3
    (34) asignacion_array -> . empty
    (160) empty -> .

    POINT           shift and go to state 111
    LPAREN          shift and go to state 113
    LBRACKET        shift and go to state 114
    EQUAL           reduce using rule 160 (empty -> .)

    asignacion_array               shift and go to state 112
    empty                          shift and go to state 115

state 66

    (50) llamada -> llamada_id . llamada_2
    (52) llamada_2 -> . llamada_exp llamada_rparen
    (53) llamada_2 -> . llamada_rparen
    (55) llamada_exp -> . llamada_super_exp llamada_exp2
    (54) llamada_rparen -> . RPAREN
    (56) llamada_super_exp -> . super_exp
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    RPAREN          shift and go to state 120
    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    llamada_id                     shift and go to state 66
    llamada_2                      shift and go to state 116
    llamada_exp                    shift and go to state 117
    llamada_rparen                 shift and go to state 118
    llamada_super_exp              shift and go to state 119
    super_exp                      shift and go to state 121
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96

state 67

    (29) print -> PRINT . LPAREN super_exp RPAREN SEMICOLON

    LPAREN          shift and go to state 122


state 68

    (104) condicion_id -> IF .

    LPAREN          reduce using rule 104 (condicion_id -> IF .)


state 69

    (130) for -> for_init . LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end

    LPAREN          shift and go to state 123


state 70

    (136) while -> while_init . LPAREN super_exp rparen_while bloque while_end

    LPAREN          shift and go to state 124


state 71

    (134) for_init -> FOR .

    LPAREN          reduce using rule 134 (for_init -> FOR .)


state 72

    (137) while_init -> WHILE .

    LPAREN          reduce using rule 137 (while_init -> WHILE .)


state 73

    (21) main_1 -> MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 125


state 74

    (141) funcion_aux -> funcion_1 var_local . bloque funcion_2
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    RETURN          reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    bloque                         shift and go to state 126
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 75

    (147) var_local -> LPAREN . var_local_2 RPAREN
    (148) var_local_2 -> . var_local_2_1 var_local_3
    (149) var_local_2 -> . empty
    (150) var_local_2_1 -> . data_type ID
    (160) empty -> .
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN

    RPAREN          reduce using rule 160 (empty -> .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23

    var_local_2                    shift and go to state 127
    var_local_2_1                  shift and go to state 128
    empty                          shift and go to state 129
    data_type                      shift and go to state 130

state 76

    (142) funcion_aux -> funcion_void var_local . bloque funcion_end
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    bloque                         shift and go to state 131
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 77

    (144) funcion_1 -> data_type_func ID .

    LPAREN          reduce using rule 144 (funcion_1 -> data_type_func ID .)


state 78

    (143) funcion_void -> VOID ID .

    LPAREN          reduce using rule 143 (funcion_void -> VOID ID .)


state 79

    (9) globales_2 -> global_1 vars . globales_2
    (9) globales_2 -> . global_1 vars globales_2
    (10) globales_2 -> . empty
    (11) global_1 -> . GLOBAL
    (160) empty -> .

    GLOBAL          shift and go to state 8
    DEF             reduce using rule 160 (empty -> .)
    MAIN            reduce using rule 160 (empty -> .)

    global_1                       shift and go to state 38
    globales_2                     shift and go to state 132
    empty                          shift and go to state 40

state 80

    (38) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 133


state 81

    (46) vars2 -> asignacion_equal super_exp . SEMICOLON

    SEMICOLON       shift and go to state 134


state 82

    (65) super_exp -> expresion . super_exp_2
    (66) super_exp_2 -> . logicop super_exp
    (67) super_exp_2 -> . empty
    (158) logicop -> . AND
    (159) logicop -> . OR
    (160) empty -> .

    AND             shift and go to state 138
    OR              shift and go to state 139
    SEMICOLON       reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)

    super_exp_2                    shift and go to state 135
    logicop                        shift and go to state 136
    empty                          shift and go to state 137

state 83

    (68) expresion -> exp . expresion_2
    (69) expresion_2 -> . relop exp
    (70) expresion_2 -> . empty
    (71) relop -> . GREATER
    (72) relop -> . GREATEREQUAL
    (73) relop -> . LESS
    (74) relop -> . LESSEQUAL
    (75) relop -> . DEQUAL
    (76) relop -> . DISTINT
    (160) empty -> .

    GREATER         shift and go to state 143
    GREATEREQUAL    shift and go to state 144
    LESS            shift and go to state 145
    LESSEQUAL       shift and go to state 146
    DEQUAL          shift and go to state 147
    DISTINT         shift and go to state 148
    AND             reduce using rule 160 (empty -> .)
    OR              reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)

    expresion_2                    shift and go to state 140
    relop                          shift and go to state 141
    empty                          shift and go to state 142

state 84

    (77) exp -> termino . exp_2
    (78) exp_2 -> . addop exp
    (79) exp_2 -> . empty
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (160) empty -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    GREATER         reduce using rule 160 (empty -> .)
    GREATEREQUAL    reduce using rule 160 (empty -> .)
    LESS            reduce using rule 160 (empty -> .)
    LESSEQUAL       reduce using rule 160 (empty -> .)
    DEQUAL          reduce using rule 160 (empty -> .)
    DISTINT         reduce using rule 160 (empty -> .)
    AND             reduce using rule 160 (empty -> .)
    OR              reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)

    exp_2                          shift and go to state 149
    addop                          shift and go to state 150
    empty                          shift and go to state 151

state 85

    (80) termino -> factor . termino_2
    (81) termino_2 -> . timesop termino
    (82) termino_2 -> . empty
    (155) timesop -> . TIMES
    (156) timesop -> . DIVIDE
    (157) timesop -> . PERCENT
    (160) empty -> .

    TIMES           shift and go to state 155
    DIVIDE          shift and go to state 156
    PERCENT         shift and go to state 157
    PLUS            reduce using rule 160 (empty -> .)
    MINUS           reduce using rule 160 (empty -> .)
    GREATER         reduce using rule 160 (empty -> .)
    GREATEREQUAL    reduce using rule 160 (empty -> .)
    LESS            reduce using rule 160 (empty -> .)
    LESSEQUAL       reduce using rule 160 (empty -> .)
    DEQUAL          reduce using rule 160 (empty -> .)
    DISTINT         reduce using rule 160 (empty -> .)
    AND             reduce using rule 160 (empty -> .)
    OR              reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)

    termino_2                      shift and go to state 152
    timesop                        shift and go to state 153
    empty                          shift and go to state 154

state 86

    (97) factor -> lparen_factor . super_exp rparen_factor
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    lparen_factor                  shift and go to state 86
    super_exp                      shift and go to state 158
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 87

    (98) factor -> addop . var_cte
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    var_cte                        shift and go to state 159
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 88

    (99) factor -> var_cte .

    TIMES           reduce using rule 99 (factor -> var_cte .)
    DIVIDE          reduce using rule 99 (factor -> var_cte .)
    PERCENT         reduce using rule 99 (factor -> var_cte .)
    PLUS            reduce using rule 99 (factor -> var_cte .)
    MINUS           reduce using rule 99 (factor -> var_cte .)
    GREATER         reduce using rule 99 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 99 (factor -> var_cte .)
    LESS            reduce using rule 99 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 99 (factor -> var_cte .)
    DEQUAL          reduce using rule 99 (factor -> var_cte .)
    DISTINT         reduce using rule 99 (factor -> var_cte .)
    AND             reduce using rule 99 (factor -> var_cte .)
    OR              reduce using rule 99 (factor -> var_cte .)
    SEMICOLON       reduce using rule 99 (factor -> var_cte .)
    COMMA           reduce using rule 99 (factor -> var_cte .)
    RPAREN          reduce using rule 99 (factor -> var_cte .)
    RBRACKET        reduce using rule 99 (factor -> var_cte .)


state 89

    (100) lparen_factor -> LPAREN .

    LPAREN          reduce using rule 100 (lparen_factor -> LPAREN .)
    PLUS            reduce using rule 100 (lparen_factor -> LPAREN .)
    MINUS           reduce using rule 100 (lparen_factor -> LPAREN .)
    ID              reduce using rule 100 (lparen_factor -> LPAREN .)
    CTE_I           reduce using rule 100 (lparen_factor -> LPAREN .)
    CTE_F           reduce using rule 100 (lparen_factor -> LPAREN .)
    TRUE            reduce using rule 100 (lparen_factor -> LPAREN .)
    FALSE           reduce using rule 100 (lparen_factor -> LPAREN .)


state 90

    (153) addop -> PLUS .

    ID              reduce using rule 153 (addop -> PLUS .)
    CTE_I           reduce using rule 153 (addop -> PLUS .)
    CTE_F           reduce using rule 153 (addop -> PLUS .)
    TRUE            reduce using rule 153 (addop -> PLUS .)
    FALSE           reduce using rule 153 (addop -> PLUS .)
    LPAREN          reduce using rule 153 (addop -> PLUS .)
    PLUS            reduce using rule 153 (addop -> PLUS .)
    MINUS           reduce using rule 153 (addop -> PLUS .)


state 91

    (154) addop -> MINUS .

    ID              reduce using rule 154 (addop -> MINUS .)
    CTE_I           reduce using rule 154 (addop -> MINUS .)
    CTE_F           reduce using rule 154 (addop -> MINUS .)
    TRUE            reduce using rule 154 (addop -> MINUS .)
    FALSE           reduce using rule 154 (addop -> MINUS .)
    LPAREN          reduce using rule 154 (addop -> MINUS .)
    PLUS            reduce using rule 154 (addop -> MINUS .)
    MINUS           reduce using rule 154 (addop -> MINUS .)


state 92

    (83) var_cte -> var_cte_1 .

    TIMES           reduce using rule 83 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 83 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 83 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 83 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 83 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 83 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 83 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 83 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 83 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 83 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 83 (var_cte -> var_cte_1 .)
    AND             reduce using rule 83 (var_cte -> var_cte_1 .)
    OR              reduce using rule 83 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 83 (var_cte -> var_cte_1 .)
    COMMA           reduce using rule 83 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 83 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 83 (var_cte -> var_cte_1 .)


state 93

    (84) var_cte -> var_cte_i .

    TIMES           reduce using rule 84 (var_cte -> var_cte_i .)
    DIVIDE          reduce using rule 84 (var_cte -> var_cte_i .)
    PERCENT         reduce using rule 84 (var_cte -> var_cte_i .)
    PLUS            reduce using rule 84 (var_cte -> var_cte_i .)
    MINUS           reduce using rule 84 (var_cte -> var_cte_i .)
    GREATER         reduce using rule 84 (var_cte -> var_cte_i .)
    GREATEREQUAL    reduce using rule 84 (var_cte -> var_cte_i .)
    LESS            reduce using rule 84 (var_cte -> var_cte_i .)
    LESSEQUAL       reduce using rule 84 (var_cte -> var_cte_i .)
    DEQUAL          reduce using rule 84 (var_cte -> var_cte_i .)
    DISTINT         reduce using rule 84 (var_cte -> var_cte_i .)
    AND             reduce using rule 84 (var_cte -> var_cte_i .)
    OR              reduce using rule 84 (var_cte -> var_cte_i .)
    SEMICOLON       reduce using rule 84 (var_cte -> var_cte_i .)
    COMMA           reduce using rule 84 (var_cte -> var_cte_i .)
    RPAREN          reduce using rule 84 (var_cte -> var_cte_i .)
    RBRACKET        reduce using rule 84 (var_cte -> var_cte_i .)


state 94

    (85) var_cte -> var_cte_f .

    TIMES           reduce using rule 85 (var_cte -> var_cte_f .)
    DIVIDE          reduce using rule 85 (var_cte -> var_cte_f .)
    PERCENT         reduce using rule 85 (var_cte -> var_cte_f .)
    PLUS            reduce using rule 85 (var_cte -> var_cte_f .)
    MINUS           reduce using rule 85 (var_cte -> var_cte_f .)
    GREATER         reduce using rule 85 (var_cte -> var_cte_f .)
    GREATEREQUAL    reduce using rule 85 (var_cte -> var_cte_f .)
    LESS            reduce using rule 85 (var_cte -> var_cte_f .)
    LESSEQUAL       reduce using rule 85 (var_cte -> var_cte_f .)
    DEQUAL          reduce using rule 85 (var_cte -> var_cte_f .)
    DISTINT         reduce using rule 85 (var_cte -> var_cte_f .)
    AND             reduce using rule 85 (var_cte -> var_cte_f .)
    OR              reduce using rule 85 (var_cte -> var_cte_f .)
    SEMICOLON       reduce using rule 85 (var_cte -> var_cte_f .)
    COMMA           reduce using rule 85 (var_cte -> var_cte_f .)
    RPAREN          reduce using rule 85 (var_cte -> var_cte_f .)
    RBRACKET        reduce using rule 85 (var_cte -> var_cte_f .)


state 95

    (86) var_cte -> var_cte_b .

    TIMES           reduce using rule 86 (var_cte -> var_cte_b .)
    DIVIDE          reduce using rule 86 (var_cte -> var_cte_b .)
    PERCENT         reduce using rule 86 (var_cte -> var_cte_b .)
    PLUS            reduce using rule 86 (var_cte -> var_cte_b .)
    MINUS           reduce using rule 86 (var_cte -> var_cte_b .)
    GREATER         reduce using rule 86 (var_cte -> var_cte_b .)
    GREATEREQUAL    reduce using rule 86 (var_cte -> var_cte_b .)
    LESS            reduce using rule 86 (var_cte -> var_cte_b .)
    LESSEQUAL       reduce using rule 86 (var_cte -> var_cte_b .)
    DEQUAL          reduce using rule 86 (var_cte -> var_cte_b .)
    DISTINT         reduce using rule 86 (var_cte -> var_cte_b .)
    AND             reduce using rule 86 (var_cte -> var_cte_b .)
    OR              reduce using rule 86 (var_cte -> var_cte_b .)
    SEMICOLON       reduce using rule 86 (var_cte -> var_cte_b .)
    COMMA           reduce using rule 86 (var_cte -> var_cte_b .)
    RPAREN          reduce using rule 86 (var_cte -> var_cte_b .)
    RBRACKET        reduce using rule 86 (var_cte -> var_cte_b .)


state 96

    (87) var_cte -> llamada .

    TIMES           reduce using rule 87 (var_cte -> llamada .)
    DIVIDE          reduce using rule 87 (var_cte -> llamada .)
    PERCENT         reduce using rule 87 (var_cte -> llamada .)
    PLUS            reduce using rule 87 (var_cte -> llamada .)
    MINUS           reduce using rule 87 (var_cte -> llamada .)
    GREATER         reduce using rule 87 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 87 (var_cte -> llamada .)
    LESS            reduce using rule 87 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 87 (var_cte -> llamada .)
    DEQUAL          reduce using rule 87 (var_cte -> llamada .)
    DISTINT         reduce using rule 87 (var_cte -> llamada .)
    AND             reduce using rule 87 (var_cte -> llamada .)
    OR              reduce using rule 87 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 87 (var_cte -> llamada .)
    COMMA           reduce using rule 87 (var_cte -> llamada .)
    RPAREN          reduce using rule 87 (var_cte -> llamada .)
    RBRACKET        reduce using rule 87 (var_cte -> llamada .)


state 97

    (92) var_cte_1 -> ID . var_cte_2
    (51) llamada_id -> ID . LPAREN
    (93) var_cte_2 -> . LBRACKET super_exp var_cte_3
    (94) var_cte_2 -> . empty
    (160) empty -> .

    LPAREN          shift and go to state 113
    LBRACKET        shift and go to state 161
    TIMES           reduce using rule 160 (empty -> .)
    DIVIDE          reduce using rule 160 (empty -> .)
    PERCENT         reduce using rule 160 (empty -> .)
    PLUS            reduce using rule 160 (empty -> .)
    MINUS           reduce using rule 160 (empty -> .)
    GREATER         reduce using rule 160 (empty -> .)
    GREATEREQUAL    reduce using rule 160 (empty -> .)
    LESS            reduce using rule 160 (empty -> .)
    LESSEQUAL       reduce using rule 160 (empty -> .)
    DEQUAL          reduce using rule 160 (empty -> .)
    DISTINT         reduce using rule 160 (empty -> .)
    AND             reduce using rule 160 (empty -> .)
    OR              reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)

    var_cte_2                      shift and go to state 160
    empty                          shift and go to state 162

state 98

    (88) var_cte_i -> CTE_I .

    TIMES           reduce using rule 88 (var_cte_i -> CTE_I .)
    DIVIDE          reduce using rule 88 (var_cte_i -> CTE_I .)
    PERCENT         reduce using rule 88 (var_cte_i -> CTE_I .)
    PLUS            reduce using rule 88 (var_cte_i -> CTE_I .)
    MINUS           reduce using rule 88 (var_cte_i -> CTE_I .)
    GREATER         reduce using rule 88 (var_cte_i -> CTE_I .)
    GREATEREQUAL    reduce using rule 88 (var_cte_i -> CTE_I .)
    LESS            reduce using rule 88 (var_cte_i -> CTE_I .)
    LESSEQUAL       reduce using rule 88 (var_cte_i -> CTE_I .)
    DEQUAL          reduce using rule 88 (var_cte_i -> CTE_I .)
    DISTINT         reduce using rule 88 (var_cte_i -> CTE_I .)
    AND             reduce using rule 88 (var_cte_i -> CTE_I .)
    OR              reduce using rule 88 (var_cte_i -> CTE_I .)
    SEMICOLON       reduce using rule 88 (var_cte_i -> CTE_I .)
    COMMA           reduce using rule 88 (var_cte_i -> CTE_I .)
    RPAREN          reduce using rule 88 (var_cte_i -> CTE_I .)
    RBRACKET        reduce using rule 88 (var_cte_i -> CTE_I .)


state 99

    (89) var_cte_f -> CTE_F .

    TIMES           reduce using rule 89 (var_cte_f -> CTE_F .)
    DIVIDE          reduce using rule 89 (var_cte_f -> CTE_F .)
    PERCENT         reduce using rule 89 (var_cte_f -> CTE_F .)
    PLUS            reduce using rule 89 (var_cte_f -> CTE_F .)
    MINUS           reduce using rule 89 (var_cte_f -> CTE_F .)
    GREATER         reduce using rule 89 (var_cte_f -> CTE_F .)
    GREATEREQUAL    reduce using rule 89 (var_cte_f -> CTE_F .)
    LESS            reduce using rule 89 (var_cte_f -> CTE_F .)
    LESSEQUAL       reduce using rule 89 (var_cte_f -> CTE_F .)
    DEQUAL          reduce using rule 89 (var_cte_f -> CTE_F .)
    DISTINT         reduce using rule 89 (var_cte_f -> CTE_F .)
    AND             reduce using rule 89 (var_cte_f -> CTE_F .)
    OR              reduce using rule 89 (var_cte_f -> CTE_F .)
    SEMICOLON       reduce using rule 89 (var_cte_f -> CTE_F .)
    COMMA           reduce using rule 89 (var_cte_f -> CTE_F .)
    RPAREN          reduce using rule 89 (var_cte_f -> CTE_F .)
    RBRACKET        reduce using rule 89 (var_cte_f -> CTE_F .)


state 100

    (90) var_cte_b -> TRUE .

    TIMES           reduce using rule 90 (var_cte_b -> TRUE .)
    DIVIDE          reduce using rule 90 (var_cte_b -> TRUE .)
    PERCENT         reduce using rule 90 (var_cte_b -> TRUE .)
    PLUS            reduce using rule 90 (var_cte_b -> TRUE .)
    MINUS           reduce using rule 90 (var_cte_b -> TRUE .)
    GREATER         reduce using rule 90 (var_cte_b -> TRUE .)
    GREATEREQUAL    reduce using rule 90 (var_cte_b -> TRUE .)
    LESS            reduce using rule 90 (var_cte_b -> TRUE .)
    LESSEQUAL       reduce using rule 90 (var_cte_b -> TRUE .)
    DEQUAL          reduce using rule 90 (var_cte_b -> TRUE .)
    DISTINT         reduce using rule 90 (var_cte_b -> TRUE .)
    AND             reduce using rule 90 (var_cte_b -> TRUE .)
    OR              reduce using rule 90 (var_cte_b -> TRUE .)
    SEMICOLON       reduce using rule 90 (var_cte_b -> TRUE .)
    COMMA           reduce using rule 90 (var_cte_b -> TRUE .)
    RPAREN          reduce using rule 90 (var_cte_b -> TRUE .)
    RBRACKET        reduce using rule 90 (var_cte_b -> TRUE .)


state 101

    (91) var_cte_b -> FALSE .

    TIMES           reduce using rule 91 (var_cte_b -> FALSE .)
    DIVIDE          reduce using rule 91 (var_cte_b -> FALSE .)
    PERCENT         reduce using rule 91 (var_cte_b -> FALSE .)
    PLUS            reduce using rule 91 (var_cte_b -> FALSE .)
    MINUS           reduce using rule 91 (var_cte_b -> FALSE .)
    GREATER         reduce using rule 91 (var_cte_b -> FALSE .)
    GREATEREQUAL    reduce using rule 91 (var_cte_b -> FALSE .)
    LESS            reduce using rule 91 (var_cte_b -> FALSE .)
    LESSEQUAL       reduce using rule 91 (var_cte_b -> FALSE .)
    DEQUAL          reduce using rule 91 (var_cte_b -> FALSE .)
    DISTINT         reduce using rule 91 (var_cte_b -> FALSE .)
    AND             reduce using rule 91 (var_cte_b -> FALSE .)
    OR              reduce using rule 91 (var_cte_b -> FALSE .)
    SEMICOLON       reduce using rule 91 (var_cte_b -> FALSE .)
    COMMA           reduce using rule 91 (var_cte_b -> FALSE .)
    RPAREN          reduce using rule 91 (var_cte_b -> FALSE .)
    RBRACKET        reduce using rule 91 (var_cte_b -> FALSE .)


state 102

    (48) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 163


state 103

    (59) def_array -> LBRACKET . def_array_2
    (60) def_array_2 -> . def_array_cte RBRACKET
    (61) def_array_2 -> . RBRACKET
    (62) def_array_cte -> . super_exp def_array_cte_2
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    RBRACKET        shift and go to state 166
    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    def_array_2                    shift and go to state 164
    def_array_cte                  shift and go to state 165
    super_exp                      shift and go to state 167
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 104

    (43) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER ID

    COMMA           shift and go to state 168


state 105

    (20) main -> main_1 bloque END .

    $end            reduce using rule 20 (main -> main_1 bloque END .)


state 106

    (12) bloque -> estatuto bloque .

    END             reduce using rule 12 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 12 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 12 (bloque -> estatuto bloque .)


state 107

    (27) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 27 (estatuto -> llamada SEMICOLON .)


state 108

    (30) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 169


state 109

    (32) asignacion_2 -> asignacion_equal . super_exp
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 170
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 110

    (102) condicion -> condicion_id LPAREN . super_exp rparen_condicion bloque condicion_2
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 171
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 111

    (111) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (118) accion_nombre -> . SETPOSITION
    (119) accion_nombre -> . CIRCLE
    (120) accion_nombre -> . RIGHT
    (121) accion_nombre -> . LEFT
    (122) accion_nombre -> . HIDE
    (123) accion_nombre -> . SQUARE
    (124) accion_nombre -> . CLEAR
    (125) accion_nombre -> . SHOW
    (126) accion_nombre -> . BACK
    (127) accion_nombre -> . SPEED
    (128) accion_nombre -> . FORWARD
    (129) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 173
    CIRCLE          shift and go to state 174
    RIGHT           shift and go to state 175
    LEFT            shift and go to state 176
    HIDE            shift and go to state 177
    SQUARE          shift and go to state 178
    CLEAR           shift and go to state 179
    SHOW            shift and go to state 180
    BACK            shift and go to state 181
    SPEED           shift and go to state 182
    FORWARD         shift and go to state 183
    SETCOLOR        shift and go to state 184

    accion_nombre                  shift and go to state 172

state 112

    (31) asignacion_id -> ID asignacion_array .

    EQUAL           reduce using rule 31 (asignacion_id -> ID asignacion_array .)


state 113

    (51) llamada_id -> ID LPAREN .

    RPAREN          reduce using rule 51 (llamada_id -> ID LPAREN .)
    LPAREN          reduce using rule 51 (llamada_id -> ID LPAREN .)
    PLUS            reduce using rule 51 (llamada_id -> ID LPAREN .)
    MINUS           reduce using rule 51 (llamada_id -> ID LPAREN .)
    ID              reduce using rule 51 (llamada_id -> ID LPAREN .)
    CTE_I           reduce using rule 51 (llamada_id -> ID LPAREN .)
    CTE_F           reduce using rule 51 (llamada_id -> ID LPAREN .)
    TRUE            reduce using rule 51 (llamada_id -> ID LPAREN .)
    FALSE           reduce using rule 51 (llamada_id -> ID LPAREN .)


state 114

    (33) asignacion_array -> LBRACKET . super_exp asignacion_3
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 185
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 115

    (34) asignacion_array -> empty .

    EQUAL           reduce using rule 34 (asignacion_array -> empty .)


state 116

    (50) llamada -> llamada_id llamada_2 .

    SEMICOLON       reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    TIMES           reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    DIVIDE          reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    PERCENT         reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    PLUS            reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    MINUS           reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    GREATER         reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    GREATEREQUAL    reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    LESS            reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    LESSEQUAL       reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    DEQUAL          reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    DISTINT         reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    AND             reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    OR              reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    COMMA           reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    RPAREN          reduce using rule 50 (llamada -> llamada_id llamada_2 .)
    RBRACKET        reduce using rule 50 (llamada -> llamada_id llamada_2 .)


state 117

    (52) llamada_2 -> llamada_exp . llamada_rparen
    (54) llamada_rparen -> . RPAREN

    RPAREN          shift and go to state 120

    llamada_rparen                 shift and go to state 186

state 118

    (53) llamada_2 -> llamada_rparen .

    SEMICOLON       reduce using rule 53 (llamada_2 -> llamada_rparen .)
    TIMES           reduce using rule 53 (llamada_2 -> llamada_rparen .)
    DIVIDE          reduce using rule 53 (llamada_2 -> llamada_rparen .)
    PERCENT         reduce using rule 53 (llamada_2 -> llamada_rparen .)
    PLUS            reduce using rule 53 (llamada_2 -> llamada_rparen .)
    MINUS           reduce using rule 53 (llamada_2 -> llamada_rparen .)
    GREATER         reduce using rule 53 (llamada_2 -> llamada_rparen .)
    GREATEREQUAL    reduce using rule 53 (llamada_2 -> llamada_rparen .)
    LESS            reduce using rule 53 (llamada_2 -> llamada_rparen .)
    LESSEQUAL       reduce using rule 53 (llamada_2 -> llamada_rparen .)
    DEQUAL          reduce using rule 53 (llamada_2 -> llamada_rparen .)
    DISTINT         reduce using rule 53 (llamada_2 -> llamada_rparen .)
    AND             reduce using rule 53 (llamada_2 -> llamada_rparen .)
    OR              reduce using rule 53 (llamada_2 -> llamada_rparen .)
    COMMA           reduce using rule 53 (llamada_2 -> llamada_rparen .)
    RPAREN          reduce using rule 53 (llamada_2 -> llamada_rparen .)
    RBRACKET        reduce using rule 53 (llamada_2 -> llamada_rparen .)


state 119

    (55) llamada_exp -> llamada_super_exp . llamada_exp2
    (57) llamada_exp2 -> . COMMA llamada_exp
    (58) llamada_exp2 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 188
    RPAREN          reduce using rule 160 (empty -> .)

    llamada_exp2                   shift and go to state 187
    empty                          shift and go to state 189

state 120

    (54) llamada_rparen -> RPAREN .

    SEMICOLON       reduce using rule 54 (llamada_rparen -> RPAREN .)
    TIMES           reduce using rule 54 (llamada_rparen -> RPAREN .)
    DIVIDE          reduce using rule 54 (llamada_rparen -> RPAREN .)
    PERCENT         reduce using rule 54 (llamada_rparen -> RPAREN .)
    PLUS            reduce using rule 54 (llamada_rparen -> RPAREN .)
    MINUS           reduce using rule 54 (llamada_rparen -> RPAREN .)
    GREATER         reduce using rule 54 (llamada_rparen -> RPAREN .)
    GREATEREQUAL    reduce using rule 54 (llamada_rparen -> RPAREN .)
    LESS            reduce using rule 54 (llamada_rparen -> RPAREN .)
    LESSEQUAL       reduce using rule 54 (llamada_rparen -> RPAREN .)
    DEQUAL          reduce using rule 54 (llamada_rparen -> RPAREN .)
    DISTINT         reduce using rule 54 (llamada_rparen -> RPAREN .)
    AND             reduce using rule 54 (llamada_rparen -> RPAREN .)
    OR              reduce using rule 54 (llamada_rparen -> RPAREN .)
    COMMA           reduce using rule 54 (llamada_rparen -> RPAREN .)
    RPAREN          reduce using rule 54 (llamada_rparen -> RPAREN .)
    RBRACKET        reduce using rule 54 (llamada_rparen -> RPAREN .)


state 121

    (56) llamada_super_exp -> super_exp .

    COMMA           reduce using rule 56 (llamada_super_exp -> super_exp .)
    RPAREN          reduce using rule 56 (llamada_super_exp -> super_exp .)


state 122

    (29) print -> PRINT LPAREN . super_exp RPAREN SEMICOLON
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 190
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 123

    (130) for -> for_init LPAREN . for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) for_exp -> . exp
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    for_exp                        shift and go to state 191
    exp                            shift and go to state 192
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 124

    (136) while -> while_init LPAREN . super_exp rparen_while bloque while_end
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 193
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 125

    (21) main_1 -> MAIN LPAREN RPAREN .

    ID              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    PRINT           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    IF              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FOR             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    INT             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    END             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)


state 126

    (141) funcion_aux -> funcion_1 var_local bloque . funcion_2
    (145) funcion_2 -> . RETURN super_exp SEMICOLON END

    RETURN          shift and go to state 195

    funcion_2                      shift and go to state 194

state 127

    (147) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 196


state 128

    (148) var_local_2 -> var_local_2_1 . var_local_3
    (151) var_local_3 -> . COMMA var_local_2
    (152) var_local_3 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 198
    RPAREN          reduce using rule 160 (empty -> .)

    var_local_3                    shift and go to state 197
    empty                          shift and go to state 199

state 129

    (149) var_local_2 -> empty .

    RPAREN          reduce using rule 149 (var_local_2 -> empty .)


state 130

    (150) var_local_2_1 -> data_type . ID

    ID              shift and go to state 200


state 131

    (142) funcion_aux -> funcion_void var_local bloque . funcion_end
    (146) funcion_end -> . END

    END             shift and go to state 202

    funcion_end                    shift and go to state 201

state 132

    (9) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 9 (globales_2 -> global_1 vars globales_2 .)
    MAIN            reduce using rule 9 (globales_2 -> global_1 vars globales_2 .)


state 133

    (38) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 203


state 134

    (46) vars2 -> asignacion_equal super_exp SEMICOLON .

    GLOBAL          reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DEF             reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    MAIN            reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ID              reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    DRAW            reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    PRINT           reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    IF              reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FOR             reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    WHILE           reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    INT             reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    FLOAT           reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    BOOLEAN         reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ARRAY           reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    END             reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    RETURN          reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)
    ELSE            reduce using rule 46 (vars2 -> asignacion_equal super_exp SEMICOLON .)


state 135

    (65) super_exp -> expresion super_exp_2 .

    SEMICOLON       reduce using rule 65 (super_exp -> expresion super_exp_2 .)
    COMMA           reduce using rule 65 (super_exp -> expresion super_exp_2 .)
    RPAREN          reduce using rule 65 (super_exp -> expresion super_exp_2 .)
    RBRACKET        reduce using rule 65 (super_exp -> expresion super_exp_2 .)


state 136

    (66) super_exp_2 -> logicop . super_exp
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 204
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 137

    (67) super_exp_2 -> empty .

    SEMICOLON       reduce using rule 67 (super_exp_2 -> empty .)
    COMMA           reduce using rule 67 (super_exp_2 -> empty .)
    RPAREN          reduce using rule 67 (super_exp_2 -> empty .)
    RBRACKET        reduce using rule 67 (super_exp_2 -> empty .)


state 138

    (158) logicop -> AND .

    LPAREN          reduce using rule 158 (logicop -> AND .)
    PLUS            reduce using rule 158 (logicop -> AND .)
    MINUS           reduce using rule 158 (logicop -> AND .)
    ID              reduce using rule 158 (logicop -> AND .)
    CTE_I           reduce using rule 158 (logicop -> AND .)
    CTE_F           reduce using rule 158 (logicop -> AND .)
    TRUE            reduce using rule 158 (logicop -> AND .)
    FALSE           reduce using rule 158 (logicop -> AND .)


state 139

    (159) logicop -> OR .

    LPAREN          reduce using rule 159 (logicop -> OR .)
    PLUS            reduce using rule 159 (logicop -> OR .)
    MINUS           reduce using rule 159 (logicop -> OR .)
    ID              reduce using rule 159 (logicop -> OR .)
    CTE_I           reduce using rule 159 (logicop -> OR .)
    CTE_F           reduce using rule 159 (logicop -> OR .)
    TRUE            reduce using rule 159 (logicop -> OR .)
    FALSE           reduce using rule 159 (logicop -> OR .)


state 140

    (68) expresion -> exp expresion_2 .

    AND             reduce using rule 68 (expresion -> exp expresion_2 .)
    OR              reduce using rule 68 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 68 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 68 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 68 (expresion -> exp expresion_2 .)
    RBRACKET        reduce using rule 68 (expresion -> exp expresion_2 .)


state 141

    (69) expresion_2 -> relop . exp
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    exp                            shift and go to state 205
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 142

    (70) expresion_2 -> empty .

    AND             reduce using rule 70 (expresion_2 -> empty .)
    OR              reduce using rule 70 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 70 (expresion_2 -> empty .)
    COMMA           reduce using rule 70 (expresion_2 -> empty .)
    RPAREN          reduce using rule 70 (expresion_2 -> empty .)
    RBRACKET        reduce using rule 70 (expresion_2 -> empty .)


state 143

    (71) relop -> GREATER .

    LPAREN          reduce using rule 71 (relop -> GREATER .)
    PLUS            reduce using rule 71 (relop -> GREATER .)
    MINUS           reduce using rule 71 (relop -> GREATER .)
    ID              reduce using rule 71 (relop -> GREATER .)
    CTE_I           reduce using rule 71 (relop -> GREATER .)
    CTE_F           reduce using rule 71 (relop -> GREATER .)
    TRUE            reduce using rule 71 (relop -> GREATER .)
    FALSE           reduce using rule 71 (relop -> GREATER .)


state 144

    (72) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 72 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 72 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 72 (relop -> GREATEREQUAL .)
    ID              reduce using rule 72 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 72 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 72 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 72 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 72 (relop -> GREATEREQUAL .)


state 145

    (73) relop -> LESS .

    LPAREN          reduce using rule 73 (relop -> LESS .)
    PLUS            reduce using rule 73 (relop -> LESS .)
    MINUS           reduce using rule 73 (relop -> LESS .)
    ID              reduce using rule 73 (relop -> LESS .)
    CTE_I           reduce using rule 73 (relop -> LESS .)
    CTE_F           reduce using rule 73 (relop -> LESS .)
    TRUE            reduce using rule 73 (relop -> LESS .)
    FALSE           reduce using rule 73 (relop -> LESS .)


state 146

    (74) relop -> LESSEQUAL .

    LPAREN          reduce using rule 74 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 74 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 74 (relop -> LESSEQUAL .)
    ID              reduce using rule 74 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 74 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 74 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 74 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 74 (relop -> LESSEQUAL .)


state 147

    (75) relop -> DEQUAL .

    LPAREN          reduce using rule 75 (relop -> DEQUAL .)
    PLUS            reduce using rule 75 (relop -> DEQUAL .)
    MINUS           reduce using rule 75 (relop -> DEQUAL .)
    ID              reduce using rule 75 (relop -> DEQUAL .)
    CTE_I           reduce using rule 75 (relop -> DEQUAL .)
    CTE_F           reduce using rule 75 (relop -> DEQUAL .)
    TRUE            reduce using rule 75 (relop -> DEQUAL .)
    FALSE           reduce using rule 75 (relop -> DEQUAL .)


state 148

    (76) relop -> DISTINT .

    LPAREN          reduce using rule 76 (relop -> DISTINT .)
    PLUS            reduce using rule 76 (relop -> DISTINT .)
    MINUS           reduce using rule 76 (relop -> DISTINT .)
    ID              reduce using rule 76 (relop -> DISTINT .)
    CTE_I           reduce using rule 76 (relop -> DISTINT .)
    CTE_F           reduce using rule 76 (relop -> DISTINT .)
    TRUE            reduce using rule 76 (relop -> DISTINT .)
    FALSE           reduce using rule 76 (relop -> DISTINT .)


state 149

    (77) exp -> termino exp_2 .

    GREATER         reduce using rule 77 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 77 (exp -> termino exp_2 .)
    LESS            reduce using rule 77 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 77 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 77 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 77 (exp -> termino exp_2 .)
    AND             reduce using rule 77 (exp -> termino exp_2 .)
    OR              reduce using rule 77 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 77 (exp -> termino exp_2 .)
    COMMA           reduce using rule 77 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 77 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 77 (exp -> termino exp_2 .)


state 150

    (78) exp_2 -> addop . exp
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    addop                          shift and go to state 87
    exp                            shift and go to state 206
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 151

    (79) exp_2 -> empty .

    GREATER         reduce using rule 79 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 79 (exp_2 -> empty .)
    LESS            reduce using rule 79 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 79 (exp_2 -> empty .)
    DEQUAL          reduce using rule 79 (exp_2 -> empty .)
    DISTINT         reduce using rule 79 (exp_2 -> empty .)
    AND             reduce using rule 79 (exp_2 -> empty .)
    OR              reduce using rule 79 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 79 (exp_2 -> empty .)
    COMMA           reduce using rule 79 (exp_2 -> empty .)
    RPAREN          reduce using rule 79 (exp_2 -> empty .)
    RBRACKET        reduce using rule 79 (exp_2 -> empty .)


state 152

    (80) termino -> factor termino_2 .

    PLUS            reduce using rule 80 (termino -> factor termino_2 .)
    MINUS           reduce using rule 80 (termino -> factor termino_2 .)
    GREATER         reduce using rule 80 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 80 (termino -> factor termino_2 .)
    LESS            reduce using rule 80 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 80 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 80 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 80 (termino -> factor termino_2 .)
    AND             reduce using rule 80 (termino -> factor termino_2 .)
    OR              reduce using rule 80 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 80 (termino -> factor termino_2 .)
    COMMA           reduce using rule 80 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 80 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 80 (termino -> factor termino_2 .)


state 153

    (81) termino_2 -> timesop . termino
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    termino                        shift and go to state 207
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 154

    (82) termino_2 -> empty .

    PLUS            reduce using rule 82 (termino_2 -> empty .)
    MINUS           reduce using rule 82 (termino_2 -> empty .)
    GREATER         reduce using rule 82 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 82 (termino_2 -> empty .)
    LESS            reduce using rule 82 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 82 (termino_2 -> empty .)
    DEQUAL          reduce using rule 82 (termino_2 -> empty .)
    DISTINT         reduce using rule 82 (termino_2 -> empty .)
    AND             reduce using rule 82 (termino_2 -> empty .)
    OR              reduce using rule 82 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 82 (termino_2 -> empty .)
    COMMA           reduce using rule 82 (termino_2 -> empty .)
    RPAREN          reduce using rule 82 (termino_2 -> empty .)
    RBRACKET        reduce using rule 82 (termino_2 -> empty .)


state 155

    (155) timesop -> TIMES .

    LPAREN          reduce using rule 155 (timesop -> TIMES .)
    PLUS            reduce using rule 155 (timesop -> TIMES .)
    MINUS           reduce using rule 155 (timesop -> TIMES .)
    ID              reduce using rule 155 (timesop -> TIMES .)
    CTE_I           reduce using rule 155 (timesop -> TIMES .)
    CTE_F           reduce using rule 155 (timesop -> TIMES .)
    TRUE            reduce using rule 155 (timesop -> TIMES .)
    FALSE           reduce using rule 155 (timesop -> TIMES .)


state 156

    (156) timesop -> DIVIDE .

    LPAREN          reduce using rule 156 (timesop -> DIVIDE .)
    PLUS            reduce using rule 156 (timesop -> DIVIDE .)
    MINUS           reduce using rule 156 (timesop -> DIVIDE .)
    ID              reduce using rule 156 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 156 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 156 (timesop -> DIVIDE .)
    TRUE            reduce using rule 156 (timesop -> DIVIDE .)
    FALSE           reduce using rule 156 (timesop -> DIVIDE .)


state 157

    (157) timesop -> PERCENT .

    LPAREN          reduce using rule 157 (timesop -> PERCENT .)
    PLUS            reduce using rule 157 (timesop -> PERCENT .)
    MINUS           reduce using rule 157 (timesop -> PERCENT .)
    ID              reduce using rule 157 (timesop -> PERCENT .)
    CTE_I           reduce using rule 157 (timesop -> PERCENT .)
    CTE_F           reduce using rule 157 (timesop -> PERCENT .)
    TRUE            reduce using rule 157 (timesop -> PERCENT .)
    FALSE           reduce using rule 157 (timesop -> PERCENT .)


state 158

    (97) factor -> lparen_factor super_exp . rparen_factor
    (101) rparen_factor -> . RPAREN

    RPAREN          shift and go to state 209

    rparen_factor                  shift and go to state 208

state 159

    (98) factor -> addop var_cte .

    TIMES           reduce using rule 98 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 98 (factor -> addop var_cte .)
    PERCENT         reduce using rule 98 (factor -> addop var_cte .)
    PLUS            reduce using rule 98 (factor -> addop var_cte .)
    MINUS           reduce using rule 98 (factor -> addop var_cte .)
    GREATER         reduce using rule 98 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 98 (factor -> addop var_cte .)
    LESS            reduce using rule 98 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 98 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 98 (factor -> addop var_cte .)
    DISTINT         reduce using rule 98 (factor -> addop var_cte .)
    AND             reduce using rule 98 (factor -> addop var_cte .)
    OR              reduce using rule 98 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 98 (factor -> addop var_cte .)
    COMMA           reduce using rule 98 (factor -> addop var_cte .)
    RPAREN          reduce using rule 98 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 98 (factor -> addop var_cte .)


state 160

    (92) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    AND             reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    OR              reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 92 (var_cte_1 -> ID var_cte_2 .)


state 161

    (93) var_cte_2 -> LBRACKET . super_exp var_cte_3
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 210
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 162

    (94) var_cte_2 -> empty .

    TIMES           reduce using rule 94 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 94 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 94 (var_cte_2 -> empty .)
    PLUS            reduce using rule 94 (var_cte_2 -> empty .)
    MINUS           reduce using rule 94 (var_cte_2 -> empty .)
    GREATER         reduce using rule 94 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 94 (var_cte_2 -> empty .)
    LESS            reduce using rule 94 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 94 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 94 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 94 (var_cte_2 -> empty .)
    AND             reduce using rule 94 (var_cte_2 -> empty .)
    OR              reduce using rule 94 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 94 (var_cte_2 -> empty .)
    COMMA           reduce using rule 94 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 94 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 94 (var_cte_2 -> empty .)


state 163

    (48) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    MAIN            reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    PRINT           reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 48 (vars3 -> EQUAL def_array SEMICOLON .)


state 164

    (59) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 59 (def_array -> LBRACKET def_array_2 .)


state 165

    (60) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 211


state 166

    (61) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 61 (def_array_2 -> RBRACKET .)


state 167

    (62) def_array_cte -> super_exp . def_array_cte_2
    (63) def_array_cte_2 -> . COMMA def_array_cte
    (64) def_array_cte_2 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 213
    RBRACKET        reduce using rule 160 (empty -> .)

    def_array_cte_2                shift and go to state 212
    empty                          shift and go to state 214

state 168

    (43) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER ID

    CTE_I           shift and go to state 215


state 169

    (30) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    PRINT           reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 30 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 170

    (32) asignacion_2 -> asignacion_equal super_exp .

    SEMICOLON       reduce using rule 32 (asignacion_2 -> asignacion_equal super_exp .)


state 171

    (102) condicion -> condicion_id LPAREN super_exp . rparen_condicion bloque condicion_2
    (103) rparen_condicion -> . RPAREN

    RPAREN          shift and go to state 217

    rparen_condicion               shift and go to state 216

state 172

    (111) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (112) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 219

    accion_params                  shift and go to state 218

state 173

    (118) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 118 (accion_nombre -> SETPOSITION .)


state 174

    (119) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 119 (accion_nombre -> CIRCLE .)


state 175

    (120) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 120 (accion_nombre -> RIGHT .)


state 176

    (121) accion_nombre -> LEFT .

    LPAREN          reduce using rule 121 (accion_nombre -> LEFT .)


state 177

    (122) accion_nombre -> HIDE .

    LPAREN          reduce using rule 122 (accion_nombre -> HIDE .)


state 178

    (123) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 123 (accion_nombre -> SQUARE .)


state 179

    (124) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 124 (accion_nombre -> CLEAR .)


state 180

    (125) accion_nombre -> SHOW .

    LPAREN          reduce using rule 125 (accion_nombre -> SHOW .)


state 181

    (126) accion_nombre -> BACK .

    LPAREN          reduce using rule 126 (accion_nombre -> BACK .)


state 182

    (127) accion_nombre -> SPEED .

    LPAREN          reduce using rule 127 (accion_nombre -> SPEED .)


state 183

    (128) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 128 (accion_nombre -> FORWARD .)


state 184

    (129) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 129 (accion_nombre -> SETCOLOR .)


state 185

    (33) asignacion_array -> LBRACKET super_exp . asignacion_3
    (36) asignacion_3 -> . RBRACKET
    (37) asignacion_3 -> . COMMA super_exp RBRACKET

    RBRACKET        shift and go to state 221
    COMMA           shift and go to state 222

    asignacion_3                   shift and go to state 220

state 186

    (52) llamada_2 -> llamada_exp llamada_rparen .

    SEMICOLON       reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    TIMES           reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    DIVIDE          reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    PERCENT         reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    PLUS            reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    MINUS           reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    GREATER         reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    GREATEREQUAL    reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    LESS            reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    LESSEQUAL       reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    DEQUAL          reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    DISTINT         reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    AND             reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    OR              reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    COMMA           reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    RPAREN          reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)
    RBRACKET        reduce using rule 52 (llamada_2 -> llamada_exp llamada_rparen .)


state 187

    (55) llamada_exp -> llamada_super_exp llamada_exp2 .

    RPAREN          reduce using rule 55 (llamada_exp -> llamada_super_exp llamada_exp2 .)


state 188

    (57) llamada_exp2 -> COMMA . llamada_exp
    (55) llamada_exp -> . llamada_super_exp llamada_exp2
    (56) llamada_super_exp -> . super_exp
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    llamada_exp                    shift and go to state 223
    llamada_super_exp              shift and go to state 119
    super_exp                      shift and go to state 121
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 189

    (58) llamada_exp2 -> empty .

    RPAREN          reduce using rule 58 (llamada_exp2 -> empty .)


state 190

    (29) print -> PRINT LPAREN super_exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 224


state 191

    (130) for -> for_init LPAREN for_exp . COMMA for_exp COMMA for_exp2 for_rparen bloque for_end

    COMMA           shift and go to state 225


state 192

    (131) for_exp -> exp .

    COMMA           reduce using rule 131 (for_exp -> exp .)


state 193

    (136) while -> while_init LPAREN super_exp . rparen_while bloque while_end
    (138) rparen_while -> . RPAREN

    RPAREN          shift and go to state 227

    rparen_while                   shift and go to state 226

state 194

    (141) funcion_aux -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 141 (funcion_aux -> funcion_1 var_local bloque funcion_2 .)
    MAIN            reduce using rule 141 (funcion_aux -> funcion_1 var_local bloque funcion_2 .)


state 195

    (145) funcion_2 -> RETURN . super_exp SEMICOLON END
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 228
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 196

    (147) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    PRINT           reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 147 (var_local -> LPAREN var_local_2 RPAREN .)


state 197

    (148) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 148 (var_local_2 -> var_local_2_1 var_local_3 .)


state 198

    (151) var_local_3 -> COMMA . var_local_2
    (148) var_local_2 -> . var_local_2_1 var_local_3
    (149) var_local_2 -> . empty
    (150) var_local_2_1 -> . data_type ID
    (160) empty -> .
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN

    RPAREN          reduce using rule 160 (empty -> .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23

    var_local_2                    shift and go to state 229
    var_local_2_1                  shift and go to state 128
    empty                          shift and go to state 129
    data_type                      shift and go to state 130

state 199

    (152) var_local_3 -> empty .

    RPAREN          reduce using rule 152 (var_local_3 -> empty .)


state 200

    (150) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 150 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 150 (var_local_2_1 -> data_type ID .)


state 201

    (142) funcion_aux -> funcion_void var_local bloque funcion_end .

    DEF             reduce using rule 142 (funcion_aux -> funcion_void var_local bloque funcion_end .)
    MAIN            reduce using rule 142 (funcion_aux -> funcion_void var_local bloque funcion_end .)


state 202

    (146) funcion_end -> END .

    DEF             reduce using rule 146 (funcion_end -> END .)
    MAIN            reduce using rule 146 (funcion_end -> END .)


state 203

    (38) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 230


state 204

    (66) super_exp_2 -> logicop super_exp .

    SEMICOLON       reduce using rule 66 (super_exp_2 -> logicop super_exp .)
    COMMA           reduce using rule 66 (super_exp_2 -> logicop super_exp .)
    RPAREN          reduce using rule 66 (super_exp_2 -> logicop super_exp .)
    RBRACKET        reduce using rule 66 (super_exp_2 -> logicop super_exp .)


state 205

    (69) expresion_2 -> relop exp .

    AND             reduce using rule 69 (expresion_2 -> relop exp .)
    OR              reduce using rule 69 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 69 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 69 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 69 (expresion_2 -> relop exp .)
    RBRACKET        reduce using rule 69 (expresion_2 -> relop exp .)


state 206

    (78) exp_2 -> addop exp .

    GREATER         reduce using rule 78 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 78 (exp_2 -> addop exp .)
    LESS            reduce using rule 78 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 78 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 78 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 78 (exp_2 -> addop exp .)
    AND             reduce using rule 78 (exp_2 -> addop exp .)
    OR              reduce using rule 78 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 78 (exp_2 -> addop exp .)
    COMMA           reduce using rule 78 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 78 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 78 (exp_2 -> addop exp .)


state 207

    (81) termino_2 -> timesop termino .

    PLUS            reduce using rule 81 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 81 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 81 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 81 (termino_2 -> timesop termino .)
    LESS            reduce using rule 81 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 81 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 81 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 81 (termino_2 -> timesop termino .)
    AND             reduce using rule 81 (termino_2 -> timesop termino .)
    OR              reduce using rule 81 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 81 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 81 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 81 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 81 (termino_2 -> timesop termino .)


state 208

    (97) factor -> lparen_factor super_exp rparen_factor .

    TIMES           reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    DIVIDE          reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    PERCENT         reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    PLUS            reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    MINUS           reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    GREATER         reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    GREATEREQUAL    reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    LESS            reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    LESSEQUAL       reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    DEQUAL          reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    DISTINT         reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    AND             reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    OR              reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    SEMICOLON       reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    COMMA           reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    RPAREN          reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)
    RBRACKET        reduce using rule 97 (factor -> lparen_factor super_exp rparen_factor .)


state 209

    (101) rparen_factor -> RPAREN .

    TIMES           reduce using rule 101 (rparen_factor -> RPAREN .)
    DIVIDE          reduce using rule 101 (rparen_factor -> RPAREN .)
    PERCENT         reduce using rule 101 (rparen_factor -> RPAREN .)
    PLUS            reduce using rule 101 (rparen_factor -> RPAREN .)
    MINUS           reduce using rule 101 (rparen_factor -> RPAREN .)
    GREATER         reduce using rule 101 (rparen_factor -> RPAREN .)
    GREATEREQUAL    reduce using rule 101 (rparen_factor -> RPAREN .)
    LESS            reduce using rule 101 (rparen_factor -> RPAREN .)
    LESSEQUAL       reduce using rule 101 (rparen_factor -> RPAREN .)
    DEQUAL          reduce using rule 101 (rparen_factor -> RPAREN .)
    DISTINT         reduce using rule 101 (rparen_factor -> RPAREN .)
    AND             reduce using rule 101 (rparen_factor -> RPAREN .)
    OR              reduce using rule 101 (rparen_factor -> RPAREN .)
    SEMICOLON       reduce using rule 101 (rparen_factor -> RPAREN .)
    COMMA           reduce using rule 101 (rparen_factor -> RPAREN .)
    RPAREN          reduce using rule 101 (rparen_factor -> RPAREN .)
    RBRACKET        reduce using rule 101 (rparen_factor -> RPAREN .)


state 210

    (93) var_cte_2 -> LBRACKET super_exp . var_cte_3
    (95) var_cte_3 -> . RBRACKET
    (96) var_cte_3 -> . COMMA super_exp RBRACKET

    RBRACKET        shift and go to state 232
    COMMA           shift and go to state 233

    var_cte_3                      shift and go to state 231

state 211

    (60) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 60 (def_array_2 -> def_array_cte RBRACKET .)


state 212

    (62) def_array_cte -> super_exp def_array_cte_2 .

    RBRACKET        reduce using rule 62 (def_array_cte -> super_exp def_array_cte_2 .)


state 213

    (63) def_array_cte_2 -> COMMA . def_array_cte
    (62) def_array_cte -> . super_exp def_array_cte_2
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    def_array_cte                  shift and go to state 234
    super_exp                      shift and go to state 167
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 214

    (64) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 64 (def_array_cte_2 -> empty .)


state 215

    (43) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER ID
    (44) array_2 -> . COMMA CTE_I
    (45) array_2 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 235
    GREATER         reduce using rule 160 (empty -> .)

    array_2                        shift and go to state 236
    empty                          shift and go to state 237

state 216

    (102) condicion -> condicion_id LPAREN super_exp rparen_condicion . bloque condicion_2
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    ELSE            reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    condicion_id                   shift and go to state 62
    bloque                         shift and go to state 238
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 217

    (103) rparen_condicion -> RPAREN .

    ID              reduce using rule 103 (rparen_condicion -> RPAREN .)
    DRAW            reduce using rule 103 (rparen_condicion -> RPAREN .)
    PRINT           reduce using rule 103 (rparen_condicion -> RPAREN .)
    IF              reduce using rule 103 (rparen_condicion -> RPAREN .)
    FOR             reduce using rule 103 (rparen_condicion -> RPAREN .)
    WHILE           reduce using rule 103 (rparen_condicion -> RPAREN .)
    INT             reduce using rule 103 (rparen_condicion -> RPAREN .)
    FLOAT           reduce using rule 103 (rparen_condicion -> RPAREN .)
    BOOLEAN         reduce using rule 103 (rparen_condicion -> RPAREN .)
    ARRAY           reduce using rule 103 (rparen_condicion -> RPAREN .)
    END             reduce using rule 103 (rparen_condicion -> RPAREN .)
    ELSE            reduce using rule 103 (rparen_condicion -> RPAREN .)


state 218

    (111) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 239


state 219

    (112) accion_params -> LPAREN . accion_params_2
    (113) accion_params_2 -> . accion_params_cte RPAREN
    (114) accion_params_2 -> . RPAREN
    (115) accion_params_cte -> . var_cte accion_params_cte_2
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    RPAREN          shift and go to state 242
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    accion_params_2                shift and go to state 240
    accion_params_cte              shift and go to state 241
    var_cte                        shift and go to state 243
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 220

    (33) asignacion_array -> LBRACKET super_exp asignacion_3 .

    EQUAL           reduce using rule 33 (asignacion_array -> LBRACKET super_exp asignacion_3 .)


state 221

    (36) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 36 (asignacion_3 -> RBRACKET .)


state 222

    (37) asignacion_3 -> COMMA . super_exp RBRACKET
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 244
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 223

    (57) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 57 (llamada_exp2 -> COMMA llamada_exp .)


state 224

    (29) print -> PRINT LPAREN super_exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 245


state 225

    (130) for -> for_init LPAREN for_exp COMMA . for_exp COMMA for_exp2 for_rparen bloque for_end
    (131) for_exp -> . exp
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    for_exp                        shift and go to state 246
    exp                            shift and go to state 192
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 226

    (136) while -> while_init LPAREN super_exp rparen_while . bloque while_end
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    while_init                     shift and go to state 70
    bloque                         shift and go to state 247
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 227

    (138) rparen_while -> RPAREN .

    ID              reduce using rule 138 (rparen_while -> RPAREN .)
    DRAW            reduce using rule 138 (rparen_while -> RPAREN .)
    PRINT           reduce using rule 138 (rparen_while -> RPAREN .)
    IF              reduce using rule 138 (rparen_while -> RPAREN .)
    FOR             reduce using rule 138 (rparen_while -> RPAREN .)
    WHILE           reduce using rule 138 (rparen_while -> RPAREN .)
    INT             reduce using rule 138 (rparen_while -> RPAREN .)
    FLOAT           reduce using rule 138 (rparen_while -> RPAREN .)
    BOOLEAN         reduce using rule 138 (rparen_while -> RPAREN .)
    ARRAY           reduce using rule 138 (rparen_while -> RPAREN .)
    END             reduce using rule 138 (rparen_while -> RPAREN .)


state 228

    (145) funcion_2 -> RETURN super_exp . SEMICOLON END

    SEMICOLON       shift and go to state 248


state 229

    (151) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 151 (var_local_3 -> COMMA var_local_2 .)


state 230

    (38) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 231

    (93) var_cte_2 -> LBRACKET super_exp var_cte_3 .

    TIMES           reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    DIVIDE          reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    PERCENT         reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    PLUS            reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    MINUS           reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    GREATER         reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    LESS            reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    LESSEQUAL       reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    DEQUAL          reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    DISTINT         reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    AND             reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    OR              reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    SEMICOLON       reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    COMMA           reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    RPAREN          reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)
    RBRACKET        reduce using rule 93 (var_cte_2 -> LBRACKET super_exp var_cte_3 .)


state 232

    (95) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 95 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 95 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 95 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 95 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 95 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 95 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 95 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 95 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 95 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 95 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 95 (var_cte_3 -> RBRACKET .)
    AND             reduce using rule 95 (var_cte_3 -> RBRACKET .)
    OR              reduce using rule 95 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 95 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 95 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 95 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 95 (var_cte_3 -> RBRACKET .)


state 233

    (96) var_cte_3 -> COMMA . super_exp RBRACKET
    (65) super_exp -> . expresion super_exp_2
    (68) expresion -> . exp expresion_2
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    super_exp                      shift and go to state 250
    expresion                      shift and go to state 82
    exp                            shift and go to state 83
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 234

    (63) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 63 (def_array_cte_2 -> COMMA def_array_cte .)


state 235

    (44) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 251


state 236

    (43) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER ID

    GREATER         shift and go to state 252


state 237

    (45) array_2 -> empty .

    GREATER         reduce using rule 45 (array_2 -> empty .)


state 238

    (102) condicion -> condicion_id LPAREN super_exp rparen_condicion bloque . condicion_2
    (105) condicion_2 -> . condicion_end
    (106) condicion_2 -> . condicion_else bloque condicion_end
    (108) condicion_end -> . END
    (107) condicion_else -> . ELSE

    END             shift and go to state 256
    ELSE            shift and go to state 257

    condicion_2                    shift and go to state 253
    condicion_end                  shift and go to state 254
    condicion_else                 shift and go to state 255

state 239

    (111) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    PRINT           reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 111 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 240

    (112) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 112 (accion_params -> LPAREN accion_params_2 .)


state 241

    (113) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 258


state 242

    (114) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 114 (accion_params_2 -> RPAREN .)


state 243

    (115) accion_params_cte -> var_cte . accion_params_cte_2
    (116) accion_params_cte_2 -> . COMMA accion_params_cte
    (117) accion_params_cte_2 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 260
    RPAREN          reduce using rule 160 (empty -> .)

    accion_params_cte_2            shift and go to state 259
    empty                          shift and go to state 261

state 244

    (37) asignacion_3 -> COMMA super_exp . RBRACKET

    RBRACKET        shift and go to state 262


state 245

    (29) print -> PRINT LPAREN super_exp RPAREN SEMICOLON .

    ID              reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    DRAW            reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    IF              reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    INT             reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    FLOAT           reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    ARRAY           reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    END             reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)
    ELSE            reduce using rule 29 (print -> PRINT LPAREN super_exp RPAREN SEMICOLON .)


state 246

    (130) for -> for_init LPAREN for_exp COMMA for_exp . COMMA for_exp2 for_rparen bloque for_end

    COMMA           shift and go to state 263


state 247

    (136) while -> while_init LPAREN super_exp rparen_while bloque . while_end
    (139) while_end -> . END

    END             shift and go to state 265

    while_end                      shift and go to state 264

state 248

    (145) funcion_2 -> RETURN super_exp SEMICOLON . END

    END             shift and go to state 266


state 249

    (38) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    GLOBAL          reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    MAIN            reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 38 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 250

    (96) var_cte_3 -> COMMA super_exp . RBRACKET

    RBRACKET        shift and go to state 267


state 251

    (44) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 44 (array_2 -> COMMA CTE_I .)


state 252

    (43) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER . ID

    ID              shift and go to state 268


state 253

    (102) condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .

    ID              reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    DRAW            reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    PRINT           reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    IF              reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    FOR             reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    WHILE           reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    INT             reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    FLOAT           reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    BOOLEAN         reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    ARRAY           reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    END             reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    RETURN          reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)
    ELSE            reduce using rule 102 (condicion -> condicion_id LPAREN super_exp rparen_condicion bloque condicion_2 .)


state 254

    (105) condicion_2 -> condicion_end .

    ID              reduce using rule 105 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 105 (condicion_2 -> condicion_end .)
    PRINT           reduce using rule 105 (condicion_2 -> condicion_end .)
    IF              reduce using rule 105 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 105 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 105 (condicion_2 -> condicion_end .)
    INT             reduce using rule 105 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 105 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 105 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 105 (condicion_2 -> condicion_end .)
    END             reduce using rule 105 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 105 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 105 (condicion_2 -> condicion_end .)


state 255

    (106) condicion_2 -> condicion_else . bloque condicion_end
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    bloque                         shift and go to state 269
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    for_init                       shift and go to state 69
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 256

    (108) condicion_end -> END .

    ID              reduce using rule 108 (condicion_end -> END .)
    DRAW            reduce using rule 108 (condicion_end -> END .)
    PRINT           reduce using rule 108 (condicion_end -> END .)
    IF              reduce using rule 108 (condicion_end -> END .)
    FOR             reduce using rule 108 (condicion_end -> END .)
    WHILE           reduce using rule 108 (condicion_end -> END .)
    INT             reduce using rule 108 (condicion_end -> END .)
    FLOAT           reduce using rule 108 (condicion_end -> END .)
    BOOLEAN         reduce using rule 108 (condicion_end -> END .)
    ARRAY           reduce using rule 108 (condicion_end -> END .)
    END             reduce using rule 108 (condicion_end -> END .)
    RETURN          reduce using rule 108 (condicion_end -> END .)
    ELSE            reduce using rule 108 (condicion_end -> END .)


state 257

    (107) condicion_else -> ELSE .

    ID              reduce using rule 107 (condicion_else -> ELSE .)
    DRAW            reduce using rule 107 (condicion_else -> ELSE .)
    PRINT           reduce using rule 107 (condicion_else -> ELSE .)
    IF              reduce using rule 107 (condicion_else -> ELSE .)
    FOR             reduce using rule 107 (condicion_else -> ELSE .)
    WHILE           reduce using rule 107 (condicion_else -> ELSE .)
    INT             reduce using rule 107 (condicion_else -> ELSE .)
    FLOAT           reduce using rule 107 (condicion_else -> ELSE .)
    BOOLEAN         reduce using rule 107 (condicion_else -> ELSE .)
    ARRAY           reduce using rule 107 (condicion_else -> ELSE .)
    END             reduce using rule 107 (condicion_else -> ELSE .)


state 258

    (113) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 113 (accion_params_2 -> accion_params_cte RPAREN .)


state 259

    (115) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 115 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 260

    (116) accion_params_cte_2 -> COMMA . accion_params_cte
    (115) accion_params_cte -> . var_cte accion_params_cte_2
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    accion_params_cte              shift and go to state 270
    var_cte                        shift and go to state 243
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 261

    (117) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 117 (accion_params_cte_2 -> empty .)


state 262

    (37) asignacion_3 -> COMMA super_exp RBRACKET .

    EQUAL           reduce using rule 37 (asignacion_3 -> COMMA super_exp RBRACKET .)


state 263

    (130) for -> for_init LPAREN for_exp COMMA for_exp COMMA . for_exp2 for_rparen bloque for_end
    (132) for_exp2 -> . exp
    (77) exp -> . termino exp_2
    (80) termino -> . factor termino_2
    (97) factor -> . lparen_factor super_exp rparen_factor
    (98) factor -> . addop var_cte
    (99) factor -> . var_cte
    (100) lparen_factor -> . LPAREN
    (153) addop -> . PLUS
    (154) addop -> . MINUS
    (83) var_cte -> . var_cte_1
    (84) var_cte -> . var_cte_i
    (85) var_cte -> . var_cte_f
    (86) var_cte -> . var_cte_b
    (87) var_cte -> . llamada
    (92) var_cte_1 -> . ID var_cte_2
    (88) var_cte_i -> . CTE_I
    (89) var_cte_f -> . CTE_F
    (90) var_cte_b -> . TRUE
    (91) var_cte_b -> . FALSE
    (50) llamada -> . llamada_id llamada_2
    (51) llamada_id -> . ID LPAREN

    LPAREN          shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ID              shift and go to state 97
    CTE_I           shift and go to state 98
    CTE_F           shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101

    for_exp2                       shift and go to state 271
    exp                            shift and go to state 272
    termino                        shift and go to state 84
    factor                         shift and go to state 85
    lparen_factor                  shift and go to state 86
    addop                          shift and go to state 87
    var_cte                        shift and go to state 88
    var_cte_1                      shift and go to state 92
    var_cte_i                      shift and go to state 93
    var_cte_f                      shift and go to state 94
    var_cte_b                      shift and go to state 95
    llamada                        shift and go to state 96
    llamada_id                     shift and go to state 66

state 264

    (136) while -> while_init LPAREN super_exp rparen_while bloque while_end .

    ID              reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    DRAW            reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    PRINT           reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    IF              reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    FOR             reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    WHILE           reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    INT             reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    FLOAT           reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    BOOLEAN         reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    ARRAY           reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    END             reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    RETURN          reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)
    ELSE            reduce using rule 136 (while -> while_init LPAREN super_exp rparen_while bloque while_end .)


state 265

    (139) while_end -> END .

    ID              reduce using rule 139 (while_end -> END .)
    DRAW            reduce using rule 139 (while_end -> END .)
    PRINT           reduce using rule 139 (while_end -> END .)
    IF              reduce using rule 139 (while_end -> END .)
    FOR             reduce using rule 139 (while_end -> END .)
    WHILE           reduce using rule 139 (while_end -> END .)
    INT             reduce using rule 139 (while_end -> END .)
    FLOAT           reduce using rule 139 (while_end -> END .)
    BOOLEAN         reduce using rule 139 (while_end -> END .)
    ARRAY           reduce using rule 139 (while_end -> END .)
    END             reduce using rule 139 (while_end -> END .)
    RETURN          reduce using rule 139 (while_end -> END .)
    ELSE            reduce using rule 139 (while_end -> END .)


state 266

    (145) funcion_2 -> RETURN super_exp SEMICOLON END .

    DEF             reduce using rule 145 (funcion_2 -> RETURN super_exp SEMICOLON END .)
    MAIN            reduce using rule 145 (funcion_2 -> RETURN super_exp SEMICOLON END .)


state 267

    (96) var_cte_3 -> COMMA super_exp RBRACKET .

    TIMES           reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    DIVIDE          reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    PERCENT         reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    PLUS            reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    MINUS           reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    GREATER         reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    GREATEREQUAL    reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    LESS            reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    LESSEQUAL       reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    DEQUAL          reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    DISTINT         reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    AND             reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    OR              reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    SEMICOLON       reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    COMMA           reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    RPAREN          reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)
    RBRACKET        reduce using rule 96 (var_cte_3 -> COMMA super_exp RBRACKET .)


state 268

    (43) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID .

    EQUAL           reduce using rule 43 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID .)
    SEMICOLON       reduce using rule 43 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID .)


state 269

    (106) condicion_2 -> condicion_else bloque . condicion_end
    (108) condicion_end -> . END

    END             shift and go to state 256

    condicion_end                  shift and go to state 273

state 270

    (116) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 116 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 271

    (130) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 . for_rparen bloque for_end
    (133) for_rparen -> . RPAREN

    RPAREN          shift and go to state 275

    for_rparen                     shift and go to state 274

state 272

    (132) for_exp2 -> exp .

    RPAREN          reduce using rule 132 (for_exp2 -> exp .)


state 273

    (106) condicion_2 -> condicion_else bloque condicion_end .

    ID              reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    DRAW            reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    PRINT           reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    IF              reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    FOR             reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    WHILE           reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    INT             reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    FLOAT           reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    BOOLEAN         reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    ARRAY           reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    END             reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    RETURN          reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)
    ELSE            reduce using rule 106 (condicion_2 -> condicion_else bloque condicion_end .)


state 274

    (130) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen . bloque for_end
    (12) bloque -> . estatuto bloque
    (13) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (28) estatuto -> . print
    (160) empty -> .
    (30) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (102) condicion -> . condicion_id LPAREN super_exp rparen_condicion bloque condicion_2
    (109) ciclo -> . for
    (110) ciclo -> . while
    (111) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (38) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (39) vars -> . vars_id vars2
    (40) vars -> . vars_aux
    (50) llamada -> . llamada_id llamada_2
    (29) print -> . PRINT LPAREN super_exp RPAREN SEMICOLON
    (31) asignacion_id -> . ID asignacion_array
    (104) condicion_id -> . IF
    (130) for -> . for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end
    (136) while -> . while_init LPAREN super_exp rparen_while bloque while_end
    (41) vars_id -> . data_type ID
    (42) vars_aux -> . array vars3
    (51) llamada_id -> . ID LPAREN
    (134) for_init -> . FOR
    (137) while_init -> . WHILE
    (14) data_type -> . INT
    (15) data_type -> . FLOAT
    (16) data_type -> . BOOLEAN
    (43) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER ID

    END             reduce using rule 160 (empty -> .)
    ID              shift and go to state 65
    DRAW            shift and go to state 16
    PRINT           shift and go to state 67
    IF              shift and go to state 68
    FOR             shift and go to state 71
    WHILE           shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    BOOLEAN         shift and go to state 23
    ARRAY           shift and go to state 24

    for_init                       shift and go to state 69
    bloque                         shift and go to state 276
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    ciclo                          shift and go to state 56
    accion                         shift and go to state 57
    vars                           shift and go to state 58
    llamada                        shift and go to state 59
    print                          shift and go to state 60
    asignacion_id                  shift and go to state 61
    condicion_id                   shift and go to state 62
    for                            shift and go to state 63
    while                          shift and go to state 64
    vars_id                        shift and go to state 17
    vars_aux                       shift and go to state 18
    llamada_id                     shift and go to state 66
    while_init                     shift and go to state 70
    data_type                      shift and go to state 19
    array                          shift and go to state 20

state 275

    (133) for_rparen -> RPAREN .

    ID              reduce using rule 133 (for_rparen -> RPAREN .)
    DRAW            reduce using rule 133 (for_rparen -> RPAREN .)
    PRINT           reduce using rule 133 (for_rparen -> RPAREN .)
    IF              reduce using rule 133 (for_rparen -> RPAREN .)
    FOR             reduce using rule 133 (for_rparen -> RPAREN .)
    WHILE           reduce using rule 133 (for_rparen -> RPAREN .)
    INT             reduce using rule 133 (for_rparen -> RPAREN .)
    FLOAT           reduce using rule 133 (for_rparen -> RPAREN .)
    BOOLEAN         reduce using rule 133 (for_rparen -> RPAREN .)
    ARRAY           reduce using rule 133 (for_rparen -> RPAREN .)
    END             reduce using rule 133 (for_rparen -> RPAREN .)


state 276

    (130) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque . for_end
    (135) for_end -> . END

    END             shift and go to state 278

    for_end                        shift and go to state 277

state 277

    (130) for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .

    ID              reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    DRAW            reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    PRINT           reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    IF              reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    FOR             reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    WHILE           reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    INT             reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    FLOAT           reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    BOOLEAN         reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    ARRAY           reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    END             reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    RETURN          reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)
    ELSE            reduce using rule 130 (for -> for_init LPAREN for_exp COMMA for_exp COMMA for_exp2 for_rparen bloque for_end .)


state 278

    (135) for_end -> END .

    ID              reduce using rule 135 (for_end -> END .)
    DRAW            reduce using rule 135 (for_end -> END .)
    PRINT           reduce using rule 135 (for_end -> END .)
    IF              reduce using rule 135 (for_end -> END .)
    FOR             reduce using rule 135 (for_end -> END .)
    WHILE           reduce using rule 135 (for_end -> END .)
    INT             reduce using rule 135 (for_end -> END .)
    FLOAT           reduce using rule 135 (for_end -> END .)
    BOOLEAN         reduce using rule 135 (for_end -> END .)
    ARRAY           reduce using rule 135 (for_end -> END .)
    END             reduce using rule 135 (for_end -> END .)
    RETURN          reduce using rule 135 (for_end -> END .)
    ELSE            reduce using rule 135 (for_end -> END .)

