Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTES
    AND
    OR
    SETPOSITION
    SETCOLOR
    SPEED
    FORWARD
    LEFT
    RIGHT
    BACK
    HIDE
    SHOW
    CLEAR
    SQUARE
    CIRCLE
    LENGTH

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funcion main
Rule 2     programa -> main
Rule 3     programa -> funcion main
Rule 4     globales -> GLOBAL vars
Rule 5     bloque -> estatuto bloque
Rule 6     bloque -> empty
Rule 7     data_type -> INT
Rule 8     data_type -> FLOAT
Rule 9     data_type -> BOOLEAN
Rule 10    main -> DEF VOID MAIN LPAREN RPAREN bloque END
Rule 11    estatuto -> asignacion
Rule 12    estatuto -> condicion
Rule 13    estatuto -> ciclo
Rule 14    estatuto -> accion
Rule 15    estatuto -> vars
Rule 16    estatuto -> llamada SEMICOLON
Rule 17    asignacion -> ID asignacion_2
Rule 18    asignacion_2 -> EQUAL expresion
Rule 19    asignacion_2 -> LBRACKET CTE_I asignacion_3
Rule 20    asignacion_3 -> RBRACKET
Rule 21    asignacion_3 -> COMMA CTE_I RBRACKET
Rule 22    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 23    vars -> data_type ID vars2
Rule 24    vars -> ARRAY ID vars3
Rule 25    vars2 -> EQUAL expresion SEMICOLON
Rule 26    vars2 -> SEMICOLON
Rule 27    vars3 -> EQUAL def_array SEMICOLON
Rule 28    vars3 -> SEMICOLON
Rule 29    llamada -> ID LPAREN llamada_2
Rule 30    llamada_2 -> llamada_exp RPAREN
Rule 31    llamada_2 -> RPAREN
Rule 32    llamada_exp -> expresion llamada_exp2
Rule 33    llamada_exp2 -> COMMA llamada_exp
Rule 34    llamada_exp2 -> empty
Rule 35    def_array -> LBRACKET def_array_2
Rule 36    def_array_2 -> def_array_cte RBRACKET
Rule 37    def_array_2 -> RBRACKET
Rule 38    def_array_cte -> var_cte def_array_cte_2
Rule 39    def_array_cte_2 -> COMMA def_array_cte
Rule 40    def_array_cte_2 -> empty
Rule 41    expresion -> exp expresion_2
Rule 42    expresion_2 -> relop exp
Rule 43    expresion_2 -> empty
Rule 44    relop -> GREATER
Rule 45    relop -> GREATEREQUAL
Rule 46    relop -> LESS
Rule 47    relop -> LESSEQUAL
Rule 48    relop -> DEQUAL
Rule 49    relop -> DISTINT
Rule 50    exp -> termino exp_2
Rule 51    exp_2 -> addop exp
Rule 52    exp_2 -> empty
Rule 53    termino -> factor termino_2
Rule 54    termino_2 -> timesop termino
Rule 55    termino_2 -> empty
Rule 56    var_cte -> ID
Rule 57    var_cte -> CTE_I
Rule 58    var_cte -> CTE_F
Rule 59    var_cte -> TRUE
Rule 60    var_cte -> FALSE
Rule 61    var_cte -> llamada
Rule 62    factor -> LPAREN expresion RPAREN
Rule 63    factor -> addop var_cte
Rule 64    factor -> var_cte
Rule 65    factor -> ID LBRACKET exp factor_2
Rule 66    factor_2 -> RBRACKET
Rule 67    factor_2 -> COMMA exp RBRACKET
Rule 68    condicion -> IF LPAREN expresion RPAREN bloque condicion_2
Rule 69    condicion_2 -> END
Rule 70    condicion_2 -> ELSE bloque END
Rule 71    ciclo -> for
Rule 72    ciclo -> while
Rule 73    accion -> ID POINT llamada SEMICOLON
Rule 74    for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
Rule 75    while -> WHILE LPAREN expresion RPAREN bloque END
Rule 76    funcion -> DEF data_type ID var_local bloque funcion_2
Rule 77    funcion_2 -> RETURN expresion END
Rule 78    funcion_2 -> END
Rule 79    var_local -> ID LPAREN var_local_2 RPAREN
Rule 80    var_local_2 -> data_type ID var_local_3
Rule 81    var_local_3 -> COMMA var_local_2
Rule 82    var_local_3 -> empty
Rule 83    addop -> PLUS
Rule 84    addop -> MINUS
Rule 85    timesop -> TIMES
Rule 86    timesop -> DIVIDE
Rule 87    timesop -> PERCENT
Rule 88    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 24
BACK                 : 
BOOLEAN              : 9
CIRCLE               : 
CLEAR                : 
COMMA                : 21 33 39 67 74 81
CTE_F                : 58
CTE_I                : 19 21 57 74 74
DEF                  : 10 76
DEQUAL               : 48
DISTINT              : 49
DIVIDE               : 86
DRAW                 : 22
ELSE                 : 70
END                  : 10 69 70 74 75 77 78
EQUAL                : 18 22 25 27
FALSE                : 60
FLOAT                : 8
FOR                  : 74
FORWARD              : 
GLOBAL               : 4
GREATER              : 44
GREATEREQUAL         : 45
HIDE                 : 
ID                   : 17 22 23 24 29 56 65 73 76 79 80
IF                   : 68
INT                  : 7
LBRACKET             : 19 35 65
LEFT                 : 
LENGTH               : 
LESS                 : 46
LESSEQUAL            : 47
LPAREN               : 10 22 29 62 68 74 75 79
MAIN                 : 10
MINUS                : 84
NEWDRAW              : 22
OR                   : 
PERCENT              : 87
PLUS                 : 83
POINT                : 73
QUOTES               : 
RBRACKET             : 20 21 36 37 66 67
RETURN               : 77
RIGHT                : 
RPAREN               : 10 22 30 31 62 68 74 75 79
SEMICOLON            : 16 22 25 26 27 28 73
SETCOLOR             : 
SETPOSITION          : 
SHOW                 : 
SPEED                : 
SQUARE               : 
TIMES                : 85
TRUE                 : 59
VOID                 : 10
WHILE                : 75
error                : 

Nonterminals, with rules where they appear

accion               : 14
addop                : 51 63
asignacion           : 11
asignacion_2         : 17
asignacion_3         : 19
bloque               : 5 10 68 70 74 75 76
ciclo                : 13
condicion            : 12
condicion_2          : 68
data_type            : 23 76 80
def_array            : 27
def_array_2          : 35
def_array_cte        : 36 39
def_array_cte_2      : 38
empty                : 6 34 40 43 52 55 82
estatuto             : 5
exp                  : 41 42 51 65 67
exp_2                : 50
expresion            : 18 25 32 62 68 75 77
expresion_2          : 41
factor               : 53
factor_2             : 65
for                  : 71
funcion              : 1 3
funcion_2            : 76
globales             : 1
llamada              : 16 61 73
llamada_2            : 29
llamada_exp          : 30 33
llamada_exp2         : 32
main                 : 1 2 3
programa             : 0
relop                : 42
termino              : 50 54
termino_2            : 53
timesop              : 54
var_cte              : 38 63 64
var_local            : 76
var_local_2          : 79 81
var_local_3          : 80
vars                 : 4 15
vars2                : 23
vars3                : 24
while                : 72

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funcion main
    (2) programa -> . main
    (3) programa -> . funcion main
    (4) globales -> . GLOBAL vars
    (10) main -> . DEF VOID MAIN LPAREN RPAREN bloque END
    (76) funcion -> . DEF data_type ID var_local bloque funcion_2

    GLOBAL          shift and go to state 5
    DEF             shift and go to state 6

    programa                       shift and go to state 1
    globales                       shift and go to state 2
    funcion                        shift and go to state 3
    main                           shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (1) programa -> globales . funcion main
    (76) funcion -> . DEF data_type ID var_local bloque funcion_2

    DEF             shift and go to state 8

    funcion                        shift and go to state 7

state 3

    (3) programa -> funcion . main
    (10) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    DEF             shift and go to state 10

    main                           shift and go to state 9

state 4

    (2) programa -> main .

    $end            reduce using rule 2 (programa -> main .)


state 5

    (4) globales -> GLOBAL . vars
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    vars                           shift and go to state 11
    data_type                      shift and go to state 13

state 6

    (10) main -> DEF . VOID MAIN LPAREN RPAREN bloque END
    (76) funcion -> DEF . data_type ID var_local bloque funcion_2
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    VOID            shift and go to state 18
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 19

state 7

    (1) programa -> globales funcion . main
    (10) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    DEF             shift and go to state 10

    main                           shift and go to state 20

state 8

    (76) funcion -> DEF . data_type ID var_local bloque funcion_2
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 19

state 9

    (3) programa -> funcion main .

    $end            reduce using rule 3 (programa -> funcion main .)


state 10

    (10) main -> DEF . VOID MAIN LPAREN RPAREN bloque END

    VOID            shift and go to state 18


state 11

    (4) globales -> GLOBAL vars .

    DEF             reduce using rule 4 (globales -> GLOBAL vars .)


state 12

    (22) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 21


state 13

    (23) vars -> data_type . ID vars2

    ID              shift and go to state 22


state 14

    (24) vars -> ARRAY . ID vars3

    ID              shift and go to state 23


state 15

    (7) data_type -> INT .

    ID              reduce using rule 7 (data_type -> INT .)


state 16

    (8) data_type -> FLOAT .

    ID              reduce using rule 8 (data_type -> FLOAT .)


state 17

    (9) data_type -> BOOLEAN .

    ID              reduce using rule 9 (data_type -> BOOLEAN .)


state 18

    (10) main -> DEF VOID . MAIN LPAREN RPAREN bloque END

    MAIN            shift and go to state 24


state 19

    (76) funcion -> DEF data_type . ID var_local bloque funcion_2

    ID              shift and go to state 25


state 20

    (1) programa -> globales funcion main .

    $end            reduce using rule 1 (programa -> globales funcion main .)


state 21

    (22) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 26


state 22

    (23) vars -> data_type ID . vars2
    (25) vars2 -> . EQUAL expresion SEMICOLON
    (26) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 28
    SEMICOLON       shift and go to state 29

    vars2                          shift and go to state 27

state 23

    (24) vars -> ARRAY ID . vars3
    (27) vars3 -> . EQUAL def_array SEMICOLON
    (28) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 31
    SEMICOLON       shift and go to state 32

    vars3                          shift and go to state 30

state 24

    (10) main -> DEF VOID MAIN . LPAREN RPAREN bloque END

    LPAREN          shift and go to state 33


state 25

    (76) funcion -> DEF data_type ID . var_local bloque funcion_2
    (79) var_local -> . ID LPAREN var_local_2 RPAREN

    ID              shift and go to state 34

    var_local                      shift and go to state 35

state 26

    (22) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 36


state 27

    (23) vars -> data_type ID vars2 .

    DEF             reduce using rule 23 (vars -> data_type ID vars2 .)
    ID              reduce using rule 23 (vars -> data_type ID vars2 .)
    IF              reduce using rule 23 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 23 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 23 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 23 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 23 (vars -> data_type ID vars2 .)
    INT             reduce using rule 23 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 23 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 23 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 23 (vars -> data_type ID vars2 .)
    END             reduce using rule 23 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 23 (vars -> data_type ID vars2 .)


state 28

    (25) vars2 -> EQUAL . expresion SEMICOLON
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    expresion                      shift and go to state 37
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 29

    (26) vars2 -> SEMICOLON .

    DEF             reduce using rule 26 (vars2 -> SEMICOLON .)
    ID              reduce using rule 26 (vars2 -> SEMICOLON .)
    IF              reduce using rule 26 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 26 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 26 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 26 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 26 (vars2 -> SEMICOLON .)
    INT             reduce using rule 26 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 26 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 26 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 26 (vars2 -> SEMICOLON .)
    END             reduce using rule 26 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 26 (vars2 -> SEMICOLON .)


state 30

    (24) vars -> ARRAY ID vars3 .

    DEF             reduce using rule 24 (vars -> ARRAY ID vars3 .)
    ID              reduce using rule 24 (vars -> ARRAY ID vars3 .)
    IF              reduce using rule 24 (vars -> ARRAY ID vars3 .)
    DRAW            reduce using rule 24 (vars -> ARRAY ID vars3 .)
    ARRAY           reduce using rule 24 (vars -> ARRAY ID vars3 .)
    FOR             reduce using rule 24 (vars -> ARRAY ID vars3 .)
    WHILE           reduce using rule 24 (vars -> ARRAY ID vars3 .)
    INT             reduce using rule 24 (vars -> ARRAY ID vars3 .)
    FLOAT           reduce using rule 24 (vars -> ARRAY ID vars3 .)
    BOOLEAN         reduce using rule 24 (vars -> ARRAY ID vars3 .)
    RETURN          reduce using rule 24 (vars -> ARRAY ID vars3 .)
    END             reduce using rule 24 (vars -> ARRAY ID vars3 .)
    ELSE            reduce using rule 24 (vars -> ARRAY ID vars3 .)


state 31

    (27) vars3 -> EQUAL . def_array SEMICOLON
    (35) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 53

    def_array                      shift and go to state 52

state 32

    (28) vars3 -> SEMICOLON .

    DEF             reduce using rule 28 (vars3 -> SEMICOLON .)
    ID              reduce using rule 28 (vars3 -> SEMICOLON .)
    IF              reduce using rule 28 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 28 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 28 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 28 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 28 (vars3 -> SEMICOLON .)
    INT             reduce using rule 28 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 28 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 28 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 28 (vars3 -> SEMICOLON .)
    END             reduce using rule 28 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 28 (vars3 -> SEMICOLON .)


state 33

    (10) main -> DEF VOID MAIN LPAREN . RPAREN bloque END

    RPAREN          shift and go to state 54


state 34

    (79) var_local -> ID . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 55


state 35

    (76) funcion -> DEF data_type ID var_local . bloque funcion_2
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    RETURN          reduce using rule 88 (empty -> .)
    END             reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 13
    bloque                         shift and go to state 57
    estatuto                       shift and go to state 58
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68

state 36

    (22) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 71


state 37

    (25) vars2 -> EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 72


state 38

    (41) expresion -> exp . expresion_2
    (42) expresion_2 -> . relop exp
    (43) expresion_2 -> . empty
    (44) relop -> . GREATER
    (45) relop -> . GREATEREQUAL
    (46) relop -> . LESS
    (47) relop -> . LESSEQUAL
    (48) relop -> . DEQUAL
    (49) relop -> . DISTINT
    (88) empty -> .

    GREATER         shift and go to state 76
    GREATEREQUAL    shift and go to state 77
    LESS            shift and go to state 78
    LESSEQUAL       shift and go to state 79
    DEQUAL          shift and go to state 80
    DISTINT         shift and go to state 81
    SEMICOLON       reduce using rule 88 (empty -> .)
    RPAREN          reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    ID              reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    DRAW            reduce using rule 88 (empty -> .)
    ARRAY           reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    INT             reduce using rule 88 (empty -> .)
    FLOAT           reduce using rule 88 (empty -> .)
    BOOLEAN         reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    END             reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)

    expresion_2                    shift and go to state 73
    relop                          shift and go to state 74
    empty                          shift and go to state 75

state 39

    (50) exp -> termino . exp_2
    (51) exp_2 -> . addop exp
    (52) exp_2 -> . empty
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (88) empty -> .

    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    GREATER         reduce using rule 88 (empty -> .)
    GREATEREQUAL    reduce using rule 88 (empty -> .)
    LESS            reduce using rule 88 (empty -> .)
    LESSEQUAL       reduce using rule 88 (empty -> .)
    DEQUAL          reduce using rule 88 (empty -> .)
    DISTINT         reduce using rule 88 (empty -> .)
    SEMICOLON       reduce using rule 88 (empty -> .)
    RPAREN          reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    ID              reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    DRAW            reduce using rule 88 (empty -> .)
    ARRAY           reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    INT             reduce using rule 88 (empty -> .)
    FLOAT           reduce using rule 88 (empty -> .)
    BOOLEAN         reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    END             reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)
    RBRACKET        reduce using rule 88 (empty -> .)

    exp_2                          shift and go to state 82
    addop                          shift and go to state 83
    empty                          shift and go to state 84

state 40

    (53) termino -> factor . termino_2
    (54) termino_2 -> . timesop termino
    (55) termino_2 -> . empty
    (85) timesop -> . TIMES
    (86) timesop -> . DIVIDE
    (87) timesop -> . PERCENT
    (88) empty -> .

    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89
    PERCENT         shift and go to state 90
    PLUS            reduce using rule 88 (empty -> .)
    MINUS           reduce using rule 88 (empty -> .)
    GREATER         reduce using rule 88 (empty -> .)
    GREATEREQUAL    reduce using rule 88 (empty -> .)
    LESS            reduce using rule 88 (empty -> .)
    LESSEQUAL       reduce using rule 88 (empty -> .)
    DEQUAL          reduce using rule 88 (empty -> .)
    DISTINT         reduce using rule 88 (empty -> .)
    SEMICOLON       reduce using rule 88 (empty -> .)
    RPAREN          reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    ID              reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    DRAW            reduce using rule 88 (empty -> .)
    ARRAY           reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    INT             reduce using rule 88 (empty -> .)
    FLOAT           reduce using rule 88 (empty -> .)
    BOOLEAN         reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    END             reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)
    RBRACKET        reduce using rule 88 (empty -> .)

    termino_2                      shift and go to state 85
    timesop                        shift and go to state 86
    empty                          shift and go to state 87

state 41

    (62) factor -> LPAREN . expresion RPAREN
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    expresion                      shift and go to state 91
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 42

    (63) factor -> addop . var_cte
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 93
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    var_cte                        shift and go to state 92
    llamada                        shift and go to state 51

state 43

    (64) factor -> var_cte .

    TIMES           reduce using rule 64 (factor -> var_cte .)
    DIVIDE          reduce using rule 64 (factor -> var_cte .)
    PERCENT         reduce using rule 64 (factor -> var_cte .)
    PLUS            reduce using rule 64 (factor -> var_cte .)
    MINUS           reduce using rule 64 (factor -> var_cte .)
    GREATER         reduce using rule 64 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 64 (factor -> var_cte .)
    LESS            reduce using rule 64 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 64 (factor -> var_cte .)
    DEQUAL          reduce using rule 64 (factor -> var_cte .)
    DISTINT         reduce using rule 64 (factor -> var_cte .)
    SEMICOLON       reduce using rule 64 (factor -> var_cte .)
    RPAREN          reduce using rule 64 (factor -> var_cte .)
    COMMA           reduce using rule 64 (factor -> var_cte .)
    ID              reduce using rule 64 (factor -> var_cte .)
    IF              reduce using rule 64 (factor -> var_cte .)
    DRAW            reduce using rule 64 (factor -> var_cte .)
    ARRAY           reduce using rule 64 (factor -> var_cte .)
    FOR             reduce using rule 64 (factor -> var_cte .)
    WHILE           reduce using rule 64 (factor -> var_cte .)
    INT             reduce using rule 64 (factor -> var_cte .)
    FLOAT           reduce using rule 64 (factor -> var_cte .)
    BOOLEAN         reduce using rule 64 (factor -> var_cte .)
    RETURN          reduce using rule 64 (factor -> var_cte .)
    END             reduce using rule 64 (factor -> var_cte .)
    ELSE            reduce using rule 64 (factor -> var_cte .)
    RBRACKET        reduce using rule 64 (factor -> var_cte .)


state 44

    (65) factor -> ID . LBRACKET exp factor_2
    (56) var_cte -> ID .
    (29) llamada -> ID . LPAREN llamada_2

    LBRACKET        shift and go to state 94
    TIMES           reduce using rule 56 (var_cte -> ID .)
    DIVIDE          reduce using rule 56 (var_cte -> ID .)
    PERCENT         reduce using rule 56 (var_cte -> ID .)
    PLUS            reduce using rule 56 (var_cte -> ID .)
    MINUS           reduce using rule 56 (var_cte -> ID .)
    GREATER         reduce using rule 56 (var_cte -> ID .)
    GREATEREQUAL    reduce using rule 56 (var_cte -> ID .)
    LESS            reduce using rule 56 (var_cte -> ID .)
    LESSEQUAL       reduce using rule 56 (var_cte -> ID .)
    DEQUAL          reduce using rule 56 (var_cte -> ID .)
    DISTINT         reduce using rule 56 (var_cte -> ID .)
    SEMICOLON       reduce using rule 56 (var_cte -> ID .)
    RPAREN          reduce using rule 56 (var_cte -> ID .)
    COMMA           reduce using rule 56 (var_cte -> ID .)
    ID              reduce using rule 56 (var_cte -> ID .)
    IF              reduce using rule 56 (var_cte -> ID .)
    DRAW            reduce using rule 56 (var_cte -> ID .)
    ARRAY           reduce using rule 56 (var_cte -> ID .)
    FOR             reduce using rule 56 (var_cte -> ID .)
    WHILE           reduce using rule 56 (var_cte -> ID .)
    INT             reduce using rule 56 (var_cte -> ID .)
    FLOAT           reduce using rule 56 (var_cte -> ID .)
    BOOLEAN         reduce using rule 56 (var_cte -> ID .)
    RETURN          reduce using rule 56 (var_cte -> ID .)
    END             reduce using rule 56 (var_cte -> ID .)
    ELSE            reduce using rule 56 (var_cte -> ID .)
    RBRACKET        reduce using rule 56 (var_cte -> ID .)
    LPAREN          shift and go to state 95


state 45

    (83) addop -> PLUS .

    ID              reduce using rule 83 (addop -> PLUS .)
    CTE_I           reduce using rule 83 (addop -> PLUS .)
    CTE_F           reduce using rule 83 (addop -> PLUS .)
    TRUE            reduce using rule 83 (addop -> PLUS .)
    FALSE           reduce using rule 83 (addop -> PLUS .)
    LPAREN          reduce using rule 83 (addop -> PLUS .)
    PLUS            reduce using rule 83 (addop -> PLUS .)
    MINUS           reduce using rule 83 (addop -> PLUS .)


state 46

    (84) addop -> MINUS .

    ID              reduce using rule 84 (addop -> MINUS .)
    CTE_I           reduce using rule 84 (addop -> MINUS .)
    CTE_F           reduce using rule 84 (addop -> MINUS .)
    TRUE            reduce using rule 84 (addop -> MINUS .)
    FALSE           reduce using rule 84 (addop -> MINUS .)
    LPAREN          reduce using rule 84 (addop -> MINUS .)
    PLUS            reduce using rule 84 (addop -> MINUS .)
    MINUS           reduce using rule 84 (addop -> MINUS .)


state 47

    (57) var_cte -> CTE_I .

    TIMES           reduce using rule 57 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 57 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 57 (var_cte -> CTE_I .)
    PLUS            reduce using rule 57 (var_cte -> CTE_I .)
    MINUS           reduce using rule 57 (var_cte -> CTE_I .)
    GREATER         reduce using rule 57 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 57 (var_cte -> CTE_I .)
    LESS            reduce using rule 57 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 57 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 57 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 57 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 57 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 57 (var_cte -> CTE_I .)
    COMMA           reduce using rule 57 (var_cte -> CTE_I .)
    ID              reduce using rule 57 (var_cte -> CTE_I .)
    IF              reduce using rule 57 (var_cte -> CTE_I .)
    DRAW            reduce using rule 57 (var_cte -> CTE_I .)
    ARRAY           reduce using rule 57 (var_cte -> CTE_I .)
    FOR             reduce using rule 57 (var_cte -> CTE_I .)
    WHILE           reduce using rule 57 (var_cte -> CTE_I .)
    INT             reduce using rule 57 (var_cte -> CTE_I .)
    FLOAT           reduce using rule 57 (var_cte -> CTE_I .)
    BOOLEAN         reduce using rule 57 (var_cte -> CTE_I .)
    RETURN          reduce using rule 57 (var_cte -> CTE_I .)
    END             reduce using rule 57 (var_cte -> CTE_I .)
    ELSE            reduce using rule 57 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 57 (var_cte -> CTE_I .)


state 48

    (58) var_cte -> CTE_F .

    TIMES           reduce using rule 58 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 58 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 58 (var_cte -> CTE_F .)
    PLUS            reduce using rule 58 (var_cte -> CTE_F .)
    MINUS           reduce using rule 58 (var_cte -> CTE_F .)
    GREATER         reduce using rule 58 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 58 (var_cte -> CTE_F .)
    LESS            reduce using rule 58 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 58 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 58 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 58 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 58 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 58 (var_cte -> CTE_F .)
    COMMA           reduce using rule 58 (var_cte -> CTE_F .)
    ID              reduce using rule 58 (var_cte -> CTE_F .)
    IF              reduce using rule 58 (var_cte -> CTE_F .)
    DRAW            reduce using rule 58 (var_cte -> CTE_F .)
    ARRAY           reduce using rule 58 (var_cte -> CTE_F .)
    FOR             reduce using rule 58 (var_cte -> CTE_F .)
    WHILE           reduce using rule 58 (var_cte -> CTE_F .)
    INT             reduce using rule 58 (var_cte -> CTE_F .)
    FLOAT           reduce using rule 58 (var_cte -> CTE_F .)
    BOOLEAN         reduce using rule 58 (var_cte -> CTE_F .)
    RETURN          reduce using rule 58 (var_cte -> CTE_F .)
    END             reduce using rule 58 (var_cte -> CTE_F .)
    ELSE            reduce using rule 58 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 58 (var_cte -> CTE_F .)


state 49

    (59) var_cte -> TRUE .

    TIMES           reduce using rule 59 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 59 (var_cte -> TRUE .)
    PERCENT         reduce using rule 59 (var_cte -> TRUE .)
    PLUS            reduce using rule 59 (var_cte -> TRUE .)
    MINUS           reduce using rule 59 (var_cte -> TRUE .)
    GREATER         reduce using rule 59 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 59 (var_cte -> TRUE .)
    LESS            reduce using rule 59 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 59 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 59 (var_cte -> TRUE .)
    DISTINT         reduce using rule 59 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 59 (var_cte -> TRUE .)
    RPAREN          reduce using rule 59 (var_cte -> TRUE .)
    COMMA           reduce using rule 59 (var_cte -> TRUE .)
    ID              reduce using rule 59 (var_cte -> TRUE .)
    IF              reduce using rule 59 (var_cte -> TRUE .)
    DRAW            reduce using rule 59 (var_cte -> TRUE .)
    ARRAY           reduce using rule 59 (var_cte -> TRUE .)
    FOR             reduce using rule 59 (var_cte -> TRUE .)
    WHILE           reduce using rule 59 (var_cte -> TRUE .)
    INT             reduce using rule 59 (var_cte -> TRUE .)
    FLOAT           reduce using rule 59 (var_cte -> TRUE .)
    BOOLEAN         reduce using rule 59 (var_cte -> TRUE .)
    RETURN          reduce using rule 59 (var_cte -> TRUE .)
    END             reduce using rule 59 (var_cte -> TRUE .)
    ELSE            reduce using rule 59 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 59 (var_cte -> TRUE .)


state 50

    (60) var_cte -> FALSE .

    TIMES           reduce using rule 60 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 60 (var_cte -> FALSE .)
    PERCENT         reduce using rule 60 (var_cte -> FALSE .)
    PLUS            reduce using rule 60 (var_cte -> FALSE .)
    MINUS           reduce using rule 60 (var_cte -> FALSE .)
    GREATER         reduce using rule 60 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 60 (var_cte -> FALSE .)
    LESS            reduce using rule 60 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 60 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 60 (var_cte -> FALSE .)
    DISTINT         reduce using rule 60 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 60 (var_cte -> FALSE .)
    RPAREN          reduce using rule 60 (var_cte -> FALSE .)
    COMMA           reduce using rule 60 (var_cte -> FALSE .)
    ID              reduce using rule 60 (var_cte -> FALSE .)
    IF              reduce using rule 60 (var_cte -> FALSE .)
    DRAW            reduce using rule 60 (var_cte -> FALSE .)
    ARRAY           reduce using rule 60 (var_cte -> FALSE .)
    FOR             reduce using rule 60 (var_cte -> FALSE .)
    WHILE           reduce using rule 60 (var_cte -> FALSE .)
    INT             reduce using rule 60 (var_cte -> FALSE .)
    FLOAT           reduce using rule 60 (var_cte -> FALSE .)
    BOOLEAN         reduce using rule 60 (var_cte -> FALSE .)
    RETURN          reduce using rule 60 (var_cte -> FALSE .)
    END             reduce using rule 60 (var_cte -> FALSE .)
    ELSE            reduce using rule 60 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 60 (var_cte -> FALSE .)


state 51

    (61) var_cte -> llamada .

    TIMES           reduce using rule 61 (var_cte -> llamada .)
    DIVIDE          reduce using rule 61 (var_cte -> llamada .)
    PERCENT         reduce using rule 61 (var_cte -> llamada .)
    PLUS            reduce using rule 61 (var_cte -> llamada .)
    MINUS           reduce using rule 61 (var_cte -> llamada .)
    GREATER         reduce using rule 61 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 61 (var_cte -> llamada .)
    LESS            reduce using rule 61 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 61 (var_cte -> llamada .)
    DEQUAL          reduce using rule 61 (var_cte -> llamada .)
    DISTINT         reduce using rule 61 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 61 (var_cte -> llamada .)
    RPAREN          reduce using rule 61 (var_cte -> llamada .)
    COMMA           reduce using rule 61 (var_cte -> llamada .)
    ID              reduce using rule 61 (var_cte -> llamada .)
    IF              reduce using rule 61 (var_cte -> llamada .)
    DRAW            reduce using rule 61 (var_cte -> llamada .)
    ARRAY           reduce using rule 61 (var_cte -> llamada .)
    FOR             reduce using rule 61 (var_cte -> llamada .)
    WHILE           reduce using rule 61 (var_cte -> llamada .)
    INT             reduce using rule 61 (var_cte -> llamada .)
    FLOAT           reduce using rule 61 (var_cte -> llamada .)
    BOOLEAN         reduce using rule 61 (var_cte -> llamada .)
    RETURN          reduce using rule 61 (var_cte -> llamada .)
    END             reduce using rule 61 (var_cte -> llamada .)
    ELSE            reduce using rule 61 (var_cte -> llamada .)
    RBRACKET        reduce using rule 61 (var_cte -> llamada .)


state 52

    (27) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 96


state 53

    (35) def_array -> LBRACKET . def_array_2
    (36) def_array_2 -> . def_array_cte RBRACKET
    (37) def_array_2 -> . RBRACKET
    (38) def_array_cte -> . var_cte def_array_cte_2
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    RBRACKET        shift and go to state 99
    ID              shift and go to state 93
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    def_array_2                    shift and go to state 97
    def_array_cte                  shift and go to state 98
    var_cte                        shift and go to state 100
    llamada                        shift and go to state 51

state 54

    (10) main -> DEF VOID MAIN LPAREN RPAREN . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    END             reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    bloque                         shift and go to state 101
    estatuto                       shift and go to state 58
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68
    data_type                      shift and go to state 13

state 55

    (79) var_local -> ID LPAREN . var_local_2 RPAREN
    (80) var_local_2 -> . data_type ID var_local_3
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    var_local_2                    shift and go to state 102
    data_type                      shift and go to state 103

state 56

    (17) asignacion -> ID . asignacion_2
    (73) accion -> ID . POINT llamada SEMICOLON
    (29) llamada -> ID . LPAREN llamada_2
    (18) asignacion_2 -> . EQUAL expresion
    (19) asignacion_2 -> . LBRACKET CTE_I asignacion_3

    POINT           shift and go to state 105
    LPAREN          shift and go to state 95
    EQUAL           shift and go to state 106
    LBRACKET        shift and go to state 107

    asignacion_2                   shift and go to state 104

state 57

    (76) funcion -> DEF data_type ID var_local bloque . funcion_2
    (77) funcion_2 -> . RETURN expresion END
    (78) funcion_2 -> . END

    RETURN          shift and go to state 109
    END             shift and go to state 110

    funcion_2                      shift and go to state 108

state 58

    (5) bloque -> estatuto . bloque
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    RETURN          reduce using rule 88 (empty -> .)
    END             reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    estatuto                       shift and go to state 58
    bloque                         shift and go to state 111
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68
    data_type                      shift and go to state 13

state 59

    (6) bloque -> empty .

    RETURN          reduce using rule 6 (bloque -> empty .)
    END             reduce using rule 6 (bloque -> empty .)
    ELSE            reduce using rule 6 (bloque -> empty .)


state 60

    (11) estatuto -> asignacion .

    ID              reduce using rule 11 (estatuto -> asignacion .)
    IF              reduce using rule 11 (estatuto -> asignacion .)
    DRAW            reduce using rule 11 (estatuto -> asignacion .)
    ARRAY           reduce using rule 11 (estatuto -> asignacion .)
    FOR             reduce using rule 11 (estatuto -> asignacion .)
    WHILE           reduce using rule 11 (estatuto -> asignacion .)
    INT             reduce using rule 11 (estatuto -> asignacion .)
    FLOAT           reduce using rule 11 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 11 (estatuto -> asignacion .)
    RETURN          reduce using rule 11 (estatuto -> asignacion .)
    END             reduce using rule 11 (estatuto -> asignacion .)
    ELSE            reduce using rule 11 (estatuto -> asignacion .)


state 61

    (12) estatuto -> condicion .

    ID              reduce using rule 12 (estatuto -> condicion .)
    IF              reduce using rule 12 (estatuto -> condicion .)
    DRAW            reduce using rule 12 (estatuto -> condicion .)
    ARRAY           reduce using rule 12 (estatuto -> condicion .)
    FOR             reduce using rule 12 (estatuto -> condicion .)
    WHILE           reduce using rule 12 (estatuto -> condicion .)
    INT             reduce using rule 12 (estatuto -> condicion .)
    FLOAT           reduce using rule 12 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 12 (estatuto -> condicion .)
    RETURN          reduce using rule 12 (estatuto -> condicion .)
    END             reduce using rule 12 (estatuto -> condicion .)
    ELSE            reduce using rule 12 (estatuto -> condicion .)


state 62

    (13) estatuto -> ciclo .

    ID              reduce using rule 13 (estatuto -> ciclo .)
    IF              reduce using rule 13 (estatuto -> ciclo .)
    DRAW            reduce using rule 13 (estatuto -> ciclo .)
    ARRAY           reduce using rule 13 (estatuto -> ciclo .)
    FOR             reduce using rule 13 (estatuto -> ciclo .)
    WHILE           reduce using rule 13 (estatuto -> ciclo .)
    INT             reduce using rule 13 (estatuto -> ciclo .)
    FLOAT           reduce using rule 13 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 13 (estatuto -> ciclo .)
    RETURN          reduce using rule 13 (estatuto -> ciclo .)
    END             reduce using rule 13 (estatuto -> ciclo .)
    ELSE            reduce using rule 13 (estatuto -> ciclo .)


state 63

    (14) estatuto -> accion .

    ID              reduce using rule 14 (estatuto -> accion .)
    IF              reduce using rule 14 (estatuto -> accion .)
    DRAW            reduce using rule 14 (estatuto -> accion .)
    ARRAY           reduce using rule 14 (estatuto -> accion .)
    FOR             reduce using rule 14 (estatuto -> accion .)
    WHILE           reduce using rule 14 (estatuto -> accion .)
    INT             reduce using rule 14 (estatuto -> accion .)
    FLOAT           reduce using rule 14 (estatuto -> accion .)
    BOOLEAN         reduce using rule 14 (estatuto -> accion .)
    RETURN          reduce using rule 14 (estatuto -> accion .)
    END             reduce using rule 14 (estatuto -> accion .)
    ELSE            reduce using rule 14 (estatuto -> accion .)


state 64

    (15) estatuto -> vars .

    ID              reduce using rule 15 (estatuto -> vars .)
    IF              reduce using rule 15 (estatuto -> vars .)
    DRAW            reduce using rule 15 (estatuto -> vars .)
    ARRAY           reduce using rule 15 (estatuto -> vars .)
    FOR             reduce using rule 15 (estatuto -> vars .)
    WHILE           reduce using rule 15 (estatuto -> vars .)
    INT             reduce using rule 15 (estatuto -> vars .)
    FLOAT           reduce using rule 15 (estatuto -> vars .)
    BOOLEAN         reduce using rule 15 (estatuto -> vars .)
    RETURN          reduce using rule 15 (estatuto -> vars .)
    END             reduce using rule 15 (estatuto -> vars .)
    ELSE            reduce using rule 15 (estatuto -> vars .)


state 65

    (16) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 112


state 66

    (68) condicion -> IF . LPAREN expresion RPAREN bloque condicion_2

    LPAREN          shift and go to state 113


state 67

    (71) ciclo -> for .

    ID              reduce using rule 71 (ciclo -> for .)
    IF              reduce using rule 71 (ciclo -> for .)
    DRAW            reduce using rule 71 (ciclo -> for .)
    ARRAY           reduce using rule 71 (ciclo -> for .)
    FOR             reduce using rule 71 (ciclo -> for .)
    WHILE           reduce using rule 71 (ciclo -> for .)
    INT             reduce using rule 71 (ciclo -> for .)
    FLOAT           reduce using rule 71 (ciclo -> for .)
    BOOLEAN         reduce using rule 71 (ciclo -> for .)
    RETURN          reduce using rule 71 (ciclo -> for .)
    END             reduce using rule 71 (ciclo -> for .)
    ELSE            reduce using rule 71 (ciclo -> for .)


state 68

    (72) ciclo -> while .

    ID              reduce using rule 72 (ciclo -> while .)
    IF              reduce using rule 72 (ciclo -> while .)
    DRAW            reduce using rule 72 (ciclo -> while .)
    ARRAY           reduce using rule 72 (ciclo -> while .)
    FOR             reduce using rule 72 (ciclo -> while .)
    WHILE           reduce using rule 72 (ciclo -> while .)
    INT             reduce using rule 72 (ciclo -> while .)
    FLOAT           reduce using rule 72 (ciclo -> while .)
    BOOLEAN         reduce using rule 72 (ciclo -> while .)
    RETURN          reduce using rule 72 (ciclo -> while .)
    END             reduce using rule 72 (ciclo -> while .)
    ELSE            reduce using rule 72 (ciclo -> while .)


state 69

    (74) for -> FOR . LPAREN CTE_I COMMA CTE_I RPAREN bloque END

    LPAREN          shift and go to state 114


state 70

    (75) while -> WHILE . LPAREN expresion RPAREN bloque END

    LPAREN          shift and go to state 115


state 71

    (22) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 116


state 72

    (25) vars2 -> EQUAL expresion SEMICOLON .

    DEF             reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    ID              reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    IF              reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    DRAW            reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    ARRAY           reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    FOR             reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    INT             reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    BOOLEAN         reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    END             reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)
    ELSE            reduce using rule 25 (vars2 -> EQUAL expresion SEMICOLON .)


state 73

    (41) expresion -> exp expresion_2 .

    SEMICOLON       reduce using rule 41 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 41 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 41 (expresion -> exp expresion_2 .)
    ID              reduce using rule 41 (expresion -> exp expresion_2 .)
    IF              reduce using rule 41 (expresion -> exp expresion_2 .)
    DRAW            reduce using rule 41 (expresion -> exp expresion_2 .)
    ARRAY           reduce using rule 41 (expresion -> exp expresion_2 .)
    FOR             reduce using rule 41 (expresion -> exp expresion_2 .)
    WHILE           reduce using rule 41 (expresion -> exp expresion_2 .)
    INT             reduce using rule 41 (expresion -> exp expresion_2 .)
    FLOAT           reduce using rule 41 (expresion -> exp expresion_2 .)
    BOOLEAN         reduce using rule 41 (expresion -> exp expresion_2 .)
    RETURN          reduce using rule 41 (expresion -> exp expresion_2 .)
    END             reduce using rule 41 (expresion -> exp expresion_2 .)
    ELSE            reduce using rule 41 (expresion -> exp expresion_2 .)


state 74

    (42) expresion_2 -> relop . exp
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    exp                            shift and go to state 117
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 75

    (43) expresion_2 -> empty .

    SEMICOLON       reduce using rule 43 (expresion_2 -> empty .)
    RPAREN          reduce using rule 43 (expresion_2 -> empty .)
    COMMA           reduce using rule 43 (expresion_2 -> empty .)
    ID              reduce using rule 43 (expresion_2 -> empty .)
    IF              reduce using rule 43 (expresion_2 -> empty .)
    DRAW            reduce using rule 43 (expresion_2 -> empty .)
    ARRAY           reduce using rule 43 (expresion_2 -> empty .)
    FOR             reduce using rule 43 (expresion_2 -> empty .)
    WHILE           reduce using rule 43 (expresion_2 -> empty .)
    INT             reduce using rule 43 (expresion_2 -> empty .)
    FLOAT           reduce using rule 43 (expresion_2 -> empty .)
    BOOLEAN         reduce using rule 43 (expresion_2 -> empty .)
    RETURN          reduce using rule 43 (expresion_2 -> empty .)
    END             reduce using rule 43 (expresion_2 -> empty .)
    ELSE            reduce using rule 43 (expresion_2 -> empty .)


state 76

    (44) relop -> GREATER .

    LPAREN          reduce using rule 44 (relop -> GREATER .)
    ID              reduce using rule 44 (relop -> GREATER .)
    PLUS            reduce using rule 44 (relop -> GREATER .)
    MINUS           reduce using rule 44 (relop -> GREATER .)
    CTE_I           reduce using rule 44 (relop -> GREATER .)
    CTE_F           reduce using rule 44 (relop -> GREATER .)
    TRUE            reduce using rule 44 (relop -> GREATER .)
    FALSE           reduce using rule 44 (relop -> GREATER .)


state 77

    (45) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 45 (relop -> GREATEREQUAL .)
    ID              reduce using rule 45 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 45 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 45 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 45 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 45 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 45 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 45 (relop -> GREATEREQUAL .)


state 78

    (46) relop -> LESS .

    LPAREN          reduce using rule 46 (relop -> LESS .)
    ID              reduce using rule 46 (relop -> LESS .)
    PLUS            reduce using rule 46 (relop -> LESS .)
    MINUS           reduce using rule 46 (relop -> LESS .)
    CTE_I           reduce using rule 46 (relop -> LESS .)
    CTE_F           reduce using rule 46 (relop -> LESS .)
    TRUE            reduce using rule 46 (relop -> LESS .)
    FALSE           reduce using rule 46 (relop -> LESS .)


state 79

    (47) relop -> LESSEQUAL .

    LPAREN          reduce using rule 47 (relop -> LESSEQUAL .)
    ID              reduce using rule 47 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 47 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 47 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 47 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 47 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 47 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 47 (relop -> LESSEQUAL .)


state 80

    (48) relop -> DEQUAL .

    LPAREN          reduce using rule 48 (relop -> DEQUAL .)
    ID              reduce using rule 48 (relop -> DEQUAL .)
    PLUS            reduce using rule 48 (relop -> DEQUAL .)
    MINUS           reduce using rule 48 (relop -> DEQUAL .)
    CTE_I           reduce using rule 48 (relop -> DEQUAL .)
    CTE_F           reduce using rule 48 (relop -> DEQUAL .)
    TRUE            reduce using rule 48 (relop -> DEQUAL .)
    FALSE           reduce using rule 48 (relop -> DEQUAL .)


state 81

    (49) relop -> DISTINT .

    LPAREN          reduce using rule 49 (relop -> DISTINT .)
    ID              reduce using rule 49 (relop -> DISTINT .)
    PLUS            reduce using rule 49 (relop -> DISTINT .)
    MINUS           reduce using rule 49 (relop -> DISTINT .)
    CTE_I           reduce using rule 49 (relop -> DISTINT .)
    CTE_F           reduce using rule 49 (relop -> DISTINT .)
    TRUE            reduce using rule 49 (relop -> DISTINT .)
    FALSE           reduce using rule 49 (relop -> DISTINT .)


state 82

    (50) exp -> termino exp_2 .

    GREATER         reduce using rule 50 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 50 (exp -> termino exp_2 .)
    LESS            reduce using rule 50 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 50 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 50 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 50 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 50 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 50 (exp -> termino exp_2 .)
    COMMA           reduce using rule 50 (exp -> termino exp_2 .)
    ID              reduce using rule 50 (exp -> termino exp_2 .)
    IF              reduce using rule 50 (exp -> termino exp_2 .)
    DRAW            reduce using rule 50 (exp -> termino exp_2 .)
    ARRAY           reduce using rule 50 (exp -> termino exp_2 .)
    FOR             reduce using rule 50 (exp -> termino exp_2 .)
    WHILE           reduce using rule 50 (exp -> termino exp_2 .)
    INT             reduce using rule 50 (exp -> termino exp_2 .)
    FLOAT           reduce using rule 50 (exp -> termino exp_2 .)
    BOOLEAN         reduce using rule 50 (exp -> termino exp_2 .)
    RETURN          reduce using rule 50 (exp -> termino exp_2 .)
    END             reduce using rule 50 (exp -> termino exp_2 .)
    ELSE            reduce using rule 50 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 50 (exp -> termino exp_2 .)


state 83

    (51) exp_2 -> addop . exp
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    addop                          shift and go to state 42
    exp                            shift and go to state 118
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 84

    (52) exp_2 -> empty .

    GREATER         reduce using rule 52 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 52 (exp_2 -> empty .)
    LESS            reduce using rule 52 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 52 (exp_2 -> empty .)
    DEQUAL          reduce using rule 52 (exp_2 -> empty .)
    DISTINT         reduce using rule 52 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 52 (exp_2 -> empty .)
    RPAREN          reduce using rule 52 (exp_2 -> empty .)
    COMMA           reduce using rule 52 (exp_2 -> empty .)
    ID              reduce using rule 52 (exp_2 -> empty .)
    IF              reduce using rule 52 (exp_2 -> empty .)
    DRAW            reduce using rule 52 (exp_2 -> empty .)
    ARRAY           reduce using rule 52 (exp_2 -> empty .)
    FOR             reduce using rule 52 (exp_2 -> empty .)
    WHILE           reduce using rule 52 (exp_2 -> empty .)
    INT             reduce using rule 52 (exp_2 -> empty .)
    FLOAT           reduce using rule 52 (exp_2 -> empty .)
    BOOLEAN         reduce using rule 52 (exp_2 -> empty .)
    RETURN          reduce using rule 52 (exp_2 -> empty .)
    END             reduce using rule 52 (exp_2 -> empty .)
    ELSE            reduce using rule 52 (exp_2 -> empty .)
    RBRACKET        reduce using rule 52 (exp_2 -> empty .)


state 85

    (53) termino -> factor termino_2 .

    PLUS            reduce using rule 53 (termino -> factor termino_2 .)
    MINUS           reduce using rule 53 (termino -> factor termino_2 .)
    GREATER         reduce using rule 53 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 53 (termino -> factor termino_2 .)
    LESS            reduce using rule 53 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 53 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 53 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 53 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 53 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 53 (termino -> factor termino_2 .)
    COMMA           reduce using rule 53 (termino -> factor termino_2 .)
    ID              reduce using rule 53 (termino -> factor termino_2 .)
    IF              reduce using rule 53 (termino -> factor termino_2 .)
    DRAW            reduce using rule 53 (termino -> factor termino_2 .)
    ARRAY           reduce using rule 53 (termino -> factor termino_2 .)
    FOR             reduce using rule 53 (termino -> factor termino_2 .)
    WHILE           reduce using rule 53 (termino -> factor termino_2 .)
    INT             reduce using rule 53 (termino -> factor termino_2 .)
    FLOAT           reduce using rule 53 (termino -> factor termino_2 .)
    BOOLEAN         reduce using rule 53 (termino -> factor termino_2 .)
    RETURN          reduce using rule 53 (termino -> factor termino_2 .)
    END             reduce using rule 53 (termino -> factor termino_2 .)
    ELSE            reduce using rule 53 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 53 (termino -> factor termino_2 .)


state 86

    (54) termino_2 -> timesop . termino
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    termino                        shift and go to state 119
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 87

    (55) termino_2 -> empty .

    PLUS            reduce using rule 55 (termino_2 -> empty .)
    MINUS           reduce using rule 55 (termino_2 -> empty .)
    GREATER         reduce using rule 55 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 55 (termino_2 -> empty .)
    LESS            reduce using rule 55 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 55 (termino_2 -> empty .)
    DEQUAL          reduce using rule 55 (termino_2 -> empty .)
    DISTINT         reduce using rule 55 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 55 (termino_2 -> empty .)
    RPAREN          reduce using rule 55 (termino_2 -> empty .)
    COMMA           reduce using rule 55 (termino_2 -> empty .)
    ID              reduce using rule 55 (termino_2 -> empty .)
    IF              reduce using rule 55 (termino_2 -> empty .)
    DRAW            reduce using rule 55 (termino_2 -> empty .)
    ARRAY           reduce using rule 55 (termino_2 -> empty .)
    FOR             reduce using rule 55 (termino_2 -> empty .)
    WHILE           reduce using rule 55 (termino_2 -> empty .)
    INT             reduce using rule 55 (termino_2 -> empty .)
    FLOAT           reduce using rule 55 (termino_2 -> empty .)
    BOOLEAN         reduce using rule 55 (termino_2 -> empty .)
    RETURN          reduce using rule 55 (termino_2 -> empty .)
    END             reduce using rule 55 (termino_2 -> empty .)
    ELSE            reduce using rule 55 (termino_2 -> empty .)
    RBRACKET        reduce using rule 55 (termino_2 -> empty .)


state 88

    (85) timesop -> TIMES .

    LPAREN          reduce using rule 85 (timesop -> TIMES .)
    ID              reduce using rule 85 (timesop -> TIMES .)
    PLUS            reduce using rule 85 (timesop -> TIMES .)
    MINUS           reduce using rule 85 (timesop -> TIMES .)
    CTE_I           reduce using rule 85 (timesop -> TIMES .)
    CTE_F           reduce using rule 85 (timesop -> TIMES .)
    TRUE            reduce using rule 85 (timesop -> TIMES .)
    FALSE           reduce using rule 85 (timesop -> TIMES .)


state 89

    (86) timesop -> DIVIDE .

    LPAREN          reduce using rule 86 (timesop -> DIVIDE .)
    ID              reduce using rule 86 (timesop -> DIVIDE .)
    PLUS            reduce using rule 86 (timesop -> DIVIDE .)
    MINUS           reduce using rule 86 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 86 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 86 (timesop -> DIVIDE .)
    TRUE            reduce using rule 86 (timesop -> DIVIDE .)
    FALSE           reduce using rule 86 (timesop -> DIVIDE .)


state 90

    (87) timesop -> PERCENT .

    LPAREN          reduce using rule 87 (timesop -> PERCENT .)
    ID              reduce using rule 87 (timesop -> PERCENT .)
    PLUS            reduce using rule 87 (timesop -> PERCENT .)
    MINUS           reduce using rule 87 (timesop -> PERCENT .)
    CTE_I           reduce using rule 87 (timesop -> PERCENT .)
    CTE_F           reduce using rule 87 (timesop -> PERCENT .)
    TRUE            reduce using rule 87 (timesop -> PERCENT .)
    FALSE           reduce using rule 87 (timesop -> PERCENT .)


state 91

    (62) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 120


state 92

    (63) factor -> addop var_cte .

    TIMES           reduce using rule 63 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 63 (factor -> addop var_cte .)
    PERCENT         reduce using rule 63 (factor -> addop var_cte .)
    PLUS            reduce using rule 63 (factor -> addop var_cte .)
    MINUS           reduce using rule 63 (factor -> addop var_cte .)
    GREATER         reduce using rule 63 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 63 (factor -> addop var_cte .)
    LESS            reduce using rule 63 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 63 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 63 (factor -> addop var_cte .)
    DISTINT         reduce using rule 63 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 63 (factor -> addop var_cte .)
    RPAREN          reduce using rule 63 (factor -> addop var_cte .)
    COMMA           reduce using rule 63 (factor -> addop var_cte .)
    ID              reduce using rule 63 (factor -> addop var_cte .)
    IF              reduce using rule 63 (factor -> addop var_cte .)
    DRAW            reduce using rule 63 (factor -> addop var_cte .)
    ARRAY           reduce using rule 63 (factor -> addop var_cte .)
    FOR             reduce using rule 63 (factor -> addop var_cte .)
    WHILE           reduce using rule 63 (factor -> addop var_cte .)
    INT             reduce using rule 63 (factor -> addop var_cte .)
    FLOAT           reduce using rule 63 (factor -> addop var_cte .)
    BOOLEAN         reduce using rule 63 (factor -> addop var_cte .)
    RETURN          reduce using rule 63 (factor -> addop var_cte .)
    END             reduce using rule 63 (factor -> addop var_cte .)
    ELSE            reduce using rule 63 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 63 (factor -> addop var_cte .)


state 93

    (56) var_cte -> ID .
    (29) llamada -> ID . LPAREN llamada_2

    TIMES           reduce using rule 56 (var_cte -> ID .)
    DIVIDE          reduce using rule 56 (var_cte -> ID .)
    PERCENT         reduce using rule 56 (var_cte -> ID .)
    PLUS            reduce using rule 56 (var_cte -> ID .)
    MINUS           reduce using rule 56 (var_cte -> ID .)
    GREATER         reduce using rule 56 (var_cte -> ID .)
    GREATEREQUAL    reduce using rule 56 (var_cte -> ID .)
    LESS            reduce using rule 56 (var_cte -> ID .)
    LESSEQUAL       reduce using rule 56 (var_cte -> ID .)
    DEQUAL          reduce using rule 56 (var_cte -> ID .)
    DISTINT         reduce using rule 56 (var_cte -> ID .)
    SEMICOLON       reduce using rule 56 (var_cte -> ID .)
    RPAREN          reduce using rule 56 (var_cte -> ID .)
    COMMA           reduce using rule 56 (var_cte -> ID .)
    ID              reduce using rule 56 (var_cte -> ID .)
    IF              reduce using rule 56 (var_cte -> ID .)
    DRAW            reduce using rule 56 (var_cte -> ID .)
    ARRAY           reduce using rule 56 (var_cte -> ID .)
    FOR             reduce using rule 56 (var_cte -> ID .)
    WHILE           reduce using rule 56 (var_cte -> ID .)
    INT             reduce using rule 56 (var_cte -> ID .)
    FLOAT           reduce using rule 56 (var_cte -> ID .)
    BOOLEAN         reduce using rule 56 (var_cte -> ID .)
    RETURN          reduce using rule 56 (var_cte -> ID .)
    END             reduce using rule 56 (var_cte -> ID .)
    ELSE            reduce using rule 56 (var_cte -> ID .)
    RBRACKET        reduce using rule 56 (var_cte -> ID .)
    LPAREN          shift and go to state 95


state 94

    (65) factor -> ID LBRACKET . exp factor_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    exp                            shift and go to state 121
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 95

    (29) llamada -> ID LPAREN . llamada_2
    (30) llamada_2 -> . llamada_exp RPAREN
    (31) llamada_2 -> . RPAREN
    (32) llamada_exp -> . expresion llamada_exp2
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 124
    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    llamada_2                      shift and go to state 122
    llamada_exp                    shift and go to state 123
    expresion                      shift and go to state 125
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 96

    (27) vars3 -> EQUAL def_array SEMICOLON .

    DEF             reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 27 (vars3 -> EQUAL def_array SEMICOLON .)


state 97

    (35) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 35 (def_array -> LBRACKET def_array_2 .)


state 98

    (36) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 126


state 99

    (37) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 37 (def_array_2 -> RBRACKET .)


state 100

    (38) def_array_cte -> var_cte . def_array_cte_2
    (39) def_array_cte_2 -> . COMMA def_array_cte
    (40) def_array_cte_2 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 128
    RBRACKET        reduce using rule 88 (empty -> .)

    def_array_cte_2                shift and go to state 127
    empty                          shift and go to state 129

state 101

    (10) main -> DEF VOID MAIN LPAREN RPAREN bloque . END

    END             shift and go to state 130


state 102

    (79) var_local -> ID LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 131


state 103

    (80) var_local_2 -> data_type . ID var_local_3

    ID              shift and go to state 132


state 104

    (17) asignacion -> ID asignacion_2 .

    ID              reduce using rule 17 (asignacion -> ID asignacion_2 .)
    IF              reduce using rule 17 (asignacion -> ID asignacion_2 .)
    DRAW            reduce using rule 17 (asignacion -> ID asignacion_2 .)
    ARRAY           reduce using rule 17 (asignacion -> ID asignacion_2 .)
    FOR             reduce using rule 17 (asignacion -> ID asignacion_2 .)
    WHILE           reduce using rule 17 (asignacion -> ID asignacion_2 .)
    INT             reduce using rule 17 (asignacion -> ID asignacion_2 .)
    FLOAT           reduce using rule 17 (asignacion -> ID asignacion_2 .)
    BOOLEAN         reduce using rule 17 (asignacion -> ID asignacion_2 .)
    RETURN          reduce using rule 17 (asignacion -> ID asignacion_2 .)
    END             reduce using rule 17 (asignacion -> ID asignacion_2 .)
    ELSE            reduce using rule 17 (asignacion -> ID asignacion_2 .)


state 105

    (73) accion -> ID POINT . llamada SEMICOLON
    (29) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 133

    llamada                        shift and go to state 134

state 106

    (18) asignacion_2 -> EQUAL . expresion
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    expresion                      shift and go to state 135
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 107

    (19) asignacion_2 -> LBRACKET . CTE_I asignacion_3

    CTE_I           shift and go to state 136


state 108

    (76) funcion -> DEF data_type ID var_local bloque funcion_2 .

    DEF             reduce using rule 76 (funcion -> DEF data_type ID var_local bloque funcion_2 .)


state 109

    (77) funcion_2 -> RETURN . expresion END
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    expresion                      shift and go to state 137
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 110

    (78) funcion_2 -> END .

    DEF             reduce using rule 78 (funcion_2 -> END .)


state 111

    (5) bloque -> estatuto bloque .

    RETURN          reduce using rule 5 (bloque -> estatuto bloque .)
    END             reduce using rule 5 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 5 (bloque -> estatuto bloque .)


state 112

    (16) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 16 (estatuto -> llamada SEMICOLON .)


state 113

    (68) condicion -> IF LPAREN . expresion RPAREN bloque condicion_2
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    expresion                      shift and go to state 138
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 114

    (74) for -> FOR LPAREN . CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 139


state 115

    (75) while -> WHILE LPAREN . expresion RPAREN bloque END
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    expresion                      shift and go to state 140
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 116

    (22) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 141


state 117

    (42) expresion_2 -> relop exp .

    SEMICOLON       reduce using rule 42 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 42 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 42 (expresion_2 -> relop exp .)
    ID              reduce using rule 42 (expresion_2 -> relop exp .)
    IF              reduce using rule 42 (expresion_2 -> relop exp .)
    DRAW            reduce using rule 42 (expresion_2 -> relop exp .)
    ARRAY           reduce using rule 42 (expresion_2 -> relop exp .)
    FOR             reduce using rule 42 (expresion_2 -> relop exp .)
    WHILE           reduce using rule 42 (expresion_2 -> relop exp .)
    INT             reduce using rule 42 (expresion_2 -> relop exp .)
    FLOAT           reduce using rule 42 (expresion_2 -> relop exp .)
    BOOLEAN         reduce using rule 42 (expresion_2 -> relop exp .)
    RETURN          reduce using rule 42 (expresion_2 -> relop exp .)
    END             reduce using rule 42 (expresion_2 -> relop exp .)
    ELSE            reduce using rule 42 (expresion_2 -> relop exp .)


state 118

    (51) exp_2 -> addop exp .

    GREATER         reduce using rule 51 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 51 (exp_2 -> addop exp .)
    LESS            reduce using rule 51 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 51 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 51 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 51 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 51 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 51 (exp_2 -> addop exp .)
    COMMA           reduce using rule 51 (exp_2 -> addop exp .)
    ID              reduce using rule 51 (exp_2 -> addop exp .)
    IF              reduce using rule 51 (exp_2 -> addop exp .)
    DRAW            reduce using rule 51 (exp_2 -> addop exp .)
    ARRAY           reduce using rule 51 (exp_2 -> addop exp .)
    FOR             reduce using rule 51 (exp_2 -> addop exp .)
    WHILE           reduce using rule 51 (exp_2 -> addop exp .)
    INT             reduce using rule 51 (exp_2 -> addop exp .)
    FLOAT           reduce using rule 51 (exp_2 -> addop exp .)
    BOOLEAN         reduce using rule 51 (exp_2 -> addop exp .)
    RETURN          reduce using rule 51 (exp_2 -> addop exp .)
    END             reduce using rule 51 (exp_2 -> addop exp .)
    ELSE            reduce using rule 51 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 51 (exp_2 -> addop exp .)


state 119

    (54) termino_2 -> timesop termino .

    PLUS            reduce using rule 54 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 54 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 54 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 54 (termino_2 -> timesop termino .)
    LESS            reduce using rule 54 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 54 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 54 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 54 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 54 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 54 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 54 (termino_2 -> timesop termino .)
    ID              reduce using rule 54 (termino_2 -> timesop termino .)
    IF              reduce using rule 54 (termino_2 -> timesop termino .)
    DRAW            reduce using rule 54 (termino_2 -> timesop termino .)
    ARRAY           reduce using rule 54 (termino_2 -> timesop termino .)
    FOR             reduce using rule 54 (termino_2 -> timesop termino .)
    WHILE           reduce using rule 54 (termino_2 -> timesop termino .)
    INT             reduce using rule 54 (termino_2 -> timesop termino .)
    FLOAT           reduce using rule 54 (termino_2 -> timesop termino .)
    BOOLEAN         reduce using rule 54 (termino_2 -> timesop termino .)
    RETURN          reduce using rule 54 (termino_2 -> timesop termino .)
    END             reduce using rule 54 (termino_2 -> timesop termino .)
    ELSE            reduce using rule 54 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 54 (termino_2 -> timesop termino .)


state 120

    (62) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    PERCENT         reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    DRAW            reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    ARRAY           reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    INT             reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    BOOLEAN         reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    END             reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 62 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 62 (factor -> LPAREN expresion RPAREN .)


state 121

    (65) factor -> ID LBRACKET exp . factor_2
    (66) factor_2 -> . RBRACKET
    (67) factor_2 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 143
    COMMA           shift and go to state 144

    factor_2                       shift and go to state 142

state 122

    (29) llamada -> ID LPAREN llamada_2 .

    TIMES           reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    DIVIDE          reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    PERCENT         reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    PLUS            reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    MINUS           reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    GREATER         reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    LESS            reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    DEQUAL          reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    DISTINT         reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    SEMICOLON       reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    RPAREN          reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    COMMA           reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    ID              reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    IF              reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    DRAW            reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    ARRAY           reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    FOR             reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    WHILE           reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    INT             reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    FLOAT           reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    BOOLEAN         reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    RETURN          reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    END             reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    ELSE            reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)
    RBRACKET        reduce using rule 29 (llamada -> ID LPAREN llamada_2 .)


state 123

    (30) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 145


state 124

    (31) llamada_2 -> RPAREN .

    TIMES           reduce using rule 31 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 31 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 31 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 31 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 31 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 31 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 31 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 31 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 31 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 31 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 31 (llamada_2 -> RPAREN .)
    SEMICOLON       reduce using rule 31 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 31 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 31 (llamada_2 -> RPAREN .)
    ID              reduce using rule 31 (llamada_2 -> RPAREN .)
    IF              reduce using rule 31 (llamada_2 -> RPAREN .)
    DRAW            reduce using rule 31 (llamada_2 -> RPAREN .)
    ARRAY           reduce using rule 31 (llamada_2 -> RPAREN .)
    FOR             reduce using rule 31 (llamada_2 -> RPAREN .)
    WHILE           reduce using rule 31 (llamada_2 -> RPAREN .)
    INT             reduce using rule 31 (llamada_2 -> RPAREN .)
    FLOAT           reduce using rule 31 (llamada_2 -> RPAREN .)
    BOOLEAN         reduce using rule 31 (llamada_2 -> RPAREN .)
    RETURN          reduce using rule 31 (llamada_2 -> RPAREN .)
    END             reduce using rule 31 (llamada_2 -> RPAREN .)
    ELSE            reduce using rule 31 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 31 (llamada_2 -> RPAREN .)


state 125

    (32) llamada_exp -> expresion . llamada_exp2
    (33) llamada_exp2 -> . COMMA llamada_exp
    (34) llamada_exp2 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 147
    RPAREN          reduce using rule 88 (empty -> .)

    llamada_exp2                   shift and go to state 146
    empty                          shift and go to state 148

state 126

    (36) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 36 (def_array_2 -> def_array_cte RBRACKET .)


state 127

    (38) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 38 (def_array_cte -> var_cte def_array_cte_2 .)


state 128

    (39) def_array_cte_2 -> COMMA . def_array_cte
    (38) def_array_cte -> . var_cte def_array_cte_2
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 93
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    def_array_cte                  shift and go to state 149
    var_cte                        shift and go to state 100
    llamada                        shift and go to state 51

state 129

    (40) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 40 (def_array_cte_2 -> empty .)


state 130

    (10) main -> DEF VOID MAIN LPAREN RPAREN bloque END .

    $end            reduce using rule 10 (main -> DEF VOID MAIN LPAREN RPAREN bloque END .)


state 131

    (79) var_local -> ID LPAREN var_local_2 RPAREN .

    ID              reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)
    END             reduce using rule 79 (var_local -> ID LPAREN var_local_2 RPAREN .)


state 132

    (80) var_local_2 -> data_type ID . var_local_3
    (81) var_local_3 -> . COMMA var_local_2
    (82) var_local_3 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 88 (empty -> .)

    var_local_3                    shift and go to state 150
    empty                          shift and go to state 152

state 133

    (29) llamada -> ID . LPAREN llamada_2

    LPAREN          shift and go to state 95


state 134

    (73) accion -> ID POINT llamada . SEMICOLON

    SEMICOLON       shift and go to state 153


state 135

    (18) asignacion_2 -> EQUAL expresion .

    ID              reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    IF              reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    DRAW            reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    ARRAY           reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    FOR             reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    WHILE           reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    INT             reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    FLOAT           reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    BOOLEAN         reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    RETURN          reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    END             reduce using rule 18 (asignacion_2 -> EQUAL expresion .)
    ELSE            reduce using rule 18 (asignacion_2 -> EQUAL expresion .)


state 136

    (19) asignacion_2 -> LBRACKET CTE_I . asignacion_3
    (20) asignacion_3 -> . RBRACKET
    (21) asignacion_3 -> . COMMA CTE_I RBRACKET

    RBRACKET        shift and go to state 155
    COMMA           shift and go to state 156

    asignacion_3                   shift and go to state 154

state 137

    (77) funcion_2 -> RETURN expresion . END

    END             shift and go to state 157


state 138

    (68) condicion -> IF LPAREN expresion . RPAREN bloque condicion_2

    RPAREN          shift and go to state 158


state 139

    (74) for -> FOR LPAREN CTE_I . COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 159


state 140

    (75) while -> WHILE LPAREN expresion . RPAREN bloque END

    RPAREN          shift and go to state 160


state 141

    (22) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    DEF             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 142

    (65) factor -> ID LBRACKET exp factor_2 .

    TIMES           reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    DIVIDE          reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    PERCENT         reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    PLUS            reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    MINUS           reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    GREATER         reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    GREATEREQUAL    reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    LESS            reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    LESSEQUAL       reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    DEQUAL          reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    DISTINT         reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    SEMICOLON       reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    RPAREN          reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    COMMA           reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    ID              reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    IF              reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    DRAW            reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    ARRAY           reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    FOR             reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    WHILE           reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    INT             reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    FLOAT           reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    BOOLEAN         reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    RETURN          reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    END             reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    ELSE            reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)
    RBRACKET        reduce using rule 65 (factor -> ID LBRACKET exp factor_2 .)


state 143

    (66) factor_2 -> RBRACKET .

    TIMES           reduce using rule 66 (factor_2 -> RBRACKET .)
    DIVIDE          reduce using rule 66 (factor_2 -> RBRACKET .)
    PERCENT         reduce using rule 66 (factor_2 -> RBRACKET .)
    PLUS            reduce using rule 66 (factor_2 -> RBRACKET .)
    MINUS           reduce using rule 66 (factor_2 -> RBRACKET .)
    GREATER         reduce using rule 66 (factor_2 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 66 (factor_2 -> RBRACKET .)
    LESS            reduce using rule 66 (factor_2 -> RBRACKET .)
    LESSEQUAL       reduce using rule 66 (factor_2 -> RBRACKET .)
    DEQUAL          reduce using rule 66 (factor_2 -> RBRACKET .)
    DISTINT         reduce using rule 66 (factor_2 -> RBRACKET .)
    SEMICOLON       reduce using rule 66 (factor_2 -> RBRACKET .)
    RPAREN          reduce using rule 66 (factor_2 -> RBRACKET .)
    COMMA           reduce using rule 66 (factor_2 -> RBRACKET .)
    ID              reduce using rule 66 (factor_2 -> RBRACKET .)
    IF              reduce using rule 66 (factor_2 -> RBRACKET .)
    DRAW            reduce using rule 66 (factor_2 -> RBRACKET .)
    ARRAY           reduce using rule 66 (factor_2 -> RBRACKET .)
    FOR             reduce using rule 66 (factor_2 -> RBRACKET .)
    WHILE           reduce using rule 66 (factor_2 -> RBRACKET .)
    INT             reduce using rule 66 (factor_2 -> RBRACKET .)
    FLOAT           reduce using rule 66 (factor_2 -> RBRACKET .)
    BOOLEAN         reduce using rule 66 (factor_2 -> RBRACKET .)
    RETURN          reduce using rule 66 (factor_2 -> RBRACKET .)
    END             reduce using rule 66 (factor_2 -> RBRACKET .)
    ELSE            reduce using rule 66 (factor_2 -> RBRACKET .)
    RBRACKET        reduce using rule 66 (factor_2 -> RBRACKET .)


state 144

    (67) factor_2 -> COMMA . exp RBRACKET
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    exp                            shift and go to state 161
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 145

    (30) llamada_2 -> llamada_exp RPAREN .

    TIMES           reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    SEMICOLON       reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    ID              reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    IF              reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    DRAW            reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    ARRAY           reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    FOR             reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    WHILE           reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    INT             reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    FLOAT           reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    BOOLEAN         reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    RETURN          reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    END             reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    ELSE            reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 30 (llamada_2 -> llamada_exp RPAREN .)


state 146

    (32) llamada_exp -> expresion llamada_exp2 .

    RPAREN          reduce using rule 32 (llamada_exp -> expresion llamada_exp2 .)


state 147

    (33) llamada_exp2 -> COMMA . llamada_exp
    (32) llamada_exp -> . expresion llamada_exp2
    (41) expresion -> . exp expresion_2
    (50) exp -> . termino exp_2
    (53) termino -> . factor termino_2
    (62) factor -> . LPAREN expresion RPAREN
    (63) factor -> . addop var_cte
    (64) factor -> . var_cte
    (65) factor -> . ID LBRACKET exp factor_2
    (83) addop -> . PLUS
    (84) addop -> . MINUS
    (56) var_cte -> . ID
    (57) var_cte -> . CTE_I
    (58) var_cte -> . CTE_F
    (59) var_cte -> . TRUE
    (60) var_cte -> . FALSE
    (61) var_cte -> . llamada
    (29) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 41
    ID              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    CTE_I           shift and go to state 47
    CTE_F           shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    llamada_exp                    shift and go to state 162
    expresion                      shift and go to state 125
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    addop                          shift and go to state 42
    var_cte                        shift and go to state 43
    llamada                        shift and go to state 51

state 148

    (34) llamada_exp2 -> empty .

    RPAREN          reduce using rule 34 (llamada_exp2 -> empty .)


state 149

    (39) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 39 (def_array_cte_2 -> COMMA def_array_cte .)


state 150

    (80) var_local_2 -> data_type ID var_local_3 .

    RPAREN          reduce using rule 80 (var_local_2 -> data_type ID var_local_3 .)


state 151

    (81) var_local_3 -> COMMA . var_local_2
    (80) var_local_2 -> . data_type ID var_local_3
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    var_local_2                    shift and go to state 163
    data_type                      shift and go to state 103

state 152

    (82) var_local_3 -> empty .

    RPAREN          reduce using rule 82 (var_local_3 -> empty .)


state 153

    (73) accion -> ID POINT llamada SEMICOLON .

    ID              reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    IF              reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    DRAW            reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    ARRAY           reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    FOR             reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    WHILE           reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    INT             reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    FLOAT           reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    BOOLEAN         reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    RETURN          reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    END             reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)
    ELSE            reduce using rule 73 (accion -> ID POINT llamada SEMICOLON .)


state 154

    (19) asignacion_2 -> LBRACKET CTE_I asignacion_3 .

    ID              reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    IF              reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    DRAW            reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    ARRAY           reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    FOR             reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    WHILE           reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    INT             reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    FLOAT           reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    BOOLEAN         reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    RETURN          reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    END             reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)
    ELSE            reduce using rule 19 (asignacion_2 -> LBRACKET CTE_I asignacion_3 .)


state 155

    (20) asignacion_3 -> RBRACKET .

    ID              reduce using rule 20 (asignacion_3 -> RBRACKET .)
    IF              reduce using rule 20 (asignacion_3 -> RBRACKET .)
    DRAW            reduce using rule 20 (asignacion_3 -> RBRACKET .)
    ARRAY           reduce using rule 20 (asignacion_3 -> RBRACKET .)
    FOR             reduce using rule 20 (asignacion_3 -> RBRACKET .)
    WHILE           reduce using rule 20 (asignacion_3 -> RBRACKET .)
    INT             reduce using rule 20 (asignacion_3 -> RBRACKET .)
    FLOAT           reduce using rule 20 (asignacion_3 -> RBRACKET .)
    BOOLEAN         reduce using rule 20 (asignacion_3 -> RBRACKET .)
    RETURN          reduce using rule 20 (asignacion_3 -> RBRACKET .)
    END             reduce using rule 20 (asignacion_3 -> RBRACKET .)
    ELSE            reduce using rule 20 (asignacion_3 -> RBRACKET .)


state 156

    (21) asignacion_3 -> COMMA . CTE_I RBRACKET

    CTE_I           shift and go to state 164


state 157

    (77) funcion_2 -> RETURN expresion END .

    DEF             reduce using rule 77 (funcion_2 -> RETURN expresion END .)


state 158

    (68) condicion -> IF LPAREN expresion RPAREN . bloque condicion_2
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    END             reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    bloque                         shift and go to state 165
    estatuto                       shift and go to state 58
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68
    data_type                      shift and go to state 13

state 159

    (74) for -> FOR LPAREN CTE_I COMMA . CTE_I RPAREN bloque END

    CTE_I           shift and go to state 166


state 160

    (75) while -> WHILE LPAREN expresion RPAREN . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    END             reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    bloque                         shift and go to state 167
    estatuto                       shift and go to state 58
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68
    data_type                      shift and go to state 13

state 161

    (67) factor_2 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 168


state 162

    (33) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 33 (llamada_exp2 -> COMMA llamada_exp .)


state 163

    (81) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 81 (var_local_3 -> COMMA var_local_2 .)


state 164

    (21) asignacion_3 -> COMMA CTE_I . RBRACKET

    RBRACKET        shift and go to state 169


state 165

    (68) condicion -> IF LPAREN expresion RPAREN bloque . condicion_2
    (69) condicion_2 -> . END
    (70) condicion_2 -> . ELSE bloque END

    END             shift and go to state 171
    ELSE            shift and go to state 172

    condicion_2                    shift and go to state 170

state 166

    (74) for -> FOR LPAREN CTE_I COMMA CTE_I . RPAREN bloque END

    RPAREN          shift and go to state 173


state 167

    (75) while -> WHILE LPAREN expresion RPAREN bloque . END

    END             shift and go to state 174


state 168

    (67) factor_2 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    ID              reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    IF              reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    DRAW            reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    ARRAY           reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    FOR             reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    WHILE           reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    INT             reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    FLOAT           reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    BOOLEAN         reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    RETURN          reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    END             reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    ELSE            reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 67 (factor_2 -> COMMA exp RBRACKET .)


state 169

    (21) asignacion_3 -> COMMA CTE_I RBRACKET .

    ID              reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    IF              reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    DRAW            reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    ARRAY           reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    FOR             reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    WHILE           reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    INT             reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    FLOAT           reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    BOOLEAN         reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    RETURN          reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    END             reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)
    ELSE            reduce using rule 21 (asignacion_3 -> COMMA CTE_I RBRACKET .)


state 170

    (68) condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .

    ID              reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    IF              reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FOR             reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    INT             reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    END             reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 68 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)


state 171

    (69) condicion_2 -> END .

    ID              reduce using rule 69 (condicion_2 -> END .)
    IF              reduce using rule 69 (condicion_2 -> END .)
    DRAW            reduce using rule 69 (condicion_2 -> END .)
    ARRAY           reduce using rule 69 (condicion_2 -> END .)
    FOR             reduce using rule 69 (condicion_2 -> END .)
    WHILE           reduce using rule 69 (condicion_2 -> END .)
    INT             reduce using rule 69 (condicion_2 -> END .)
    FLOAT           reduce using rule 69 (condicion_2 -> END .)
    BOOLEAN         reduce using rule 69 (condicion_2 -> END .)
    RETURN          reduce using rule 69 (condicion_2 -> END .)
    END             reduce using rule 69 (condicion_2 -> END .)
    ELSE            reduce using rule 69 (condicion_2 -> END .)


state 172

    (70) condicion_2 -> ELSE . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    END             reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    bloque                         shift and go to state 175
    estatuto                       shift and go to state 58
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68
    data_type                      shift and go to state 13

state 173

    (74) for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (88) empty -> .
    (17) asignacion -> . ID asignacion_2
    (68) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (71) ciclo -> . for
    (72) ciclo -> . while
    (73) accion -> . ID POINT llamada SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . ARRAY ID vars3
    (29) llamada -> . ID LPAREN llamada_2
    (74) for -> . FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END
    (75) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    END             reduce using rule 88 (empty -> .)
    ID              shift and go to state 56
    IF              shift and go to state 66
    DRAW            shift and go to state 12
    ARRAY           shift and go to state 14
    FOR             shift and go to state 69
    WHILE           shift and go to state 70
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOLEAN         shift and go to state 17

    bloque                         shift and go to state 176
    estatuto                       shift and go to state 58
    empty                          shift and go to state 59
    asignacion                     shift and go to state 60
    condicion                      shift and go to state 61
    ciclo                          shift and go to state 62
    accion                         shift and go to state 63
    vars                           shift and go to state 64
    llamada                        shift and go to state 65
    for                            shift and go to state 67
    while                          shift and go to state 68
    data_type                      shift and go to state 13

state 174

    (75) while -> WHILE LPAREN expresion RPAREN bloque END .

    ID              reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    IF              reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    DRAW            reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ARRAY           reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FOR             reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    WHILE           reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    INT             reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FLOAT           reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    BOOLEAN         reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    RETURN          reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    END             reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ELSE            reduce using rule 75 (while -> WHILE LPAREN expresion RPAREN bloque END .)


state 175

    (70) condicion_2 -> ELSE bloque . END

    END             shift and go to state 177


state 176

    (74) for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque . END

    END             shift and go to state 178


state 177

    (70) condicion_2 -> ELSE bloque END .

    ID              reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    IF              reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    DRAW            reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    ARRAY           reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    FOR             reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    WHILE           reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    INT             reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    FLOAT           reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    BOOLEAN         reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    RETURN          reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    END             reduce using rule 70 (condicion_2 -> ELSE bloque END .)
    ELSE            reduce using rule 70 (condicion_2 -> ELSE bloque END .)


state 178

    (74) for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .

    ID              reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    IF              reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    DRAW            reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    ARRAY           reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    FOR             reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    WHILE           reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    INT             reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    FLOAT           reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    BOOLEAN         reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    RETURN          reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    END             reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)
    ELSE            reduce using rule 74 (for -> FOR LPAREN CTE_I COMMA CTE_I RPAREN bloque END .)

