Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones
Rule 2     programa -> funciones
Rule 3     funciones -> funcion main
Rule 4     funciones -> main
Rule 5     globales -> global_1 vars globales_2
Rule 6     globales_2 -> global_1 vars globales_2
Rule 7     globales_2 -> empty
Rule 8     global_1 -> GLOBAL
Rule 9     bloque -> estatuto bloque
Rule 10    bloque -> empty
Rule 11    data_type -> INT
Rule 12    data_type -> FLOAT
Rule 13    data_type -> BOOLEAN
Rule 14    main -> main_1 bloque END
Rule 15    main_1 -> DEF VOID MAIN LPAREN RPAREN
Rule 16    estatuto -> asignacion
Rule 17    estatuto -> condicion
Rule 18    estatuto -> ciclo
Rule 19    estatuto -> accion
Rule 20    estatuto -> vars
Rule 21    estatuto -> llamada SEMICOLON
Rule 22    asignacion -> ID asignacion_2 SEMICOLON
Rule 23    asignacion_2 -> EQUAL expresion
Rule 24    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion
Rule 25    asignacion_3 -> RBRACKET
Rule 26    asignacion_3 -> COMMA exp RBRACKET
Rule 27    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 28    vars -> data_type ID vars2
Rule 29    vars -> array ID vars3
Rule 30    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 31    array_2 -> COMMA CTE_I
Rule 32    array_2 -> empty
Rule 33    vars2 -> EQUAL expresion SEMICOLON
Rule 34    vars2 -> SEMICOLON
Rule 35    vars3 -> EQUAL def_array SEMICOLON
Rule 36    vars3 -> SEMICOLON
Rule 37    llamada -> ID LPAREN llamada_2
Rule 38    llamada_2 -> llamada_exp RPAREN
Rule 39    llamada_2 -> RPAREN
Rule 40    llamada_exp -> expresion llamada_exp2
Rule 41    llamada_exp2 -> COMMA llamada_exp
Rule 42    llamada_exp2 -> empty
Rule 43    def_array -> LBRACKET def_array_2
Rule 44    def_array_2 -> def_array_cte RBRACKET
Rule 45    def_array_2 -> RBRACKET
Rule 46    def_array_cte -> var_cte def_array_cte_2
Rule 47    def_array_cte_2 -> COMMA def_array_cte
Rule 48    def_array_cte_2 -> empty
Rule 49    expresion -> exp expresion_2
Rule 50    expresion_2 -> relop exp
Rule 51    expresion_2 -> empty
Rule 52    relop -> GREATER
Rule 53    relop -> GREATEREQUAL
Rule 54    relop -> LESS
Rule 55    relop -> LESSEQUAL
Rule 56    relop -> DEQUAL
Rule 57    relop -> DISTINT
Rule 58    exp -> termino exp_2
Rule 59    exp_2 -> addop exp
Rule 60    exp_2 -> empty
Rule 61    termino -> factor termino_2
Rule 62    termino_2 -> timesop termino
Rule 63    termino_2 -> empty
Rule 64    var_cte -> ID var_cte_2
Rule 65    var_cte -> CTE_I
Rule 66    var_cte -> CTE_F
Rule 67    var_cte -> TRUE
Rule 68    var_cte -> FALSE
Rule 69    var_cte -> llamada
Rule 70    var_cte_2 -> LBRACKET exp var_cte_3
Rule 71    var_cte_2 -> empty
Rule 72    var_cte_3 -> RBRACKET
Rule 73    var_cte_3 -> COMMA exp RBRACKET
Rule 74    factor -> LPAREN expresion RPAREN
Rule 75    factor -> addop var_cte
Rule 76    factor -> var_cte
Rule 77    condicion -> IF LPAREN expresion RPAREN bloque condicion_2
Rule 78    condicion_2 -> END
Rule 79    condicion_2 -> ELSE bloque END
Rule 80    ciclo -> for
Rule 81    ciclo -> while
Rule 82    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 83    accion_params -> LPAREN accion_params_2
Rule 84    accion_params_2 -> accion_params_cte RPAREN
Rule 85    accion_params_2 -> RPAREN
Rule 86    accion_params_cte -> var_cte accion_params_cte_2
Rule 87    accion_params_cte_2 -> COMMA accion_params_cte
Rule 88    accion_params_cte_2 -> empty
Rule 89    accion_nombre -> SETPOSITION
Rule 90    accion_nombre -> CIRCLE
Rule 91    accion_nombre -> RIGHT
Rule 92    accion_nombre -> LEFT
Rule 93    accion_nombre -> HIDE
Rule 94    accion_nombre -> SQUARE
Rule 95    accion_nombre -> CLEAR
Rule 96    accion_nombre -> SHOW
Rule 97    accion_nombre -> BACK
Rule 98    accion_nombre -> SPEED
Rule 99    accion_nombre -> FORWARD
Rule 100   accion_nombre -> SETCOLOR
Rule 101   for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
Rule 102   while -> WHILE LPAREN expresion RPAREN bloque END
Rule 103   funcion -> funcion_1 var_local bloque funcion_2
Rule 104   funcion_1 -> DEF data_type ID
Rule 105   funcion_2 -> RETURN expresion SEMICOLON END
Rule 106   funcion_2 -> END
Rule 107   var_local -> LPAREN var_local_2 RPAREN
Rule 108   var_local_2 -> data_type ID var_local_3
Rule 109   var_local_3 -> COMMA var_local_2
Rule 110   var_local_3 -> empty
Rule 111   addop -> PLUS
Rule 112   addop -> MINUS
Rule 113   timesop -> TIMES
Rule 114   timesop -> DIVIDE
Rule 115   timesop -> PERCENT
Rule 116   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 30
BACK                 : 97
BOOLEAN              : 13
CIRCLE               : 90
CLEAR                : 95
COMMA                : 26 30 31 41 47 73 87 101 101 109
CTE_F                : 66
CTE_I                : 30 31 65 101 101 101
DEF                  : 15 104
DEQUAL               : 56
DISTINT              : 57
DIVIDE               : 114
DRAW                 : 27
ELSE                 : 79
END                  : 14 78 79 101 102 105 106
EQUAL                : 23 24 27 33 35
FALSE                : 68
FLOAT                : 12
FOR                  : 101
FORWARD              : 99
GLOBAL               : 8
GREATER              : 30 52
GREATEREQUAL         : 53
HIDE                 : 93
ID                   : 22 27 28 29 37 64 82 104 108
IF                   : 77
INT                  : 11
LBRACKET             : 24 43 70
LEFT                 : 92
LESS                 : 30 54
LESSEQUAL            : 55
LPAREN               : 15 27 37 74 77 83 101 102 107
MAIN                 : 15
MINUS                : 112
NEWDRAW              : 27
OR                   : 
PERCENT              : 115
PLUS                 : 111
POINT                : 82
RBRACKET             : 25 26 44 45 72 73
RETURN               : 105
RIGHT                : 91
RPAREN               : 15 27 38 39 74 77 84 85 101 102 107
SEMICOLON            : 21 22 27 33 34 35 36 82 105
SETCOLOR             : 100
SETPOSITION          : 89
SHOW                 : 96
SPEED                : 98
SQUARE               : 94
TIMES                : 113
TRUE                 : 67
VOID                 : 15
WHILE                : 102
error                : 

Nonterminals, with rules where they appear

accion               : 19
accion_nombre        : 82
accion_params        : 82
accion_params_2      : 83
accion_params_cte    : 84 87
accion_params_cte_2  : 86
addop                : 59 75
array                : 29
array_2              : 30
asignacion           : 16
asignacion_2         : 22
asignacion_3         : 24
bloque               : 9 14 77 79 101 102 103
ciclo                : 18
condicion            : 17
condicion_2          : 77
data_type            : 28 30 104 108
def_array            : 35
def_array_2          : 43
def_array_cte        : 44 47
def_array_cte_2      : 46
empty                : 7 10 32 42 48 51 60 63 71 88 110
estatuto             : 9
exp                  : 24 26 49 50 59 70 73
exp_2                : 58
expresion            : 23 24 33 40 74 77 102 105
expresion_2          : 49
factor               : 61
for                  : 80
funcion              : 3
funcion_1            : 103
funcion_2            : 103
funciones            : 1 2
global_1             : 5 6
globales             : 1
globales_2           : 5 6
llamada              : 21 69
llamada_2            : 37
llamada_exp          : 38 41
llamada_exp2         : 40
main                 : 3 4
main_1               : 14
programa             : 0
relop                : 50
termino              : 58 62
termino_2            : 61
timesop              : 62
var_cte              : 46 75 76 86
var_cte_2            : 64
var_cte_3            : 70
var_local            : 103
var_local_2          : 107 109
var_local_3          : 108
vars                 : 5 6 20
vars2                : 28
vars3                : 29
while                : 81

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones
    (2) programa -> . funciones
    (5) globales -> . global_1 vars globales_2
    (3) funciones -> . funcion main
    (4) funciones -> . main
    (8) global_1 -> . GLOBAL
    (103) funcion -> . funcion_1 var_local bloque funcion_2
    (14) main -> . main_1 bloque END
    (104) funcion_1 -> . DEF data_type ID
    (15) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    GLOBAL          shift and go to state 5
    DEF             shift and go to state 6

    funcion                        shift and go to state 7
    main                           shift and go to state 9
    funciones                      shift and go to state 8
    global_1                       shift and go to state 1
    funcion_1                      shift and go to state 2
    programa                       shift and go to state 3
    main_1                         shift and go to state 10
    globales                       shift and go to state 4

state 1

    (5) globales -> global_1 . vars globales_2
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    data_type                      shift and go to state 13
    vars                           shift and go to state 18
    array                          shift and go to state 16

state 2

    (103) funcion -> funcion_1 . var_local bloque funcion_2
    (107) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 19

    var_local                      shift and go to state 20

state 3

    (0) S' -> programa .



state 4

    (1) programa -> globales . funciones
    (3) funciones -> . funcion main
    (4) funciones -> . main
    (103) funcion -> . funcion_1 var_local bloque funcion_2
    (14) main -> . main_1 bloque END
    (104) funcion_1 -> . DEF data_type ID
    (15) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    DEF             shift and go to state 6

    main_1                         shift and go to state 10
    funcion                        shift and go to state 7
    funcion_1                      shift and go to state 2
    funciones                      shift and go to state 21
    main                           shift and go to state 9

state 5

    (8) global_1 -> GLOBAL .

    DRAW            reduce using rule 8 (global_1 -> GLOBAL .)
    INT             reduce using rule 8 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 8 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 8 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 8 (global_1 -> GLOBAL .)


state 6

    (104) funcion_1 -> DEF . data_type ID
    (15) main_1 -> DEF . VOID MAIN LPAREN RPAREN
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    VOID            shift and go to state 22
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 23

state 7

    (3) funciones -> funcion . main
    (14) main -> . main_1 bloque END
    (15) main_1 -> . DEF VOID MAIN LPAREN RPAREN

    DEF             shift and go to state 24

    main                           shift and go to state 25
    main_1                         shift and go to state 10

state 8

    (2) programa -> funciones .

    $end            reduce using rule 2 (programa -> funciones .)


state 9

    (4) funciones -> main .

    $end            reduce using rule 4 (funciones -> main .)


state 10

    (14) main -> main_1 . bloque END
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    vars                           shift and go to state 38
    bloque                         shift and go to state 26

state 11

    (12) data_type -> FLOAT .

    ID              reduce using rule 12 (data_type -> FLOAT .)
    COMMA           reduce using rule 12 (data_type -> FLOAT .)


state 12

    (30) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 41


state 13

    (28) vars -> data_type . ID vars2

    ID              shift and go to state 42


state 14

    (11) data_type -> INT .

    ID              reduce using rule 11 (data_type -> INT .)
    COMMA           reduce using rule 11 (data_type -> INT .)


state 15

    (27) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 43


state 16

    (29) vars -> array . ID vars3

    ID              shift and go to state 44


state 17

    (13) data_type -> BOOLEAN .

    ID              reduce using rule 13 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 13 (data_type -> BOOLEAN .)


state 18

    (5) globales -> global_1 vars . globales_2
    (6) globales_2 -> . global_1 vars globales_2
    (7) globales_2 -> . empty
    (8) global_1 -> . GLOBAL
    (116) empty -> .

    GLOBAL          shift and go to state 5
    DEF             reduce using rule 116 (empty -> .)

    empty                          shift and go to state 45
    globales_2                     shift and go to state 46
    global_1                       shift and go to state 47

state 19

    (107) var_local -> LPAREN . var_local_2 RPAREN
    (108) var_local_2 -> . data_type ID var_local_3
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 49
    var_local_2                    shift and go to state 48

state 20

    (103) funcion -> funcion_1 var_local . bloque funcion_2
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 116 (empty -> .)
    END             reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    bloque                         shift and go to state 50
    vars                           shift and go to state 38

state 21

    (1) programa -> globales funciones .

    $end            reduce using rule 1 (programa -> globales funciones .)


state 22

    (15) main_1 -> DEF VOID . MAIN LPAREN RPAREN

    MAIN            shift and go to state 51


state 23

    (104) funcion_1 -> DEF data_type . ID

    ID              shift and go to state 52


state 24

    (15) main_1 -> DEF . VOID MAIN LPAREN RPAREN

    VOID            shift and go to state 22


state 25

    (3) funciones -> funcion main .

    $end            reduce using rule 3 (funciones -> funcion main .)


state 26

    (14) main -> main_1 bloque . END

    END             shift and go to state 53


state 27

    (10) bloque -> empty .

    END             reduce using rule 10 (bloque -> empty .)
    ELSE            reduce using rule 10 (bloque -> empty .)
    RETURN          reduce using rule 10 (bloque -> empty .)


state 28

    (19) estatuto -> accion .

    ID              reduce using rule 19 (estatuto -> accion .)
    IF              reduce using rule 19 (estatuto -> accion .)
    DRAW            reduce using rule 19 (estatuto -> accion .)
    FOR             reduce using rule 19 (estatuto -> accion .)
    WHILE           reduce using rule 19 (estatuto -> accion .)
    INT             reduce using rule 19 (estatuto -> accion .)
    FLOAT           reduce using rule 19 (estatuto -> accion .)
    BOOLEAN         reduce using rule 19 (estatuto -> accion .)
    ARRAY           reduce using rule 19 (estatuto -> accion .)
    END             reduce using rule 19 (estatuto -> accion .)
    ELSE            reduce using rule 19 (estatuto -> accion .)
    RETURN          reduce using rule 19 (estatuto -> accion .)


state 29

    (22) asignacion -> ID . asignacion_2 SEMICOLON
    (82) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (37) llamada -> ID . LPAREN llamada_2
    (23) asignacion_2 -> . EQUAL expresion
    (24) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL expresion

    POINT           shift and go to state 56
    LPAREN          shift and go to state 55
    EQUAL           shift and go to state 57
    LBRACKET        shift and go to state 54

    asignacion_2                   shift and go to state 58

state 30

    (102) while -> WHILE . LPAREN expresion RPAREN bloque END

    LPAREN          shift and go to state 59


state 31

    (17) estatuto -> condicion .

    ID              reduce using rule 17 (estatuto -> condicion .)
    IF              reduce using rule 17 (estatuto -> condicion .)
    DRAW            reduce using rule 17 (estatuto -> condicion .)
    FOR             reduce using rule 17 (estatuto -> condicion .)
    WHILE           reduce using rule 17 (estatuto -> condicion .)
    INT             reduce using rule 17 (estatuto -> condicion .)
    FLOAT           reduce using rule 17 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 17 (estatuto -> condicion .)
    ARRAY           reduce using rule 17 (estatuto -> condicion .)
    END             reduce using rule 17 (estatuto -> condicion .)
    ELSE            reduce using rule 17 (estatuto -> condicion .)
    RETURN          reduce using rule 17 (estatuto -> condicion .)


state 32

    (80) ciclo -> for .

    ID              reduce using rule 80 (ciclo -> for .)
    IF              reduce using rule 80 (ciclo -> for .)
    DRAW            reduce using rule 80 (ciclo -> for .)
    FOR             reduce using rule 80 (ciclo -> for .)
    WHILE           reduce using rule 80 (ciclo -> for .)
    INT             reduce using rule 80 (ciclo -> for .)
    FLOAT           reduce using rule 80 (ciclo -> for .)
    BOOLEAN         reduce using rule 80 (ciclo -> for .)
    ARRAY           reduce using rule 80 (ciclo -> for .)
    RETURN          reduce using rule 80 (ciclo -> for .)
    END             reduce using rule 80 (ciclo -> for .)
    ELSE            reduce using rule 80 (ciclo -> for .)


state 33

    (101) for -> FOR . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END

    LPAREN          shift and go to state 60


state 34

    (21) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 61


state 35

    (81) ciclo -> while .

    ID              reduce using rule 81 (ciclo -> while .)
    IF              reduce using rule 81 (ciclo -> while .)
    DRAW            reduce using rule 81 (ciclo -> while .)
    FOR             reduce using rule 81 (ciclo -> while .)
    WHILE           reduce using rule 81 (ciclo -> while .)
    INT             reduce using rule 81 (ciclo -> while .)
    FLOAT           reduce using rule 81 (ciclo -> while .)
    BOOLEAN         reduce using rule 81 (ciclo -> while .)
    ARRAY           reduce using rule 81 (ciclo -> while .)
    RETURN          reduce using rule 81 (ciclo -> while .)
    END             reduce using rule 81 (ciclo -> while .)
    ELSE            reduce using rule 81 (ciclo -> while .)


state 36

    (9) bloque -> estatuto . bloque
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 116 (empty -> .)
    RETURN          reduce using rule 116 (empty -> .)
    ELSE            reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    bloque                         shift and go to state 62
    vars                           shift and go to state 38

state 37

    (16) estatuto -> asignacion .

    ID              reduce using rule 16 (estatuto -> asignacion .)
    IF              reduce using rule 16 (estatuto -> asignacion .)
    DRAW            reduce using rule 16 (estatuto -> asignacion .)
    FOR             reduce using rule 16 (estatuto -> asignacion .)
    WHILE           reduce using rule 16 (estatuto -> asignacion .)
    INT             reduce using rule 16 (estatuto -> asignacion .)
    FLOAT           reduce using rule 16 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 16 (estatuto -> asignacion .)
    ARRAY           reduce using rule 16 (estatuto -> asignacion .)
    END             reduce using rule 16 (estatuto -> asignacion .)
    ELSE            reduce using rule 16 (estatuto -> asignacion .)
    RETURN          reduce using rule 16 (estatuto -> asignacion .)


state 38

    (20) estatuto -> vars .

    ID              reduce using rule 20 (estatuto -> vars .)
    IF              reduce using rule 20 (estatuto -> vars .)
    DRAW            reduce using rule 20 (estatuto -> vars .)
    FOR             reduce using rule 20 (estatuto -> vars .)
    WHILE           reduce using rule 20 (estatuto -> vars .)
    INT             reduce using rule 20 (estatuto -> vars .)
    FLOAT           reduce using rule 20 (estatuto -> vars .)
    BOOLEAN         reduce using rule 20 (estatuto -> vars .)
    ARRAY           reduce using rule 20 (estatuto -> vars .)
    END             reduce using rule 20 (estatuto -> vars .)
    ELSE            reduce using rule 20 (estatuto -> vars .)
    RETURN          reduce using rule 20 (estatuto -> vars .)


state 39

    (18) estatuto -> ciclo .

    ID              reduce using rule 18 (estatuto -> ciclo .)
    IF              reduce using rule 18 (estatuto -> ciclo .)
    DRAW            reduce using rule 18 (estatuto -> ciclo .)
    FOR             reduce using rule 18 (estatuto -> ciclo .)
    WHILE           reduce using rule 18 (estatuto -> ciclo .)
    INT             reduce using rule 18 (estatuto -> ciclo .)
    FLOAT           reduce using rule 18 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 18 (estatuto -> ciclo .)
    ARRAY           reduce using rule 18 (estatuto -> ciclo .)
    END             reduce using rule 18 (estatuto -> ciclo .)
    ELSE            reduce using rule 18 (estatuto -> ciclo .)
    RETURN          reduce using rule 18 (estatuto -> ciclo .)


state 40

    (77) condicion -> IF . LPAREN expresion RPAREN bloque condicion_2

    LPAREN          shift and go to state 63


state 41

    (30) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 64

state 42

    (28) vars -> data_type ID . vars2
    (33) vars2 -> . EQUAL expresion SEMICOLON
    (34) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 67
    SEMICOLON       shift and go to state 65

    vars2                          shift and go to state 66

state 43

    (27) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 68


state 44

    (29) vars -> array ID . vars3
    (35) vars3 -> . EQUAL def_array SEMICOLON
    (36) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 70
    SEMICOLON       shift and go to state 71

    vars3                          shift and go to state 69

state 45

    (7) globales_2 -> empty .

    DEF             reduce using rule 7 (globales_2 -> empty .)


state 46

    (5) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 5 (globales -> global_1 vars globales_2 .)


state 47

    (6) globales_2 -> global_1 . vars globales_2
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    data_type                      shift and go to state 13
    vars                           shift and go to state 72
    array                          shift and go to state 16

state 48

    (107) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 73


state 49

    (108) var_local_2 -> data_type . ID var_local_3

    ID              shift and go to state 74


state 50

    (103) funcion -> funcion_1 var_local bloque . funcion_2
    (105) funcion_2 -> . RETURN expresion SEMICOLON END
    (106) funcion_2 -> . END

    RETURN          shift and go to state 76
    END             shift and go to state 75

    funcion_2                      shift and go to state 77

state 51

    (15) main_1 -> DEF VOID MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 78


state 52

    (104) funcion_1 -> DEF data_type ID .

    LPAREN          reduce using rule 104 (funcion_1 -> DEF data_type ID .)


state 53

    (14) main -> main_1 bloque END .

    $end            reduce using rule 14 (main -> main_1 bloque END .)


state 54

    (24) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL expresion
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 79
    llamada                        shift and go to state 89
    termino                        shift and go to state 84
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 55

    (37) llamada -> ID LPAREN . llamada_2
    (38) llamada_2 -> . llamada_exp RPAREN
    (39) llamada_2 -> . RPAREN
    (40) llamada_exp -> . expresion llamada_exp2
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 97
    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada_exp                    shift and go to state 95
    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 96
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    llamada_2                      shift and go to state 94
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 56

    (82) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (89) accion_nombre -> . SETPOSITION
    (90) accion_nombre -> . CIRCLE
    (91) accion_nombre -> . RIGHT
    (92) accion_nombre -> . LEFT
    (93) accion_nombre -> . HIDE
    (94) accion_nombre -> . SQUARE
    (95) accion_nombre -> . CLEAR
    (96) accion_nombre -> . SHOW
    (97) accion_nombre -> . BACK
    (98) accion_nombre -> . SPEED
    (99) accion_nombre -> . FORWARD
    (100) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 110
    CIRCLE          shift and go to state 109
    RIGHT           shift and go to state 103
    LEFT            shift and go to state 108
    HIDE            shift and go to state 102
    SQUARE          shift and go to state 98
    CLEAR           shift and go to state 100
    SHOW            shift and go to state 105
    BACK            shift and go to state 104
    SPEED           shift and go to state 107
    FORWARD         shift and go to state 99
    SETCOLOR        shift and go to state 106

    accion_nombre                  shift and go to state 101

state 57

    (23) asignacion_2 -> EQUAL . expresion
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 111
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 58

    (22) asignacion -> ID asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 112


state 59

    (102) while -> WHILE LPAREN . expresion RPAREN bloque END
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 113
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 60

    (101) for -> FOR LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 114


state 61

    (21) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 21 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 21 (estatuto -> llamada SEMICOLON .)


state 62

    (9) bloque -> estatuto bloque .

    END             reduce using rule 9 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 9 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 9 (bloque -> estatuto bloque .)


state 63

    (77) condicion -> IF LPAREN . expresion RPAREN bloque condicion_2
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada                        shift and go to state 89
    exp                            shift and go to state 93
    expresion                      shift and go to state 115
    termino                        shift and go to state 84
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 64

    (30) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 116


state 65

    (34) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 34 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 34 (vars2 -> SEMICOLON .)
    ID              reduce using rule 34 (vars2 -> SEMICOLON .)
    IF              reduce using rule 34 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 34 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 34 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 34 (vars2 -> SEMICOLON .)
    INT             reduce using rule 34 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 34 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 34 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 34 (vars2 -> SEMICOLON .)
    END             reduce using rule 34 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 34 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 34 (vars2 -> SEMICOLON .)


state 66

    (28) vars -> data_type ID vars2 .

    GLOBAL          reduce using rule 28 (vars -> data_type ID vars2 .)
    DEF             reduce using rule 28 (vars -> data_type ID vars2 .)
    ID              reduce using rule 28 (vars -> data_type ID vars2 .)
    IF              reduce using rule 28 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 28 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 28 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 28 (vars -> data_type ID vars2 .)
    INT             reduce using rule 28 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 28 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 28 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 28 (vars -> data_type ID vars2 .)
    END             reduce using rule 28 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 28 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 28 (vars -> data_type ID vars2 .)


state 67

    (33) vars2 -> EQUAL . expresion SEMICOLON
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 117
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 68

    (27) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 118


state 69

    (29) vars -> array ID vars3 .

    GLOBAL          reduce using rule 29 (vars -> array ID vars3 .)
    DEF             reduce using rule 29 (vars -> array ID vars3 .)
    ID              reduce using rule 29 (vars -> array ID vars3 .)
    IF              reduce using rule 29 (vars -> array ID vars3 .)
    DRAW            reduce using rule 29 (vars -> array ID vars3 .)
    FOR             reduce using rule 29 (vars -> array ID vars3 .)
    WHILE           reduce using rule 29 (vars -> array ID vars3 .)
    INT             reduce using rule 29 (vars -> array ID vars3 .)
    FLOAT           reduce using rule 29 (vars -> array ID vars3 .)
    BOOLEAN         reduce using rule 29 (vars -> array ID vars3 .)
    ARRAY           reduce using rule 29 (vars -> array ID vars3 .)
    END             reduce using rule 29 (vars -> array ID vars3 .)
    RETURN          reduce using rule 29 (vars -> array ID vars3 .)
    ELSE            reduce using rule 29 (vars -> array ID vars3 .)


state 70

    (35) vars3 -> EQUAL . def_array SEMICOLON
    (43) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 119

    def_array                      shift and go to state 120

state 71

    (36) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 36 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 36 (vars3 -> SEMICOLON .)
    ID              reduce using rule 36 (vars3 -> SEMICOLON .)
    IF              reduce using rule 36 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 36 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 36 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 36 (vars3 -> SEMICOLON .)
    INT             reduce using rule 36 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 36 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 36 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 36 (vars3 -> SEMICOLON .)
    END             reduce using rule 36 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 36 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 36 (vars3 -> SEMICOLON .)


state 72

    (6) globales_2 -> global_1 vars . globales_2
    (6) globales_2 -> . global_1 vars globales_2
    (7) globales_2 -> . empty
    (8) global_1 -> . GLOBAL
    (116) empty -> .

    GLOBAL          shift and go to state 5
    DEF             reduce using rule 116 (empty -> .)

    empty                          shift and go to state 45
    globales_2                     shift and go to state 121
    global_1                       shift and go to state 47

state 73

    (107) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 107 (var_local -> LPAREN var_local_2 RPAREN .)


state 74

    (108) var_local_2 -> data_type ID . var_local_3
    (109) var_local_3 -> . COMMA var_local_2
    (110) var_local_3 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 124
    RPAREN          reduce using rule 116 (empty -> .)

    var_local_3                    shift and go to state 123
    empty                          shift and go to state 122

state 75

    (106) funcion_2 -> END .

    DEF             reduce using rule 106 (funcion_2 -> END .)


state 76

    (105) funcion_2 -> RETURN . expresion SEMICOLON END
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 125
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 77

    (103) funcion -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 103 (funcion -> funcion_1 var_local bloque funcion_2 .)


state 78

    (15) main_1 -> DEF VOID MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 126


state 79

    (24) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL expresion
    (25) asignacion_3 -> . RBRACKET
    (26) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 127
    COMMA           shift and go to state 129

    asignacion_3                   shift and go to state 128

state 80

    (61) termino -> factor . termino_2
    (62) termino_2 -> . timesop termino
    (63) termino_2 -> . empty
    (113) timesop -> . TIMES
    (114) timesop -> . DIVIDE
    (115) timesop -> . PERCENT
    (116) empty -> .

    TIMES           shift and go to state 132
    DIVIDE          shift and go to state 133
    PERCENT         shift and go to state 135
    PLUS            reduce using rule 116 (empty -> .)
    MINUS           reduce using rule 116 (empty -> .)
    RBRACKET        reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    LESS            reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    DEQUAL          reduce using rule 116 (empty -> .)
    DISTINT         reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)

    termino_2                      shift and go to state 130
    timesop                        shift and go to state 134
    empty                          shift and go to state 131

state 81

    (74) factor -> LPAREN . expresion RPAREN
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 136
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 82

    (64) var_cte -> ID . var_cte_2
    (37) llamada -> ID . LPAREN llamada_2
    (70) var_cte_2 -> . LBRACKET exp var_cte_3
    (71) var_cte_2 -> . empty
    (116) empty -> .

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 139
    TIMES           reduce using rule 116 (empty -> .)
    DIVIDE          reduce using rule 116 (empty -> .)
    PERCENT         reduce using rule 116 (empty -> .)
    PLUS            reduce using rule 116 (empty -> .)
    MINUS           reduce using rule 116 (empty -> .)
    RBRACKET        reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    LESS            reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    DEQUAL          reduce using rule 116 (empty -> .)
    DISTINT         reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)

    var_cte_2                      shift and go to state 138
    empty                          shift and go to state 137

state 83

    (67) var_cte -> TRUE .

    TIMES           reduce using rule 67 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 67 (var_cte -> TRUE .)
    PERCENT         reduce using rule 67 (var_cte -> TRUE .)
    PLUS            reduce using rule 67 (var_cte -> TRUE .)
    MINUS           reduce using rule 67 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 67 (var_cte -> TRUE .)
    GREATER         reduce using rule 67 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 67 (var_cte -> TRUE .)
    LESS            reduce using rule 67 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 67 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 67 (var_cte -> TRUE .)
    DISTINT         reduce using rule 67 (var_cte -> TRUE .)
    COMMA           reduce using rule 67 (var_cte -> TRUE .)
    RPAREN          reduce using rule 67 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 67 (var_cte -> TRUE .)


state 84

    (58) exp -> termino . exp_2
    (59) exp_2 -> . addop exp
    (60) exp_2 -> . empty
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (116) empty -> .

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    RBRACKET        reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    GREATEREQUAL    reduce using rule 116 (empty -> .)
    LESS            reduce using rule 116 (empty -> .)
    LESSEQUAL       reduce using rule 116 (empty -> .)
    DEQUAL          reduce using rule 116 (empty -> .)
    DISTINT         reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)

    empty                          shift and go to state 140
    addop                          shift and go to state 141
    exp_2                          shift and go to state 142

state 85

    (75) factor -> addop . var_cte
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada                        shift and go to state 89
    var_cte                        shift and go to state 143

state 86

    (112) addop -> MINUS .

    ID              reduce using rule 112 (addop -> MINUS .)
    CTE_I           reduce using rule 112 (addop -> MINUS .)
    CTE_F           reduce using rule 112 (addop -> MINUS .)
    TRUE            reduce using rule 112 (addop -> MINUS .)
    FALSE           reduce using rule 112 (addop -> MINUS .)
    LPAREN          reduce using rule 112 (addop -> MINUS .)
    PLUS            reduce using rule 112 (addop -> MINUS .)
    MINUS           reduce using rule 112 (addop -> MINUS .)


state 87

    (68) var_cte -> FALSE .

    TIMES           reduce using rule 68 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 68 (var_cte -> FALSE .)
    PERCENT         reduce using rule 68 (var_cte -> FALSE .)
    PLUS            reduce using rule 68 (var_cte -> FALSE .)
    MINUS           reduce using rule 68 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 68 (var_cte -> FALSE .)
    GREATER         reduce using rule 68 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 68 (var_cte -> FALSE .)
    LESS            reduce using rule 68 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 68 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 68 (var_cte -> FALSE .)
    DISTINT         reduce using rule 68 (var_cte -> FALSE .)
    COMMA           reduce using rule 68 (var_cte -> FALSE .)
    RPAREN          reduce using rule 68 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 68 (var_cte -> FALSE .)


state 88

    (111) addop -> PLUS .

    ID              reduce using rule 111 (addop -> PLUS .)
    CTE_I           reduce using rule 111 (addop -> PLUS .)
    CTE_F           reduce using rule 111 (addop -> PLUS .)
    TRUE            reduce using rule 111 (addop -> PLUS .)
    FALSE           reduce using rule 111 (addop -> PLUS .)
    LPAREN          reduce using rule 111 (addop -> PLUS .)
    PLUS            reduce using rule 111 (addop -> PLUS .)
    MINUS           reduce using rule 111 (addop -> PLUS .)


state 89

    (69) var_cte -> llamada .

    TIMES           reduce using rule 69 (var_cte -> llamada .)
    DIVIDE          reduce using rule 69 (var_cte -> llamada .)
    PERCENT         reduce using rule 69 (var_cte -> llamada .)
    PLUS            reduce using rule 69 (var_cte -> llamada .)
    MINUS           reduce using rule 69 (var_cte -> llamada .)
    RBRACKET        reduce using rule 69 (var_cte -> llamada .)
    GREATER         reduce using rule 69 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 69 (var_cte -> llamada .)
    LESS            reduce using rule 69 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 69 (var_cte -> llamada .)
    DEQUAL          reduce using rule 69 (var_cte -> llamada .)
    DISTINT         reduce using rule 69 (var_cte -> llamada .)
    COMMA           reduce using rule 69 (var_cte -> llamada .)
    RPAREN          reduce using rule 69 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 69 (var_cte -> llamada .)


state 90

    (66) var_cte -> CTE_F .

    TIMES           reduce using rule 66 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 66 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 66 (var_cte -> CTE_F .)
    PLUS            reduce using rule 66 (var_cte -> CTE_F .)
    MINUS           reduce using rule 66 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 66 (var_cte -> CTE_F .)
    GREATER         reduce using rule 66 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 66 (var_cte -> CTE_F .)
    LESS            reduce using rule 66 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 66 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 66 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 66 (var_cte -> CTE_F .)
    COMMA           reduce using rule 66 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 66 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 66 (var_cte -> CTE_F .)


state 91

    (65) var_cte -> CTE_I .

    TIMES           reduce using rule 65 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 65 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 65 (var_cte -> CTE_I .)
    PLUS            reduce using rule 65 (var_cte -> CTE_I .)
    MINUS           reduce using rule 65 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 65 (var_cte -> CTE_I .)
    GREATER         reduce using rule 65 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 65 (var_cte -> CTE_I .)
    LESS            reduce using rule 65 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 65 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 65 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 65 (var_cte -> CTE_I .)
    COMMA           reduce using rule 65 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 65 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 65 (var_cte -> CTE_I .)


state 92

    (76) factor -> var_cte .

    TIMES           reduce using rule 76 (factor -> var_cte .)
    DIVIDE          reduce using rule 76 (factor -> var_cte .)
    PERCENT         reduce using rule 76 (factor -> var_cte .)
    PLUS            reduce using rule 76 (factor -> var_cte .)
    MINUS           reduce using rule 76 (factor -> var_cte .)
    RBRACKET        reduce using rule 76 (factor -> var_cte .)
    COMMA           reduce using rule 76 (factor -> var_cte .)
    GREATER         reduce using rule 76 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 76 (factor -> var_cte .)
    LESS            reduce using rule 76 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 76 (factor -> var_cte .)
    DEQUAL          reduce using rule 76 (factor -> var_cte .)
    DISTINT         reduce using rule 76 (factor -> var_cte .)
    RPAREN          reduce using rule 76 (factor -> var_cte .)
    SEMICOLON       reduce using rule 76 (factor -> var_cte .)


state 93

    (49) expresion -> exp . expresion_2
    (50) expresion_2 -> . relop exp
    (51) expresion_2 -> . empty
    (52) relop -> . GREATER
    (53) relop -> . GREATEREQUAL
    (54) relop -> . LESS
    (55) relop -> . LESSEQUAL
    (56) relop -> . DEQUAL
    (57) relop -> . DISTINT
    (116) empty -> .

    GREATER         shift and go to state 145
    GREATEREQUAL    shift and go to state 146
    LESS            shift and go to state 148
    LESSEQUAL       shift and go to state 149
    DEQUAL          shift and go to state 152
    DISTINT         shift and go to state 147
    COMMA           reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    SEMICOLON       reduce using rule 116 (empty -> .)

    expresion_2                    shift and go to state 144
    empty                          shift and go to state 150
    relop                          shift and go to state 151

state 94

    (37) llamada -> ID LPAREN llamada_2 .

    TIMES           reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    DIVIDE          reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    PERCENT         reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    PLUS            reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    MINUS           reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    RBRACKET        reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    COMMA           reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    GREATER         reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    LESS            reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    DEQUAL          reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    DISTINT         reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    RPAREN          reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)
    SEMICOLON       reduce using rule 37 (llamada -> ID LPAREN llamada_2 .)


state 95

    (38) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 153


state 96

    (40) llamada_exp -> expresion . llamada_exp2
    (41) llamada_exp2 -> . COMMA llamada_exp
    (42) llamada_exp2 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 156
    RPAREN          reduce using rule 116 (empty -> .)

    llamada_exp2                   shift and go to state 154
    empty                          shift and go to state 155

state 97

    (39) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 39 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 39 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 39 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 39 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 39 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 39 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 39 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 39 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 39 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 39 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 39 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 39 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 39 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 39 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 39 (llamada_2 -> RPAREN .)


state 98

    (94) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 94 (accion_nombre -> SQUARE .)


state 99

    (99) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 99 (accion_nombre -> FORWARD .)


state 100

    (95) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 95 (accion_nombre -> CLEAR .)


state 101

    (82) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (83) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 157

    accion_params                  shift and go to state 158

state 102

    (93) accion_nombre -> HIDE .

    LPAREN          reduce using rule 93 (accion_nombre -> HIDE .)


state 103

    (91) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 91 (accion_nombre -> RIGHT .)


state 104

    (97) accion_nombre -> BACK .

    LPAREN          reduce using rule 97 (accion_nombre -> BACK .)


state 105

    (96) accion_nombre -> SHOW .

    LPAREN          reduce using rule 96 (accion_nombre -> SHOW .)


state 106

    (100) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 100 (accion_nombre -> SETCOLOR .)


state 107

    (98) accion_nombre -> SPEED .

    LPAREN          reduce using rule 98 (accion_nombre -> SPEED .)


state 108

    (92) accion_nombre -> LEFT .

    LPAREN          reduce using rule 92 (accion_nombre -> LEFT .)


state 109

    (90) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 90 (accion_nombre -> CIRCLE .)


state 110

    (89) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 89 (accion_nombre -> SETPOSITION .)


state 111

    (23) asignacion_2 -> EQUAL expresion .

    SEMICOLON       reduce using rule 23 (asignacion_2 -> EQUAL expresion .)


state 112

    (22) asignacion -> ID asignacion_2 SEMICOLON .

    ID              reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    IF              reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    FOR             reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    INT             reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    END             reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 22 (asignacion -> ID asignacion_2 SEMICOLON .)


state 113

    (102) while -> WHILE LPAREN expresion . RPAREN bloque END

    RPAREN          shift and go to state 159


state 114

    (101) for -> FOR LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 160


state 115

    (77) condicion -> IF LPAREN expresion . RPAREN bloque condicion_2

    RPAREN          shift and go to state 161


state 116

    (30) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 162


state 117

    (33) vars2 -> EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 163


state 118

    (27) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 164


state 119

    (43) def_array -> LBRACKET . def_array_2
    (44) def_array_2 -> . def_array_cte RBRACKET
    (45) def_array_2 -> . RBRACKET
    (46) def_array_cte -> . var_cte def_array_cte_2
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    RBRACKET        shift and go to state 167
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    def_array_cte                  shift and go to state 165
    var_cte                        shift and go to state 168
    def_array_2                    shift and go to state 166
    llamada                        shift and go to state 89

state 120

    (35) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 169


state 121

    (6) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 6 (globales_2 -> global_1 vars globales_2 .)


state 122

    (110) var_local_3 -> empty .

    RPAREN          reduce using rule 110 (var_local_3 -> empty .)


state 123

    (108) var_local_2 -> data_type ID var_local_3 .

    RPAREN          reduce using rule 108 (var_local_2 -> data_type ID var_local_3 .)


state 124

    (109) var_local_3 -> COMMA . var_local_2
    (108) var_local_2 -> . data_type ID var_local_3
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17

    data_type                      shift and go to state 49
    var_local_2                    shift and go to state 170

state 125

    (105) funcion_2 -> RETURN expresion . SEMICOLON END

    SEMICOLON       shift and go to state 171


state 126

    (15) main_1 -> DEF VOID MAIN LPAREN RPAREN .

    ID              reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    IF              reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    FOR             reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    INT             reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)
    END             reduce using rule 15 (main_1 -> DEF VOID MAIN LPAREN RPAREN .)


state 127

    (25) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 25 (asignacion_3 -> RBRACKET .)


state 128

    (24) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL expresion

    EQUAL           shift and go to state 172


state 129

    (26) asignacion_3 -> COMMA . exp RBRACKET
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada                        shift and go to state 89
    termino                        shift and go to state 84
    exp                            shift and go to state 173
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 130

    (61) termino -> factor termino_2 .

    PLUS            reduce using rule 61 (termino -> factor termino_2 .)
    MINUS           reduce using rule 61 (termino -> factor termino_2 .)
    GREATER         reduce using rule 61 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 61 (termino -> factor termino_2 .)
    LESS            reduce using rule 61 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 61 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 61 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 61 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 61 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 61 (termino -> factor termino_2 .)
    COMMA           reduce using rule 61 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 61 (termino -> factor termino_2 .)


state 131

    (63) termino_2 -> empty .

    PLUS            reduce using rule 63 (termino_2 -> empty .)
    MINUS           reduce using rule 63 (termino_2 -> empty .)
    RBRACKET        reduce using rule 63 (termino_2 -> empty .)
    COMMA           reduce using rule 63 (termino_2 -> empty .)
    GREATER         reduce using rule 63 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 63 (termino_2 -> empty .)
    LESS            reduce using rule 63 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 63 (termino_2 -> empty .)
    DEQUAL          reduce using rule 63 (termino_2 -> empty .)
    DISTINT         reduce using rule 63 (termino_2 -> empty .)
    RPAREN          reduce using rule 63 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 63 (termino_2 -> empty .)


state 132

    (113) timesop -> TIMES .

    LPAREN          reduce using rule 113 (timesop -> TIMES .)
    PLUS            reduce using rule 113 (timesop -> TIMES .)
    MINUS           reduce using rule 113 (timesop -> TIMES .)
    ID              reduce using rule 113 (timesop -> TIMES .)
    CTE_I           reduce using rule 113 (timesop -> TIMES .)
    CTE_F           reduce using rule 113 (timesop -> TIMES .)
    TRUE            reduce using rule 113 (timesop -> TIMES .)
    FALSE           reduce using rule 113 (timesop -> TIMES .)


state 133

    (114) timesop -> DIVIDE .

    LPAREN          reduce using rule 114 (timesop -> DIVIDE .)
    PLUS            reduce using rule 114 (timesop -> DIVIDE .)
    MINUS           reduce using rule 114 (timesop -> DIVIDE .)
    ID              reduce using rule 114 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 114 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 114 (timesop -> DIVIDE .)
    TRUE            reduce using rule 114 (timesop -> DIVIDE .)
    FALSE           reduce using rule 114 (timesop -> DIVIDE .)


state 134

    (62) termino_2 -> timesop . termino
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    termino                        shift and go to state 174
    var_cte                        shift and go to state 92
    llamada                        shift and go to state 89
    factor                         shift and go to state 80
    addop                          shift and go to state 85

state 135

    (115) timesop -> PERCENT .

    LPAREN          reduce using rule 115 (timesop -> PERCENT .)
    PLUS            reduce using rule 115 (timesop -> PERCENT .)
    MINUS           reduce using rule 115 (timesop -> PERCENT .)
    ID              reduce using rule 115 (timesop -> PERCENT .)
    CTE_I           reduce using rule 115 (timesop -> PERCENT .)
    CTE_F           reduce using rule 115 (timesop -> PERCENT .)
    TRUE            reduce using rule 115 (timesop -> PERCENT .)
    FALSE           reduce using rule 115 (timesop -> PERCENT .)


state 136

    (74) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 175


state 137

    (71) var_cte_2 -> empty .

    TIMES           reduce using rule 71 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 71 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 71 (var_cte_2 -> empty .)
    PLUS            reduce using rule 71 (var_cte_2 -> empty .)
    MINUS           reduce using rule 71 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 71 (var_cte_2 -> empty .)
    COMMA           reduce using rule 71 (var_cte_2 -> empty .)
    GREATER         reduce using rule 71 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 71 (var_cte_2 -> empty .)
    LESS            reduce using rule 71 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 71 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 71 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 71 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 71 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 71 (var_cte_2 -> empty .)


state 138

    (64) var_cte -> ID var_cte_2 .

    TIMES           reduce using rule 64 (var_cte -> ID var_cte_2 .)
    DIVIDE          reduce using rule 64 (var_cte -> ID var_cte_2 .)
    PERCENT         reduce using rule 64 (var_cte -> ID var_cte_2 .)
    PLUS            reduce using rule 64 (var_cte -> ID var_cte_2 .)
    MINUS           reduce using rule 64 (var_cte -> ID var_cte_2 .)
    RBRACKET        reduce using rule 64 (var_cte -> ID var_cte_2 .)
    GREATER         reduce using rule 64 (var_cte -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 64 (var_cte -> ID var_cte_2 .)
    LESS            reduce using rule 64 (var_cte -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 64 (var_cte -> ID var_cte_2 .)
    DEQUAL          reduce using rule 64 (var_cte -> ID var_cte_2 .)
    DISTINT         reduce using rule 64 (var_cte -> ID var_cte_2 .)
    COMMA           reduce using rule 64 (var_cte -> ID var_cte_2 .)
    RPAREN          reduce using rule 64 (var_cte -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 64 (var_cte -> ID var_cte_2 .)


state 139

    (70) var_cte_2 -> LBRACKET . exp var_cte_3
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 176
    llamada                        shift and go to state 89
    termino                        shift and go to state 84
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 140

    (60) exp_2 -> empty .

    RBRACKET        reduce using rule 60 (exp_2 -> empty .)
    COMMA           reduce using rule 60 (exp_2 -> empty .)
    GREATER         reduce using rule 60 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 60 (exp_2 -> empty .)
    LESS            reduce using rule 60 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 60 (exp_2 -> empty .)
    DEQUAL          reduce using rule 60 (exp_2 -> empty .)
    DISTINT         reduce using rule 60 (exp_2 -> empty .)
    RPAREN          reduce using rule 60 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 60 (exp_2 -> empty .)


state 141

    (59) exp_2 -> addop . exp
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada                        shift and go to state 89
    termino                        shift and go to state 84
    exp                            shift and go to state 177
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 142

    (58) exp -> termino exp_2 .

    GREATER         reduce using rule 58 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 58 (exp -> termino exp_2 .)
    LESS            reduce using rule 58 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 58 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 58 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 58 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 58 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 58 (exp -> termino exp_2 .)
    COMMA           reduce using rule 58 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 58 (exp -> termino exp_2 .)


state 143

    (75) factor -> addop var_cte .

    TIMES           reduce using rule 75 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 75 (factor -> addop var_cte .)
    PERCENT         reduce using rule 75 (factor -> addop var_cte .)
    PLUS            reduce using rule 75 (factor -> addop var_cte .)
    MINUS           reduce using rule 75 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 75 (factor -> addop var_cte .)
    COMMA           reduce using rule 75 (factor -> addop var_cte .)
    GREATER         reduce using rule 75 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 75 (factor -> addop var_cte .)
    LESS            reduce using rule 75 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 75 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 75 (factor -> addop var_cte .)
    DISTINT         reduce using rule 75 (factor -> addop var_cte .)
    RPAREN          reduce using rule 75 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 75 (factor -> addop var_cte .)


state 144

    (49) expresion -> exp expresion_2 .

    SEMICOLON       reduce using rule 49 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 49 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 49 (expresion -> exp expresion_2 .)


state 145

    (52) relop -> GREATER .

    LPAREN          reduce using rule 52 (relop -> GREATER .)
    PLUS            reduce using rule 52 (relop -> GREATER .)
    MINUS           reduce using rule 52 (relop -> GREATER .)
    ID              reduce using rule 52 (relop -> GREATER .)
    CTE_I           reduce using rule 52 (relop -> GREATER .)
    CTE_F           reduce using rule 52 (relop -> GREATER .)
    TRUE            reduce using rule 52 (relop -> GREATER .)
    FALSE           reduce using rule 52 (relop -> GREATER .)


state 146

    (53) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 53 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 53 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 53 (relop -> GREATEREQUAL .)
    ID              reduce using rule 53 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 53 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 53 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 53 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 53 (relop -> GREATEREQUAL .)


state 147

    (57) relop -> DISTINT .

    LPAREN          reduce using rule 57 (relop -> DISTINT .)
    PLUS            reduce using rule 57 (relop -> DISTINT .)
    MINUS           reduce using rule 57 (relop -> DISTINT .)
    ID              reduce using rule 57 (relop -> DISTINT .)
    CTE_I           reduce using rule 57 (relop -> DISTINT .)
    CTE_F           reduce using rule 57 (relop -> DISTINT .)
    TRUE            reduce using rule 57 (relop -> DISTINT .)
    FALSE           reduce using rule 57 (relop -> DISTINT .)


state 148

    (54) relop -> LESS .

    LPAREN          reduce using rule 54 (relop -> LESS .)
    PLUS            reduce using rule 54 (relop -> LESS .)
    MINUS           reduce using rule 54 (relop -> LESS .)
    ID              reduce using rule 54 (relop -> LESS .)
    CTE_I           reduce using rule 54 (relop -> LESS .)
    CTE_F           reduce using rule 54 (relop -> LESS .)
    TRUE            reduce using rule 54 (relop -> LESS .)
    FALSE           reduce using rule 54 (relop -> LESS .)


state 149

    (55) relop -> LESSEQUAL .

    LPAREN          reduce using rule 55 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 55 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 55 (relop -> LESSEQUAL .)
    ID              reduce using rule 55 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 55 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 55 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 55 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 55 (relop -> LESSEQUAL .)


state 150

    (51) expresion_2 -> empty .

    COMMA           reduce using rule 51 (expresion_2 -> empty .)
    RPAREN          reduce using rule 51 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 51 (expresion_2 -> empty .)


state 151

    (50) expresion_2 -> relop . exp
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 178
    llamada                        shift and go to state 89
    termino                        shift and go to state 84
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 152

    (56) relop -> DEQUAL .

    LPAREN          reduce using rule 56 (relop -> DEQUAL .)
    PLUS            reduce using rule 56 (relop -> DEQUAL .)
    MINUS           reduce using rule 56 (relop -> DEQUAL .)
    ID              reduce using rule 56 (relop -> DEQUAL .)
    CTE_I           reduce using rule 56 (relop -> DEQUAL .)
    CTE_F           reduce using rule 56 (relop -> DEQUAL .)
    TRUE            reduce using rule 56 (relop -> DEQUAL .)
    FALSE           reduce using rule 56 (relop -> DEQUAL .)


state 153

    (38) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 38 (llamada_2 -> llamada_exp RPAREN .)


state 154

    (40) llamada_exp -> expresion llamada_exp2 .

    RPAREN          reduce using rule 40 (llamada_exp -> expresion llamada_exp2 .)


state 155

    (42) llamada_exp2 -> empty .

    RPAREN          reduce using rule 42 (llamada_exp2 -> empty .)


state 156

    (41) llamada_exp2 -> COMMA . llamada_exp
    (40) llamada_exp -> . expresion llamada_exp2
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada_exp                    shift and go to state 179
    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 96
    var_cte                        shift and go to state 92
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    termino                        shift and go to state 84

state 157

    (83) accion_params -> LPAREN . accion_params_2
    (84) accion_params_2 -> . accion_params_cte RPAREN
    (85) accion_params_2 -> . RPAREN
    (86) accion_params_cte -> . var_cte accion_params_cte_2
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 181
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    accion_params_2                shift and go to state 180
    llamada                        shift and go to state 89
    accion_params_cte              shift and go to state 182
    var_cte                        shift and go to state 183

state 158

    (82) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 184


state 159

    (102) while -> WHILE LPAREN expresion RPAREN . bloque END
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    bloque                         shift and go to state 185
    vars                           shift and go to state 38

state 160

    (101) for -> FOR LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 186


state 161

    (77) condicion -> IF LPAREN expresion RPAREN . bloque condicion_2
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 116 (empty -> .)
    ELSE            reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    bloque                         shift and go to state 187
    vars                           shift and go to state 38

state 162

    (30) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (31) array_2 -> . COMMA CTE_I
    (32) array_2 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 189
    GREATER         reduce using rule 116 (empty -> .)

    empty                          shift and go to state 190
    array_2                        shift and go to state 188

state 163

    (33) vars2 -> EQUAL expresion SEMICOLON .

    GLOBAL          reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    DEF             reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    ID              reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    IF              reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    DRAW            reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    FOR             reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    INT             reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    BOOLEAN         reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    ARRAY           reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    END             reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)
    ELSE            reduce using rule 33 (vars2 -> EQUAL expresion SEMICOLON .)


state 164

    (27) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 165

    (44) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 192


state 166

    (43) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 43 (def_array -> LBRACKET def_array_2 .)


state 167

    (45) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 45 (def_array_2 -> RBRACKET .)


state 168

    (46) def_array_cte -> var_cte . def_array_cte_2
    (47) def_array_cte_2 -> . COMMA def_array_cte
    (48) def_array_cte_2 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 194
    RBRACKET        reduce using rule 116 (empty -> .)

    empty                          shift and go to state 193
    def_array_cte_2                shift and go to state 195

state 169

    (35) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 35 (vars3 -> EQUAL def_array SEMICOLON .)


state 170

    (109) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 109 (var_local_3 -> COMMA var_local_2 .)


state 171

    (105) funcion_2 -> RETURN expresion SEMICOLON . END

    END             shift and go to state 196


state 172

    (24) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . expresion
    (49) expresion -> . exp expresion_2
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    exp                            shift and go to state 93
    factor                         shift and go to state 80
    expresion                      shift and go to state 197
    termino                        shift and go to state 84
    llamada                        shift and go to state 89
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 173

    (26) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 198


state 174

    (62) termino_2 -> timesop termino .

    PLUS            reduce using rule 62 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 62 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 62 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 62 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 62 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 62 (termino_2 -> timesop termino .)
    LESS            reduce using rule 62 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 62 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 62 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 62 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 62 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 62 (termino_2 -> timesop termino .)


state 175

    (74) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    PERCENT         reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 74 (factor -> LPAREN expresion RPAREN .)


state 176

    (70) var_cte_2 -> LBRACKET exp . var_cte_3
    (72) var_cte_3 -> . RBRACKET
    (73) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 200
    COMMA           shift and go to state 199

    var_cte_3                      shift and go to state 201

state 177

    (59) exp_2 -> addop exp .

    RBRACKET        reduce using rule 59 (exp_2 -> addop exp .)
    COMMA           reduce using rule 59 (exp_2 -> addop exp .)
    GREATER         reduce using rule 59 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 59 (exp_2 -> addop exp .)
    LESS            reduce using rule 59 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 59 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 59 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 59 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 59 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 59 (exp_2 -> addop exp .)


state 178

    (50) expresion_2 -> relop exp .

    COMMA           reduce using rule 50 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 50 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 50 (expresion_2 -> relop exp .)


state 179

    (41) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 41 (llamada_exp2 -> COMMA llamada_exp .)


state 180

    (83) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 83 (accion_params -> LPAREN accion_params_2 .)


state 181

    (85) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 85 (accion_params_2 -> RPAREN .)


state 182

    (84) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 202


state 183

    (86) accion_params_cte -> var_cte . accion_params_cte_2
    (87) accion_params_cte_2 -> . COMMA accion_params_cte
    (88) accion_params_cte_2 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 204
    RPAREN          reduce using rule 116 (empty -> .)

    empty                          shift and go to state 203
    accion_params_cte_2            shift and go to state 205

state 184

    (82) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 82 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 185

    (102) while -> WHILE LPAREN expresion RPAREN bloque . END

    END             shift and go to state 206


state 186

    (101) for -> FOR LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 207


state 187

    (77) condicion -> IF LPAREN expresion RPAREN bloque . condicion_2
    (78) condicion_2 -> . END
    (79) condicion_2 -> . ELSE bloque END

    END             shift and go to state 210
    ELSE            shift and go to state 208

    condicion_2                    shift and go to state 209

state 188

    (30) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 211


state 189

    (31) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 212


state 190

    (32) array_2 -> empty .

    GREATER         reduce using rule 32 (array_2 -> empty .)


state 191

    (27) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 192

    (44) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 44 (def_array_2 -> def_array_cte RBRACKET .)


state 193

    (48) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 48 (def_array_cte_2 -> empty .)


state 194

    (47) def_array_cte_2 -> COMMA . def_array_cte
    (46) def_array_cte -> . var_cte def_array_cte_2
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    def_array_cte                  shift and go to state 214
    var_cte                        shift and go to state 168
    llamada                        shift and go to state 89

state 195

    (46) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 46 (def_array_cte -> var_cte def_array_cte_2 .)


state 196

    (105) funcion_2 -> RETURN expresion SEMICOLON END .

    DEF             reduce using rule 105 (funcion_2 -> RETURN expresion SEMICOLON END .)


state 197

    (24) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .

    SEMICOLON       reduce using rule 24 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .)


state 198

    (26) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 26 (asignacion_3 -> COMMA exp RBRACKET .)


state 199

    (73) var_cte_3 -> COMMA . exp RBRACKET
    (58) exp -> . termino exp_2
    (61) termino -> . factor termino_2
    (74) factor -> . LPAREN expresion RPAREN
    (75) factor -> . addop var_cte
    (76) factor -> . var_cte
    (111) addop -> . PLUS
    (112) addop -> . MINUS
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 81
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada                        shift and go to state 89
    termino                        shift and go to state 84
    exp                            shift and go to state 215
    factor                         shift and go to state 80
    addop                          shift and go to state 85
    var_cte                        shift and go to state 92

state 200

    (72) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 72 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 72 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 72 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 72 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 72 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 72 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 72 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 72 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 72 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 72 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 72 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 72 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 72 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 72 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 72 (var_cte_3 -> RBRACKET .)


state 201

    (70) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 70 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 202

    (84) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 84 (accion_params_2 -> accion_params_cte RPAREN .)


state 203

    (88) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 88 (accion_params_cte_2 -> empty .)


state 204

    (87) accion_params_cte_2 -> COMMA . accion_params_cte
    (86) accion_params_cte -> . var_cte accion_params_cte_2
    (64) var_cte -> . ID var_cte_2
    (65) var_cte -> . CTE_I
    (66) var_cte -> . CTE_F
    (67) var_cte -> . TRUE
    (68) var_cte -> . FALSE
    (69) var_cte -> . llamada
    (37) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 82
    CTE_I           shift and go to state 91
    CTE_F           shift and go to state 90
    TRUE            shift and go to state 83
    FALSE           shift and go to state 87

    llamada                        shift and go to state 89
    accion_params_cte              shift and go to state 216
    var_cte                        shift and go to state 183

state 205

    (86) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 86 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 206

    (102) while -> WHILE LPAREN expresion RPAREN bloque END .

    ID              reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    IF              reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    DRAW            reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FOR             reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    WHILE           reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    INT             reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FLOAT           reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    BOOLEAN         reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ARRAY           reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    END             reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    RETURN          reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ELSE            reduce using rule 102 (while -> WHILE LPAREN expresion RPAREN bloque END .)


state 207

    (101) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque END

    CTE_I           shift and go to state 217


state 208

    (79) condicion_2 -> ELSE . bloque END
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    bloque                         shift and go to state 218
    vars                           shift and go to state 38

state 209

    (77) condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .

    ID              reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    IF              reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FOR             reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    INT             reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    END             reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)


state 210

    (78) condicion_2 -> END .

    ID              reduce using rule 78 (condicion_2 -> END .)
    IF              reduce using rule 78 (condicion_2 -> END .)
    DRAW            reduce using rule 78 (condicion_2 -> END .)
    FOR             reduce using rule 78 (condicion_2 -> END .)
    WHILE           reduce using rule 78 (condicion_2 -> END .)
    INT             reduce using rule 78 (condicion_2 -> END .)
    FLOAT           reduce using rule 78 (condicion_2 -> END .)
    BOOLEAN         reduce using rule 78 (condicion_2 -> END .)
    ARRAY           reduce using rule 78 (condicion_2 -> END .)
    END             reduce using rule 78 (condicion_2 -> END .)
    RETURN          reduce using rule 78 (condicion_2 -> END .)
    ELSE            reduce using rule 78 (condicion_2 -> END .)


state 211

    (30) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 30 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 212

    (31) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 31 (array_2 -> COMMA CTE_I .)


state 213

    (27) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    GLOBAL          reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 27 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 214

    (47) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 47 (def_array_cte_2 -> COMMA def_array_cte .)


state 215

    (73) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 219


state 216

    (87) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 87 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 217

    (101) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque END

    RPAREN          shift and go to state 220


state 218

    (79) condicion_2 -> ELSE bloque . END

    END             shift and go to state 221


state 219

    (73) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 73 (var_cte_3 -> COMMA exp RBRACKET .)


state 220

    (101) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque END
    (9) bloque -> . estatuto bloque
    (10) bloque -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . ciclo
    (19) estatuto -> . accion
    (20) estatuto -> . vars
    (21) estatuto -> . llamada SEMICOLON
    (116) empty -> .
    (22) asignacion -> . ID asignacion_2 SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (80) ciclo -> . for
    (81) ciclo -> . while
    (82) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (27) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (28) vars -> . data_type ID vars2
    (29) vars -> . array ID vars3
    (37) llamada -> . ID LPAREN llamada_2
    (101) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (102) while -> . WHILE LPAREN expresion RPAREN bloque END
    (11) data_type -> . INT
    (12) data_type -> . FLOAT
    (13) data_type -> . BOOLEAN
    (30) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 116 (empty -> .)
    ID              shift and go to state 29
    IF              shift and go to state 40
    DRAW            shift and go to state 15
    FOR             shift and go to state 33
    WHILE           shift and go to state 30
    INT             shift and go to state 14
    FLOAT           shift and go to state 11
    BOOLEAN         shift and go to state 17
    ARRAY           shift and go to state 12

    accion                         shift and go to state 28
    empty                          shift and go to state 27
    data_type                      shift and go to state 13
    condicion                      shift and go to state 31
    for                            shift and go to state 32
    llamada                        shift and go to state 34
    while                          shift and go to state 35
    estatuto                       shift and go to state 36
    asignacion                     shift and go to state 37
    array                          shift and go to state 16
    ciclo                          shift and go to state 39
    bloque                         shift and go to state 222
    vars                           shift and go to state 38

state 221

    (79) condicion_2 -> ELSE bloque END .

    ID              reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    IF              reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    DRAW            reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    FOR             reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    WHILE           reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    INT             reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    FLOAT           reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    BOOLEAN         reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    ARRAY           reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    END             reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    RETURN          reduce using rule 79 (condicion_2 -> ELSE bloque END .)
    ELSE            reduce using rule 79 (condicion_2 -> ELSE bloque END .)


state 222

    (101) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . END

    END             shift and go to state 223


state 223

    (101) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .

    ID              reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    IF              reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    DRAW            reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    FOR             reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    WHILE           reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    INT             reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    FLOAT           reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    BOOLEAN         reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    ARRAY           reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    END             reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    RETURN          reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    ELSE            reduce using rule 101 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)

