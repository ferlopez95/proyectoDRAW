Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    OR
    AND

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funcion main
Rule 2     programa -> main
Rule 3     programa -> funcion main
Rule 4     globales -> GLOBAL vars
Rule 5     bloque -> estatuto bloque
Rule 6     bloque -> empty
Rule 7     data_type -> INT
Rule 8     data_type -> FLOAT
Rule 9     data_type -> BOOLEAN
Rule 10    main -> DEF VOID MAIN LPAREN RPAREN bloque END
Rule 11    estatuto -> asignacion
Rule 12    estatuto -> condicion
Rule 13    estatuto -> ciclo
Rule 14    estatuto -> accion
Rule 15    estatuto -> vars
Rule 16    estatuto -> llamada SEMICOLON
Rule 17    asignacion -> ID asignacion_2 SEMICOLON
Rule 18    asignacion_2 -> EQUAL expresion
Rule 19    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion
Rule 20    asignacion_3 -> RBRACKET
Rule 21    asignacion_3 -> COMMA exp RBRACKET
Rule 22    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 23    vars -> data_type ID vars2
Rule 24    vars -> array ID vars3
Rule 25    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 26    array_2 -> COMMA CTE_I
Rule 27    array_2 -> empty
Rule 28    vars2 -> EQUAL expresion SEMICOLON
Rule 29    vars2 -> SEMICOLON
Rule 30    vars3 -> EQUAL def_array SEMICOLON
Rule 31    vars3 -> SEMICOLON
Rule 32    llamada -> ID LPAREN llamada_2
Rule 33    llamada_2 -> llamada_exp RPAREN
Rule 34    llamada_2 -> RPAREN
Rule 35    llamada_exp -> expresion llamada_exp2
Rule 36    llamada_exp2 -> COMMA llamada_exp
Rule 37    llamada_exp2 -> empty
Rule 38    def_array -> LBRACKET def_array_2
Rule 39    def_array_2 -> def_array_cte RBRACKET
Rule 40    def_array_2 -> RBRACKET
Rule 41    def_array_cte -> var_cte def_array_cte_2
Rule 42    def_array_cte_2 -> COMMA def_array_cte
Rule 43    def_array_cte_2 -> empty
Rule 44    expresion -> exp expresion_2
Rule 45    expresion_2 -> relop exp
Rule 46    expresion_2 -> empty
Rule 47    relop -> GREATER
Rule 48    relop -> GREATEREQUAL
Rule 49    relop -> LESS
Rule 50    relop -> LESSEQUAL
Rule 51    relop -> DEQUAL
Rule 52    relop -> DISTINT
Rule 53    exp -> termino exp_2
Rule 54    exp_2 -> addop exp
Rule 55    exp_2 -> empty
Rule 56    termino -> factor termino_2
Rule 57    termino_2 -> timesop termino
Rule 58    termino_2 -> empty
Rule 59    var_cte -> ID var_cte_2
Rule 60    var_cte -> CTE_I
Rule 61    var_cte -> CTE_F
Rule 62    var_cte -> TRUE
Rule 63    var_cte -> FALSE
Rule 64    var_cte -> llamada
Rule 65    var_cte_2 -> LBRACKET exp var_cte_3
Rule 66    var_cte_2 -> empty
Rule 67    var_cte_3 -> RBRACKET
Rule 68    var_cte_3 -> COMMA exp RBRACKET
Rule 69    factor -> LPAREN expresion RPAREN
Rule 70    factor -> addop var_cte
Rule 71    factor -> var_cte
Rule 72    condicion -> IF LPAREN expresion RPAREN bloque condicion_2
Rule 73    condicion_2 -> END
Rule 74    condicion_2 -> ELSE bloque END
Rule 75    ciclo -> for
Rule 76    ciclo -> while
Rule 77    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 78    accion_params -> LPAREN accion_params_2
Rule 79    accion_params_2 -> accion_params_cte RPAREN
Rule 80    accion_params_2 -> RPAREN
Rule 81    accion_params_cte -> var_cte accion_params_cte_2
Rule 82    accion_params_cte_2 -> COMMA accion_params_cte
Rule 83    accion_params_cte_2 -> empty
Rule 84    accion_nombre -> SETPOSITION
Rule 85    accion_nombre -> CIRCLE
Rule 86    accion_nombre -> RIGHT
Rule 87    accion_nombre -> LEFT
Rule 88    accion_nombre -> HIDE
Rule 89    accion_nombre -> SQUARE
Rule 90    accion_nombre -> CLEAR
Rule 91    accion_nombre -> SHOW
Rule 92    accion_nombre -> BACK
Rule 93    accion_nombre -> SPEED
Rule 94    accion_nombre -> FORWARD
Rule 95    accion_nombre -> SETCOLOR
Rule 96    for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
Rule 97    while -> WHILE LPAREN expresion RPAREN bloque END
Rule 98    funcion -> DEF data_type ID var_local bloque funcion_2
Rule 99    funcion_2 -> RETURN expresion SEMICOLON END
Rule 100   funcion_2 -> END
Rule 101   var_local -> LPAREN var_local_2 RPAREN
Rule 102   var_local_2 -> data_type ID var_local_3
Rule 103   var_local_3 -> COMMA var_local_2
Rule 104   var_local_3 -> empty
Rule 105   addop -> PLUS
Rule 106   addop -> MINUS
Rule 107   timesop -> TIMES
Rule 108   timesop -> DIVIDE
Rule 109   timesop -> PERCENT
Rule 110   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 25
BACK                 : 92
BOOLEAN              : 9
CIRCLE               : 85
CLEAR                : 90
COMMA                : 21 25 26 36 42 68 82 96 96 103
CTE_F                : 61
CTE_I                : 25 26 60 96 96 96
DEF                  : 10 98
DEQUAL               : 51
DISTINT              : 52
DIVIDE               : 108
DRAW                 : 22
ELSE                 : 74
END                  : 10 73 74 96 97 99 100
EQUAL                : 18 19 22 28 30
FALSE                : 63
FLOAT                : 8
FOR                  : 96
FORWARD              : 94
GLOBAL               : 4
GREATER              : 25 47
GREATEREQUAL         : 48
HIDE                 : 88
ID                   : 17 22 23 24 32 59 77 98 102
IF                   : 72
INT                  : 7
LBRACKET             : 19 38 65
LEFT                 : 87
LESS                 : 25 49
LESSEQUAL            : 50
LPAREN               : 10 22 32 69 72 78 96 97 101
MAIN                 : 10
MINUS                : 106
NEWDRAW              : 22
OR                   : 
PERCENT              : 109
PLUS                 : 105
POINT                : 77
RBRACKET             : 20 21 39 40 67 68
RETURN               : 99
RIGHT                : 86
RPAREN               : 10 22 33 34 69 72 79 80 96 97 101
SEMICOLON            : 16 17 22 28 29 30 31 77 99
SETCOLOR             : 95
SETPOSITION          : 84
SHOW                 : 91
SPEED                : 93
SQUARE               : 89
TIMES                : 107
TRUE                 : 62
VOID                 : 10
WHILE                : 97
error                : 

Nonterminals, with rules where they appear

accion               : 14
accion_nombre        : 77
accion_params        : 77
accion_params_2      : 78
accion_params_cte    : 79 82
accion_params_cte_2  : 81
addop                : 54 70
array                : 24
array_2              : 25
asignacion           : 11
asignacion_2         : 17
asignacion_3         : 19
bloque               : 5 10 72 74 96 97 98
ciclo                : 13
condicion            : 12
condicion_2          : 72
data_type            : 23 25 98 102
def_array            : 30
def_array_2          : 38
def_array_cte        : 39 42
def_array_cte_2      : 41
empty                : 6 27 37 43 46 55 58 66 83 104
estatuto             : 5
exp                  : 19 21 44 45 54 65 68
exp_2                : 53
expresion            : 18 19 28 35 69 72 97 99
expresion_2          : 44
factor               : 56
for                  : 75
funcion              : 1 3
funcion_2            : 98
globales             : 1
llamada              : 16 64
llamada_2            : 32
llamada_exp          : 33 36
llamada_exp2         : 35
main                 : 1 2 3
programa             : 0
relop                : 45
termino              : 53 57
termino_2            : 56
timesop              : 57
var_cte              : 41 70 71 81
var_cte_2            : 59
var_cte_3            : 65
var_local            : 98
var_local_2          : 101 103
var_local_3          : 102
vars                 : 4 15
vars2                : 23
vars3                : 24
while                : 76

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funcion main
    (2) programa -> . main
    (3) programa -> . funcion main
    (4) globales -> . GLOBAL vars
    (10) main -> . DEF VOID MAIN LPAREN RPAREN bloque END
    (98) funcion -> . DEF data_type ID var_local bloque funcion_2

    GLOBAL          shift and go to state 6
    DEF             shift and go to state 5

    funcion                        shift and go to state 2
    programa                       shift and go to state 3
    main                           shift and go to state 4
    globales                       shift and go to state 1

state 1

    (1) programa -> globales . funcion main
    (98) funcion -> . DEF data_type ID var_local bloque funcion_2

    DEF             shift and go to state 8

    funcion                        shift and go to state 7

state 2

    (3) programa -> funcion . main
    (10) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    DEF             shift and go to state 10

    main                           shift and go to state 9

state 3

    (0) S' -> programa .



state 4

    (2) programa -> main .

    $end            reduce using rule 2 (programa -> main .)


state 5

    (10) main -> DEF . VOID MAIN LPAREN RPAREN bloque END
    (98) funcion -> DEF . data_type ID var_local bloque funcion_2
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11

    data_type                      shift and go to state 12

state 6

    (4) globales -> GLOBAL . vars
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 19
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    array                          shift and go to state 17
    vars                           shift and go to state 20
    data_type                      shift and go to state 16

state 7

    (1) programa -> globales funcion . main
    (10) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    DEF             shift and go to state 10

    main                           shift and go to state 21

state 8

    (98) funcion -> DEF . data_type ID var_local bloque funcion_2
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11

    data_type                      shift and go to state 12

state 9

    (3) programa -> funcion main .

    $end            reduce using rule 3 (programa -> funcion main .)


state 10

    (10) main -> DEF . VOID MAIN LPAREN RPAREN bloque END

    VOID            shift and go to state 13


state 11

    (9) data_type -> BOOLEAN .

    ID              reduce using rule 9 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 9 (data_type -> BOOLEAN .)


state 12

    (98) funcion -> DEF data_type . ID var_local bloque funcion_2

    ID              shift and go to state 22


state 13

    (10) main -> DEF VOID . MAIN LPAREN RPAREN bloque END

    MAIN            shift and go to state 23


state 14

    (7) data_type -> INT .

    ID              reduce using rule 7 (data_type -> INT .)
    COMMA           reduce using rule 7 (data_type -> INT .)


state 15

    (8) data_type -> FLOAT .

    ID              reduce using rule 8 (data_type -> FLOAT .)
    COMMA           reduce using rule 8 (data_type -> FLOAT .)


state 16

    (23) vars -> data_type . ID vars2

    ID              shift and go to state 24


state 17

    (24) vars -> array . ID vars3

    ID              shift and go to state 25


state 18

    (25) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 26


state 19

    (22) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 27


state 20

    (4) globales -> GLOBAL vars .

    DEF             reduce using rule 4 (globales -> GLOBAL vars .)


state 21

    (1) programa -> globales funcion main .

    $end            reduce using rule 1 (programa -> globales funcion main .)


state 22

    (98) funcion -> DEF data_type ID . var_local bloque funcion_2
    (101) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 29

    var_local                      shift and go to state 28

state 23

    (10) main -> DEF VOID MAIN . LPAREN RPAREN bloque END

    LPAREN          shift and go to state 30


state 24

    (23) vars -> data_type ID . vars2
    (28) vars2 -> . EQUAL expresion SEMICOLON
    (29) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 32
    SEMICOLON       shift and go to state 31

    vars2                          shift and go to state 33

state 25

    (24) vars -> array ID . vars3
    (30) vars3 -> . EQUAL def_array SEMICOLON
    (31) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 35
    SEMICOLON       shift and go to state 34

    vars3                          shift and go to state 36

state 26

    (25) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11

    data_type                      shift and go to state 37

state 27

    (22) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 38


state 28

    (98) funcion -> DEF data_type ID var_local . bloque funcion_2
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 110 (empty -> .)
    END             reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    ciclo                          shift and go to state 43
    bloque                         shift and go to state 49
    llamada                        shift and go to state 47
    while                          shift and go to state 41
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 29

    (101) var_local -> LPAREN . var_local_2 RPAREN
    (102) var_local_2 -> . data_type ID var_local_3
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11

    var_local_2                    shift and go to state 54
    data_type                      shift and go to state 55

state 30

    (10) main -> DEF VOID MAIN LPAREN . RPAREN bloque END

    RPAREN          shift and go to state 56


state 31

    (29) vars2 -> SEMICOLON .

    DEF             reduce using rule 29 (vars2 -> SEMICOLON .)
    ID              reduce using rule 29 (vars2 -> SEMICOLON .)
    IF              reduce using rule 29 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 29 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 29 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 29 (vars2 -> SEMICOLON .)
    INT             reduce using rule 29 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 29 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 29 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 29 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 29 (vars2 -> SEMICOLON .)
    END             reduce using rule 29 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 29 (vars2 -> SEMICOLON .)


state 32

    (28) vars2 -> EQUAL . expresion SEMICOLON
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 59
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    expresion                      shift and go to state 63
    factor                         shift and go to state 64

state 33

    (23) vars -> data_type ID vars2 .

    DEF             reduce using rule 23 (vars -> data_type ID vars2 .)
    ID              reduce using rule 23 (vars -> data_type ID vars2 .)
    IF              reduce using rule 23 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 23 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 23 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 23 (vars -> data_type ID vars2 .)
    INT             reduce using rule 23 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 23 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 23 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 23 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 23 (vars -> data_type ID vars2 .)
    END             reduce using rule 23 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 23 (vars -> data_type ID vars2 .)


state 34

    (31) vars3 -> SEMICOLON .

    DEF             reduce using rule 31 (vars3 -> SEMICOLON .)
    ID              reduce using rule 31 (vars3 -> SEMICOLON .)
    IF              reduce using rule 31 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 31 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 31 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 31 (vars3 -> SEMICOLON .)
    INT             reduce using rule 31 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 31 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 31 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 31 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 31 (vars3 -> SEMICOLON .)
    END             reduce using rule 31 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 31 (vars3 -> SEMICOLON .)


state 35

    (30) vars3 -> EQUAL . def_array SEMICOLON
    (38) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 72

    def_array                      shift and go to state 73

state 36

    (24) vars -> array ID vars3 .

    DEF             reduce using rule 24 (vars -> array ID vars3 .)
    ID              reduce using rule 24 (vars -> array ID vars3 .)
    IF              reduce using rule 24 (vars -> array ID vars3 .)
    DRAW            reduce using rule 24 (vars -> array ID vars3 .)
    FOR             reduce using rule 24 (vars -> array ID vars3 .)
    WHILE           reduce using rule 24 (vars -> array ID vars3 .)
    INT             reduce using rule 24 (vars -> array ID vars3 .)
    FLOAT           reduce using rule 24 (vars -> array ID vars3 .)
    BOOLEAN         reduce using rule 24 (vars -> array ID vars3 .)
    ARRAY           reduce using rule 24 (vars -> array ID vars3 .)
    RETURN          reduce using rule 24 (vars -> array ID vars3 .)
    END             reduce using rule 24 (vars -> array ID vars3 .)
    ELSE            reduce using rule 24 (vars -> array ID vars3 .)


state 37

    (25) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 74


state 38

    (22) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 75


state 39

    (75) ciclo -> for .

    ID              reduce using rule 75 (ciclo -> for .)
    IF              reduce using rule 75 (ciclo -> for .)
    DRAW            reduce using rule 75 (ciclo -> for .)
    FOR             reduce using rule 75 (ciclo -> for .)
    WHILE           reduce using rule 75 (ciclo -> for .)
    INT             reduce using rule 75 (ciclo -> for .)
    FLOAT           reduce using rule 75 (ciclo -> for .)
    BOOLEAN         reduce using rule 75 (ciclo -> for .)
    ARRAY           reduce using rule 75 (ciclo -> for .)
    END             reduce using rule 75 (ciclo -> for .)
    ELSE            reduce using rule 75 (ciclo -> for .)
    RETURN          reduce using rule 75 (ciclo -> for .)


state 40

    (14) estatuto -> accion .

    ID              reduce using rule 14 (estatuto -> accion .)
    IF              reduce using rule 14 (estatuto -> accion .)
    DRAW            reduce using rule 14 (estatuto -> accion .)
    FOR             reduce using rule 14 (estatuto -> accion .)
    WHILE           reduce using rule 14 (estatuto -> accion .)
    INT             reduce using rule 14 (estatuto -> accion .)
    FLOAT           reduce using rule 14 (estatuto -> accion .)
    BOOLEAN         reduce using rule 14 (estatuto -> accion .)
    ARRAY           reduce using rule 14 (estatuto -> accion .)
    END             reduce using rule 14 (estatuto -> accion .)
    RETURN          reduce using rule 14 (estatuto -> accion .)
    ELSE            reduce using rule 14 (estatuto -> accion .)


state 41

    (76) ciclo -> while .

    ID              reduce using rule 76 (ciclo -> while .)
    IF              reduce using rule 76 (ciclo -> while .)
    DRAW            reduce using rule 76 (ciclo -> while .)
    FOR             reduce using rule 76 (ciclo -> while .)
    WHILE           reduce using rule 76 (ciclo -> while .)
    INT             reduce using rule 76 (ciclo -> while .)
    FLOAT           reduce using rule 76 (ciclo -> while .)
    BOOLEAN         reduce using rule 76 (ciclo -> while .)
    ARRAY           reduce using rule 76 (ciclo -> while .)
    END             reduce using rule 76 (ciclo -> while .)
    ELSE            reduce using rule 76 (ciclo -> while .)
    RETURN          reduce using rule 76 (ciclo -> while .)


state 42

    (72) condicion -> IF . LPAREN expresion RPAREN bloque condicion_2

    LPAREN          shift and go to state 76


state 43

    (13) estatuto -> ciclo .

    ID              reduce using rule 13 (estatuto -> ciclo .)
    IF              reduce using rule 13 (estatuto -> ciclo .)
    DRAW            reduce using rule 13 (estatuto -> ciclo .)
    FOR             reduce using rule 13 (estatuto -> ciclo .)
    WHILE           reduce using rule 13 (estatuto -> ciclo .)
    INT             reduce using rule 13 (estatuto -> ciclo .)
    FLOAT           reduce using rule 13 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 13 (estatuto -> ciclo .)
    ARRAY           reduce using rule 13 (estatuto -> ciclo .)
    END             reduce using rule 13 (estatuto -> ciclo .)
    RETURN          reduce using rule 13 (estatuto -> ciclo .)
    ELSE            reduce using rule 13 (estatuto -> ciclo .)


state 44

    (12) estatuto -> condicion .

    ID              reduce using rule 12 (estatuto -> condicion .)
    IF              reduce using rule 12 (estatuto -> condicion .)
    DRAW            reduce using rule 12 (estatuto -> condicion .)
    FOR             reduce using rule 12 (estatuto -> condicion .)
    WHILE           reduce using rule 12 (estatuto -> condicion .)
    INT             reduce using rule 12 (estatuto -> condicion .)
    FLOAT           reduce using rule 12 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 12 (estatuto -> condicion .)
    ARRAY           reduce using rule 12 (estatuto -> condicion .)
    END             reduce using rule 12 (estatuto -> condicion .)
    RETURN          reduce using rule 12 (estatuto -> condicion .)
    ELSE            reduce using rule 12 (estatuto -> condicion .)


state 45

    (11) estatuto -> asignacion .

    ID              reduce using rule 11 (estatuto -> asignacion .)
    IF              reduce using rule 11 (estatuto -> asignacion .)
    DRAW            reduce using rule 11 (estatuto -> asignacion .)
    FOR             reduce using rule 11 (estatuto -> asignacion .)
    WHILE           reduce using rule 11 (estatuto -> asignacion .)
    INT             reduce using rule 11 (estatuto -> asignacion .)
    FLOAT           reduce using rule 11 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 11 (estatuto -> asignacion .)
    ARRAY           reduce using rule 11 (estatuto -> asignacion .)
    END             reduce using rule 11 (estatuto -> asignacion .)
    RETURN          reduce using rule 11 (estatuto -> asignacion .)
    ELSE            reduce using rule 11 (estatuto -> asignacion .)


state 46

    (6) bloque -> empty .

    END             reduce using rule 6 (bloque -> empty .)
    ELSE            reduce using rule 6 (bloque -> empty .)
    RETURN          reduce using rule 6 (bloque -> empty .)


state 47

    (16) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 77


state 48

    (5) bloque -> estatuto . bloque
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 110 (empty -> .)
    END             reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    llamada                        shift and go to state 47
    bloque                         shift and go to state 78
    while                          shift and go to state 41
    ciclo                          shift and go to state 43
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 49

    (98) funcion -> DEF data_type ID var_local bloque . funcion_2
    (99) funcion_2 -> . RETURN expresion SEMICOLON END
    (100) funcion_2 -> . END

    RETURN          shift and go to state 81
    END             shift and go to state 80

    funcion_2                      shift and go to state 79

state 50

    (17) asignacion -> ID . asignacion_2 SEMICOLON
    (77) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (32) llamada -> ID . LPAREN llamada_2
    (18) asignacion_2 -> . EQUAL expresion
    (19) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL expresion

    POINT           shift and go to state 84
    LPAREN          shift and go to state 83
    EQUAL           shift and go to state 82
    LBRACKET        shift and go to state 86

    asignacion_2                   shift and go to state 85

state 51

    (96) for -> FOR . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END

    LPAREN          shift and go to state 87


state 52

    (97) while -> WHILE . LPAREN expresion RPAREN bloque END

    LPAREN          shift and go to state 88


state 53

    (15) estatuto -> vars .

    ID              reduce using rule 15 (estatuto -> vars .)
    IF              reduce using rule 15 (estatuto -> vars .)
    DRAW            reduce using rule 15 (estatuto -> vars .)
    FOR             reduce using rule 15 (estatuto -> vars .)
    WHILE           reduce using rule 15 (estatuto -> vars .)
    INT             reduce using rule 15 (estatuto -> vars .)
    FLOAT           reduce using rule 15 (estatuto -> vars .)
    BOOLEAN         reduce using rule 15 (estatuto -> vars .)
    ARRAY           reduce using rule 15 (estatuto -> vars .)
    END             reduce using rule 15 (estatuto -> vars .)
    RETURN          reduce using rule 15 (estatuto -> vars .)
    ELSE            reduce using rule 15 (estatuto -> vars .)


state 54

    (101) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 89


state 55

    (102) var_local_2 -> data_type . ID var_local_3

    ID              shift and go to state 90


state 56

    (10) main -> DEF VOID MAIN LPAREN RPAREN . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    llamada                        shift and go to state 47
    bloque                         shift and go to state 91
    while                          shift and go to state 41
    ciclo                          shift and go to state 43
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 57

    (53) exp -> termino . exp_2
    (54) exp_2 -> . addop exp
    (55) exp_2 -> . empty
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (110) empty -> .

    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    GREATER         reduce using rule 110 (empty -> .)
    GREATEREQUAL    reduce using rule 110 (empty -> .)
    LESS            reduce using rule 110 (empty -> .)
    LESSEQUAL       reduce using rule 110 (empty -> .)
    DEQUAL          reduce using rule 110 (empty -> .)
    DISTINT         reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)

    addop                          shift and go to state 92
    exp_2                          shift and go to state 94
    empty                          shift and go to state 93

state 58

    (60) var_cte -> CTE_I .

    TIMES           reduce using rule 60 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 60 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 60 (var_cte -> CTE_I .)
    PLUS            reduce using rule 60 (var_cte -> CTE_I .)
    MINUS           reduce using rule 60 (var_cte -> CTE_I .)
    GREATER         reduce using rule 60 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 60 (var_cte -> CTE_I .)
    LESS            reduce using rule 60 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 60 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 60 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 60 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 60 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 60 (var_cte -> CTE_I .)
    COMMA           reduce using rule 60 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 60 (var_cte -> CTE_I .)


state 59

    (44) expresion -> exp . expresion_2
    (45) expresion_2 -> . relop exp
    (46) expresion_2 -> . empty
    (47) relop -> . GREATER
    (48) relop -> . GREATEREQUAL
    (49) relop -> . LESS
    (50) relop -> . LESSEQUAL
    (51) relop -> . DEQUAL
    (52) relop -> . DISTINT
    (110) empty -> .

    GREATER         shift and go to state 100
    GREATEREQUAL    shift and go to state 101
    LESS            shift and go to state 95
    LESSEQUAL       shift and go to state 98
    DEQUAL          shift and go to state 97
    DISTINT         shift and go to state 99
    SEMICOLON       reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)

    expresion_2                    shift and go to state 102
    empty                          shift and go to state 96
    relop                          shift and go to state 103

state 60

    (69) factor -> LPAREN . expresion RPAREN
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 59
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    expresion                      shift and go to state 104
    factor                         shift and go to state 64

state 61

    (61) var_cte -> CTE_F .

    TIMES           reduce using rule 61 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 61 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 61 (var_cte -> CTE_F .)
    PLUS            reduce using rule 61 (var_cte -> CTE_F .)
    MINUS           reduce using rule 61 (var_cte -> CTE_F .)
    GREATER         reduce using rule 61 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 61 (var_cte -> CTE_F .)
    LESS            reduce using rule 61 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 61 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 61 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 61 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 61 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 61 (var_cte -> CTE_F .)
    COMMA           reduce using rule 61 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 61 (var_cte -> CTE_F .)


state 62

    (59) var_cte -> ID . var_cte_2
    (32) llamada -> ID . LPAREN llamada_2
    (65) var_cte_2 -> . LBRACKET exp var_cte_3
    (66) var_cte_2 -> . empty
    (110) empty -> .

    LPAREN          shift and go to state 83
    LBRACKET        shift and go to state 105
    TIMES           reduce using rule 110 (empty -> .)
    DIVIDE          reduce using rule 110 (empty -> .)
    PERCENT         reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    MINUS           reduce using rule 110 (empty -> .)
    GREATER         reduce using rule 110 (empty -> .)
    GREATEREQUAL    reduce using rule 110 (empty -> .)
    LESS            reduce using rule 110 (empty -> .)
    LESSEQUAL       reduce using rule 110 (empty -> .)
    DEQUAL          reduce using rule 110 (empty -> .)
    DISTINT         reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)

    var_cte_2                      shift and go to state 106
    empty                          shift and go to state 107

state 63

    (28) vars2 -> EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 108


state 64

    (56) termino -> factor . termino_2
    (57) termino_2 -> . timesop termino
    (58) termino_2 -> . empty
    (107) timesop -> . TIMES
    (108) timesop -> . DIVIDE
    (109) timesop -> . PERCENT
    (110) empty -> .

    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 109
    PERCENT         shift and go to state 112
    PLUS            reduce using rule 110 (empty -> .)
    MINUS           reduce using rule 110 (empty -> .)
    GREATER         reduce using rule 110 (empty -> .)
    GREATEREQUAL    reduce using rule 110 (empty -> .)
    LESS            reduce using rule 110 (empty -> .)
    LESSEQUAL       reduce using rule 110 (empty -> .)
    DEQUAL          reduce using rule 110 (empty -> .)
    DISTINT         reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)

    empty                          shift and go to state 113
    termino_2                      shift and go to state 114
    timesop                        shift and go to state 111

state 65

    (63) var_cte -> FALSE .

    TIMES           reduce using rule 63 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 63 (var_cte -> FALSE .)
    PERCENT         reduce using rule 63 (var_cte -> FALSE .)
    PLUS            reduce using rule 63 (var_cte -> FALSE .)
    MINUS           reduce using rule 63 (var_cte -> FALSE .)
    GREATER         reduce using rule 63 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 63 (var_cte -> FALSE .)
    LESS            reduce using rule 63 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 63 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 63 (var_cte -> FALSE .)
    DISTINT         reduce using rule 63 (var_cte -> FALSE .)
    RPAREN          reduce using rule 63 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 63 (var_cte -> FALSE .)
    COMMA           reduce using rule 63 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 63 (var_cte -> FALSE .)


state 66

    (70) factor -> addop . var_cte
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    llamada                        shift and go to state 67
    var_cte                        shift and go to state 115

state 67

    (64) var_cte -> llamada .

    TIMES           reduce using rule 64 (var_cte -> llamada .)
    DIVIDE          reduce using rule 64 (var_cte -> llamada .)
    PERCENT         reduce using rule 64 (var_cte -> llamada .)
    PLUS            reduce using rule 64 (var_cte -> llamada .)
    MINUS           reduce using rule 64 (var_cte -> llamada .)
    GREATER         reduce using rule 64 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 64 (var_cte -> llamada .)
    LESS            reduce using rule 64 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 64 (var_cte -> llamada .)
    DEQUAL          reduce using rule 64 (var_cte -> llamada .)
    DISTINT         reduce using rule 64 (var_cte -> llamada .)
    RPAREN          reduce using rule 64 (var_cte -> llamada .)
    RBRACKET        reduce using rule 64 (var_cte -> llamada .)
    COMMA           reduce using rule 64 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 64 (var_cte -> llamada .)


state 68

    (71) factor -> var_cte .

    TIMES           reduce using rule 71 (factor -> var_cte .)
    DIVIDE          reduce using rule 71 (factor -> var_cte .)
    PERCENT         reduce using rule 71 (factor -> var_cte .)
    PLUS            reduce using rule 71 (factor -> var_cte .)
    MINUS           reduce using rule 71 (factor -> var_cte .)
    RBRACKET        reduce using rule 71 (factor -> var_cte .)
    SEMICOLON       reduce using rule 71 (factor -> var_cte .)
    RPAREN          reduce using rule 71 (factor -> var_cte .)
    COMMA           reduce using rule 71 (factor -> var_cte .)
    GREATER         reduce using rule 71 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 71 (factor -> var_cte .)
    LESS            reduce using rule 71 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 71 (factor -> var_cte .)
    DEQUAL          reduce using rule 71 (factor -> var_cte .)
    DISTINT         reduce using rule 71 (factor -> var_cte .)


state 69

    (106) addop -> MINUS .

    LPAREN          reduce using rule 106 (addop -> MINUS .)
    PLUS            reduce using rule 106 (addop -> MINUS .)
    MINUS           reduce using rule 106 (addop -> MINUS .)
    ID              reduce using rule 106 (addop -> MINUS .)
    CTE_I           reduce using rule 106 (addop -> MINUS .)
    CTE_F           reduce using rule 106 (addop -> MINUS .)
    TRUE            reduce using rule 106 (addop -> MINUS .)
    FALSE           reduce using rule 106 (addop -> MINUS .)


state 70

    (105) addop -> PLUS .

    LPAREN          reduce using rule 105 (addop -> PLUS .)
    PLUS            reduce using rule 105 (addop -> PLUS .)
    MINUS           reduce using rule 105 (addop -> PLUS .)
    ID              reduce using rule 105 (addop -> PLUS .)
    CTE_I           reduce using rule 105 (addop -> PLUS .)
    CTE_F           reduce using rule 105 (addop -> PLUS .)
    TRUE            reduce using rule 105 (addop -> PLUS .)
    FALSE           reduce using rule 105 (addop -> PLUS .)


state 71

    (62) var_cte -> TRUE .

    TIMES           reduce using rule 62 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 62 (var_cte -> TRUE .)
    PERCENT         reduce using rule 62 (var_cte -> TRUE .)
    PLUS            reduce using rule 62 (var_cte -> TRUE .)
    MINUS           reduce using rule 62 (var_cte -> TRUE .)
    GREATER         reduce using rule 62 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 62 (var_cte -> TRUE .)
    LESS            reduce using rule 62 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 62 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 62 (var_cte -> TRUE .)
    DISTINT         reduce using rule 62 (var_cte -> TRUE .)
    RPAREN          reduce using rule 62 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 62 (var_cte -> TRUE .)
    COMMA           reduce using rule 62 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 62 (var_cte -> TRUE .)


state 72

    (38) def_array -> LBRACKET . def_array_2
    (39) def_array_2 -> . def_array_cte RBRACKET
    (40) def_array_2 -> . RBRACKET
    (41) def_array_cte -> . var_cte def_array_cte_2
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    RBRACKET        shift and go to state 119
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    llamada                        shift and go to state 67
    def_array_2                    shift and go to state 117
    def_array_cte                  shift and go to state 118
    var_cte                        shift and go to state 116

state 73

    (30) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 120


state 74

    (25) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 121


state 75

    (22) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 122


state 76

    (72) condicion -> IF LPAREN . expresion RPAREN bloque condicion_2
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    exp                            shift and go to state 59
    addop                          shift and go to state 66
    expresion                      shift and go to state 123
    factor                         shift and go to state 64

state 77

    (16) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 16 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 16 (estatuto -> llamada SEMICOLON .)


state 78

    (5) bloque -> estatuto bloque .

    END             reduce using rule 5 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 5 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 5 (bloque -> estatuto bloque .)


state 79

    (98) funcion -> DEF data_type ID var_local bloque funcion_2 .

    DEF             reduce using rule 98 (funcion -> DEF data_type ID var_local bloque funcion_2 .)


state 80

    (100) funcion_2 -> END .

    DEF             reduce using rule 100 (funcion_2 -> END .)


state 81

    (99) funcion_2 -> RETURN . expresion SEMICOLON END
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 59
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    expresion                      shift and go to state 124
    factor                         shift and go to state 64

state 82

    (18) asignacion_2 -> EQUAL . expresion
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 59
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    expresion                      shift and go to state 125
    factor                         shift and go to state 64

state 83

    (32) llamada -> ID LPAREN . llamada_2
    (33) llamada_2 -> . llamada_exp RPAREN
    (34) llamada_2 -> . RPAREN
    (35) llamada_exp -> . expresion llamada_exp2
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 127
    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    llamada_exp                    shift and go to state 126
    llamada_2                      shift and go to state 129
    exp                            shift and go to state 59
    addop                          shift and go to state 66
    expresion                      shift and go to state 128
    factor                         shift and go to state 64

state 84

    (77) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (84) accion_nombre -> . SETPOSITION
    (85) accion_nombre -> . CIRCLE
    (86) accion_nombre -> . RIGHT
    (87) accion_nombre -> . LEFT
    (88) accion_nombre -> . HIDE
    (89) accion_nombre -> . SQUARE
    (90) accion_nombre -> . CLEAR
    (91) accion_nombre -> . SHOW
    (92) accion_nombre -> . BACK
    (93) accion_nombre -> . SPEED
    (94) accion_nombre -> . FORWARD
    (95) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 130
    CIRCLE          shift and go to state 132
    RIGHT           shift and go to state 141
    LEFT            shift and go to state 139
    HIDE            shift and go to state 136
    SQUARE          shift and go to state 142
    CLEAR           shift and go to state 140
    SHOW            shift and go to state 138
    BACK            shift and go to state 134
    SPEED           shift and go to state 133
    FORWARD         shift and go to state 137
    SETCOLOR        shift and go to state 131

    accion_nombre                  shift and go to state 135

state 85

    (17) asignacion -> ID asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 86

    (19) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL expresion
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 144
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    factor                         shift and go to state 64

state 87

    (96) for -> FOR LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 145


state 88

    (97) while -> WHILE LPAREN . expresion RPAREN bloque END
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 59
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    expresion                      shift and go to state 146
    factor                         shift and go to state 64

state 89

    (101) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 101 (var_local -> LPAREN var_local_2 RPAREN .)


state 90

    (102) var_local_2 -> data_type ID . var_local_3
    (103) var_local_3 -> . COMMA var_local_2
    (104) var_local_3 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 149
    RPAREN          reduce using rule 110 (empty -> .)

    empty                          shift and go to state 147
    var_local_3                    shift and go to state 148

state 91

    (10) main -> DEF VOID MAIN LPAREN RPAREN bloque . END

    END             shift and go to state 150


state 92

    (54) exp_2 -> addop . exp
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    addop                          shift and go to state 66
    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    exp                            shift and go to state 151
    factor                         shift and go to state 64

state 93

    (55) exp_2 -> empty .

    GREATER         reduce using rule 55 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 55 (exp_2 -> empty .)
    LESS            reduce using rule 55 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 55 (exp_2 -> empty .)
    DEQUAL          reduce using rule 55 (exp_2 -> empty .)
    DISTINT         reduce using rule 55 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 55 (exp_2 -> empty .)
    RPAREN          reduce using rule 55 (exp_2 -> empty .)
    COMMA           reduce using rule 55 (exp_2 -> empty .)
    RBRACKET        reduce using rule 55 (exp_2 -> empty .)


state 94

    (53) exp -> termino exp_2 .

    GREATER         reduce using rule 53 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 53 (exp -> termino exp_2 .)
    LESS            reduce using rule 53 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 53 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 53 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 53 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 53 (exp -> termino exp_2 .)
    COMMA           reduce using rule 53 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 53 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 53 (exp -> termino exp_2 .)


state 95

    (49) relop -> LESS .

    LPAREN          reduce using rule 49 (relop -> LESS .)
    PLUS            reduce using rule 49 (relop -> LESS .)
    MINUS           reduce using rule 49 (relop -> LESS .)
    ID              reduce using rule 49 (relop -> LESS .)
    CTE_I           reduce using rule 49 (relop -> LESS .)
    CTE_F           reduce using rule 49 (relop -> LESS .)
    TRUE            reduce using rule 49 (relop -> LESS .)
    FALSE           reduce using rule 49 (relop -> LESS .)


state 96

    (46) expresion_2 -> empty .

    SEMICOLON       reduce using rule 46 (expresion_2 -> empty .)
    RPAREN          reduce using rule 46 (expresion_2 -> empty .)
    COMMA           reduce using rule 46 (expresion_2 -> empty .)


state 97

    (51) relop -> DEQUAL .

    LPAREN          reduce using rule 51 (relop -> DEQUAL .)
    PLUS            reduce using rule 51 (relop -> DEQUAL .)
    MINUS           reduce using rule 51 (relop -> DEQUAL .)
    ID              reduce using rule 51 (relop -> DEQUAL .)
    CTE_I           reduce using rule 51 (relop -> DEQUAL .)
    CTE_F           reduce using rule 51 (relop -> DEQUAL .)
    TRUE            reduce using rule 51 (relop -> DEQUAL .)
    FALSE           reduce using rule 51 (relop -> DEQUAL .)


state 98

    (50) relop -> LESSEQUAL .

    LPAREN          reduce using rule 50 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 50 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 50 (relop -> LESSEQUAL .)
    ID              reduce using rule 50 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 50 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 50 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 50 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 50 (relop -> LESSEQUAL .)


state 99

    (52) relop -> DISTINT .

    LPAREN          reduce using rule 52 (relop -> DISTINT .)
    PLUS            reduce using rule 52 (relop -> DISTINT .)
    MINUS           reduce using rule 52 (relop -> DISTINT .)
    ID              reduce using rule 52 (relop -> DISTINT .)
    CTE_I           reduce using rule 52 (relop -> DISTINT .)
    CTE_F           reduce using rule 52 (relop -> DISTINT .)
    TRUE            reduce using rule 52 (relop -> DISTINT .)
    FALSE           reduce using rule 52 (relop -> DISTINT .)


state 100

    (47) relop -> GREATER .

    LPAREN          reduce using rule 47 (relop -> GREATER .)
    PLUS            reduce using rule 47 (relop -> GREATER .)
    MINUS           reduce using rule 47 (relop -> GREATER .)
    ID              reduce using rule 47 (relop -> GREATER .)
    CTE_I           reduce using rule 47 (relop -> GREATER .)
    CTE_F           reduce using rule 47 (relop -> GREATER .)
    TRUE            reduce using rule 47 (relop -> GREATER .)
    FALSE           reduce using rule 47 (relop -> GREATER .)


state 101

    (48) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 48 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 48 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 48 (relop -> GREATEREQUAL .)
    ID              reduce using rule 48 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 48 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 48 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 48 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 48 (relop -> GREATEREQUAL .)


state 102

    (44) expresion -> exp expresion_2 .

    SEMICOLON       reduce using rule 44 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 44 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 44 (expresion -> exp expresion_2 .)


state 103

    (45) expresion_2 -> relop . exp
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 152
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    factor                         shift and go to state 64

state 104

    (69) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 153


state 105

    (65) var_cte_2 -> LBRACKET . exp var_cte_3
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 154
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    factor                         shift and go to state 64

state 106

    (59) var_cte -> ID var_cte_2 .

    TIMES           reduce using rule 59 (var_cte -> ID var_cte_2 .)
    DIVIDE          reduce using rule 59 (var_cte -> ID var_cte_2 .)
    PERCENT         reduce using rule 59 (var_cte -> ID var_cte_2 .)
    PLUS            reduce using rule 59 (var_cte -> ID var_cte_2 .)
    MINUS           reduce using rule 59 (var_cte -> ID var_cte_2 .)
    GREATER         reduce using rule 59 (var_cte -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 59 (var_cte -> ID var_cte_2 .)
    LESS            reduce using rule 59 (var_cte -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 59 (var_cte -> ID var_cte_2 .)
    DEQUAL          reduce using rule 59 (var_cte -> ID var_cte_2 .)
    DISTINT         reduce using rule 59 (var_cte -> ID var_cte_2 .)
    RPAREN          reduce using rule 59 (var_cte -> ID var_cte_2 .)
    RBRACKET        reduce using rule 59 (var_cte -> ID var_cte_2 .)
    COMMA           reduce using rule 59 (var_cte -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 59 (var_cte -> ID var_cte_2 .)


state 107

    (66) var_cte_2 -> empty .

    TIMES           reduce using rule 66 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 66 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 66 (var_cte_2 -> empty .)
    PLUS            reduce using rule 66 (var_cte_2 -> empty .)
    MINUS           reduce using rule 66 (var_cte_2 -> empty .)
    GREATER         reduce using rule 66 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 66 (var_cte_2 -> empty .)
    LESS            reduce using rule 66 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 66 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 66 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 66 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 66 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 66 (var_cte_2 -> empty .)
    COMMA           reduce using rule 66 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 66 (var_cte_2 -> empty .)


state 108

    (28) vars2 -> EQUAL expresion SEMICOLON .

    DEF             reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    ID              reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    IF              reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    DRAW            reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    FOR             reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    INT             reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    BOOLEAN         reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    ARRAY           reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    END             reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)
    ELSE            reduce using rule 28 (vars2 -> EQUAL expresion SEMICOLON .)


state 109

    (108) timesop -> DIVIDE .

    LPAREN          reduce using rule 108 (timesop -> DIVIDE .)
    PLUS            reduce using rule 108 (timesop -> DIVIDE .)
    MINUS           reduce using rule 108 (timesop -> DIVIDE .)
    ID              reduce using rule 108 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 108 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 108 (timesop -> DIVIDE .)
    TRUE            reduce using rule 108 (timesop -> DIVIDE .)
    FALSE           reduce using rule 108 (timesop -> DIVIDE .)


state 110

    (107) timesop -> TIMES .

    LPAREN          reduce using rule 107 (timesop -> TIMES .)
    PLUS            reduce using rule 107 (timesop -> TIMES .)
    MINUS           reduce using rule 107 (timesop -> TIMES .)
    ID              reduce using rule 107 (timesop -> TIMES .)
    CTE_I           reduce using rule 107 (timesop -> TIMES .)
    CTE_F           reduce using rule 107 (timesop -> TIMES .)
    TRUE            reduce using rule 107 (timesop -> TIMES .)
    FALSE           reduce using rule 107 (timesop -> TIMES .)


state 111

    (57) termino_2 -> timesop . termino
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 155
    addop                          shift and go to state 66
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    factor                         shift and go to state 64

state 112

    (109) timesop -> PERCENT .

    LPAREN          reduce using rule 109 (timesop -> PERCENT .)
    PLUS            reduce using rule 109 (timesop -> PERCENT .)
    MINUS           reduce using rule 109 (timesop -> PERCENT .)
    ID              reduce using rule 109 (timesop -> PERCENT .)
    CTE_I           reduce using rule 109 (timesop -> PERCENT .)
    CTE_F           reduce using rule 109 (timesop -> PERCENT .)
    TRUE            reduce using rule 109 (timesop -> PERCENT .)
    FALSE           reduce using rule 109 (timesop -> PERCENT .)


state 113

    (58) termino_2 -> empty .

    PLUS            reduce using rule 58 (termino_2 -> empty .)
    MINUS           reduce using rule 58 (termino_2 -> empty .)
    GREATER         reduce using rule 58 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 58 (termino_2 -> empty .)
    LESS            reduce using rule 58 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 58 (termino_2 -> empty .)
    DEQUAL          reduce using rule 58 (termino_2 -> empty .)
    DISTINT         reduce using rule 58 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 58 (termino_2 -> empty .)
    RPAREN          reduce using rule 58 (termino_2 -> empty .)
    COMMA           reduce using rule 58 (termino_2 -> empty .)
    RBRACKET        reduce using rule 58 (termino_2 -> empty .)


state 114

    (56) termino -> factor termino_2 .

    PLUS            reduce using rule 56 (termino -> factor termino_2 .)
    MINUS           reduce using rule 56 (termino -> factor termino_2 .)
    GREATER         reduce using rule 56 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 56 (termino -> factor termino_2 .)
    LESS            reduce using rule 56 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 56 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 56 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 56 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 56 (termino -> factor termino_2 .)
    COMMA           reduce using rule 56 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 56 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 56 (termino -> factor termino_2 .)


state 115

    (70) factor -> addop var_cte .

    TIMES           reduce using rule 70 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 70 (factor -> addop var_cte .)
    PERCENT         reduce using rule 70 (factor -> addop var_cte .)
    PLUS            reduce using rule 70 (factor -> addop var_cte .)
    MINUS           reduce using rule 70 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 70 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 70 (factor -> addop var_cte .)
    RPAREN          reduce using rule 70 (factor -> addop var_cte .)
    COMMA           reduce using rule 70 (factor -> addop var_cte .)
    GREATER         reduce using rule 70 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 70 (factor -> addop var_cte .)
    LESS            reduce using rule 70 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 70 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 70 (factor -> addop var_cte .)
    DISTINT         reduce using rule 70 (factor -> addop var_cte .)


state 116

    (41) def_array_cte -> var_cte . def_array_cte_2
    (42) def_array_cte_2 -> . COMMA def_array_cte
    (43) def_array_cte_2 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 157
    RBRACKET        reduce using rule 110 (empty -> .)

    empty                          shift and go to state 156
    def_array_cte_2                shift and go to state 158

state 117

    (38) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 38 (def_array -> LBRACKET def_array_2 .)


state 118

    (39) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 159


state 119

    (40) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 40 (def_array_2 -> RBRACKET .)


state 120

    (30) vars3 -> EQUAL def_array SEMICOLON .

    DEF             reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 30 (vars3 -> EQUAL def_array SEMICOLON .)


state 121

    (25) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (26) array_2 -> . COMMA CTE_I
    (27) array_2 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 161
    GREATER         reduce using rule 110 (empty -> .)

    empty                          shift and go to state 160
    array_2                        shift and go to state 162

state 122

    (22) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 163


state 123

    (72) condicion -> IF LPAREN expresion . RPAREN bloque condicion_2

    RPAREN          shift and go to state 164


state 124

    (99) funcion_2 -> RETURN expresion . SEMICOLON END

    SEMICOLON       shift and go to state 165


state 125

    (18) asignacion_2 -> EQUAL expresion .

    SEMICOLON       reduce using rule 18 (asignacion_2 -> EQUAL expresion .)


state 126

    (33) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 166


state 127

    (34) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 34 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 34 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 34 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 34 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 34 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 34 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 34 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 34 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 34 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 34 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 34 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 34 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 34 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 34 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 34 (llamada_2 -> RPAREN .)


state 128

    (35) llamada_exp -> expresion . llamada_exp2
    (36) llamada_exp2 -> . COMMA llamada_exp
    (37) llamada_exp2 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 168
    RPAREN          reduce using rule 110 (empty -> .)

    llamada_exp2                   shift and go to state 167
    empty                          shift and go to state 169

state 129

    (32) llamada -> ID LPAREN llamada_2 .

    TIMES           reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    DIVIDE          reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    PERCENT         reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    PLUS            reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    MINUS           reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    GREATER         reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    LESS            reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    DEQUAL          reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    DISTINT         reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    RPAREN          reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    SEMICOLON       reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    COMMA           reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)
    RBRACKET        reduce using rule 32 (llamada -> ID LPAREN llamada_2 .)


state 130

    (84) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 84 (accion_nombre -> SETPOSITION .)


state 131

    (95) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 95 (accion_nombre -> SETCOLOR .)


state 132

    (85) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 85 (accion_nombre -> CIRCLE .)


state 133

    (93) accion_nombre -> SPEED .

    LPAREN          reduce using rule 93 (accion_nombre -> SPEED .)


state 134

    (92) accion_nombre -> BACK .

    LPAREN          reduce using rule 92 (accion_nombre -> BACK .)


state 135

    (77) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (78) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 171

    accion_params                  shift and go to state 170

state 136

    (88) accion_nombre -> HIDE .

    LPAREN          reduce using rule 88 (accion_nombre -> HIDE .)


state 137

    (94) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 94 (accion_nombre -> FORWARD .)


state 138

    (91) accion_nombre -> SHOW .

    LPAREN          reduce using rule 91 (accion_nombre -> SHOW .)


state 139

    (87) accion_nombre -> LEFT .

    LPAREN          reduce using rule 87 (accion_nombre -> LEFT .)


state 140

    (90) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 90 (accion_nombre -> CLEAR .)


state 141

    (86) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 86 (accion_nombre -> RIGHT .)


state 142

    (89) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 89 (accion_nombre -> SQUARE .)


state 143

    (17) asignacion -> ID asignacion_2 SEMICOLON .

    ID              reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    IF              reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    FOR             reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    INT             reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    END             reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 17 (asignacion -> ID asignacion_2 SEMICOLON .)


state 144

    (19) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL expresion
    (20) asignacion_3 -> . RBRACKET
    (21) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 174
    COMMA           shift and go to state 172

    asignacion_3                   shift and go to state 173

state 145

    (96) for -> FOR LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 175


state 146

    (97) while -> WHILE LPAREN expresion . RPAREN bloque END

    RPAREN          shift and go to state 176


state 147

    (104) var_local_3 -> empty .

    RPAREN          reduce using rule 104 (var_local_3 -> empty .)


state 148

    (102) var_local_2 -> data_type ID var_local_3 .

    RPAREN          reduce using rule 102 (var_local_2 -> data_type ID var_local_3 .)


state 149

    (103) var_local_3 -> COMMA . var_local_2
    (102) var_local_2 -> . data_type ID var_local_3
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11

    var_local_2                    shift and go to state 177
    data_type                      shift and go to state 55

state 150

    (10) main -> DEF VOID MAIN LPAREN RPAREN bloque END .

    $end            reduce using rule 10 (main -> DEF VOID MAIN LPAREN RPAREN bloque END .)


state 151

    (54) exp_2 -> addop exp .

    GREATER         reduce using rule 54 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 54 (exp_2 -> addop exp .)
    LESS            reduce using rule 54 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 54 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 54 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 54 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 54 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 54 (exp_2 -> addop exp .)
    COMMA           reduce using rule 54 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 54 (exp_2 -> addop exp .)


state 152

    (45) expresion_2 -> relop exp .

    SEMICOLON       reduce using rule 45 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 45 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 45 (expresion_2 -> relop exp .)


state 153

    (69) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    PERCENT         reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 69 (factor -> LPAREN expresion RPAREN .)


state 154

    (65) var_cte_2 -> LBRACKET exp . var_cte_3
    (67) var_cte_3 -> . RBRACKET
    (68) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 180
    COMMA           shift and go to state 179

    var_cte_3                      shift and go to state 178

state 155

    (57) termino_2 -> timesop termino .

    PLUS            reduce using rule 57 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 57 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 57 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 57 (termino_2 -> timesop termino .)
    LESS            reduce using rule 57 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 57 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 57 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 57 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 57 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 57 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 57 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 57 (termino_2 -> timesop termino .)


state 156

    (43) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 43 (def_array_cte_2 -> empty .)


state 157

    (42) def_array_cte_2 -> COMMA . def_array_cte
    (41) def_array_cte -> . var_cte def_array_cte_2
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    llamada                        shift and go to state 67
    var_cte                        shift and go to state 116
    def_array_cte                  shift and go to state 181

state 158

    (41) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 41 (def_array_cte -> var_cte def_array_cte_2 .)


state 159

    (39) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 39 (def_array_2 -> def_array_cte RBRACKET .)


state 160

    (27) array_2 -> empty .

    GREATER         reduce using rule 27 (array_2 -> empty .)


state 161

    (26) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 182


state 162

    (25) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 183


state 163

    (22) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 184


state 164

    (72) condicion -> IF LPAREN expresion RPAREN . bloque condicion_2
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 110 (empty -> .)
    ELSE            reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    llamada                        shift and go to state 47
    bloque                         shift and go to state 185
    while                          shift and go to state 41
    ciclo                          shift and go to state 43
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 165

    (99) funcion_2 -> RETURN expresion SEMICOLON . END

    END             shift and go to state 186


state 166

    (33) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 33 (llamada_2 -> llamada_exp RPAREN .)


state 167

    (35) llamada_exp -> expresion llamada_exp2 .

    RPAREN          reduce using rule 35 (llamada_exp -> expresion llamada_exp2 .)


state 168

    (36) llamada_exp2 -> COMMA . llamada_exp
    (35) llamada_exp -> . expresion llamada_exp2
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    llamada_exp                    shift and go to state 187
    exp                            shift and go to state 59
    addop                          shift and go to state 66
    expresion                      shift and go to state 128
    factor                         shift and go to state 64

state 169

    (37) llamada_exp2 -> empty .

    RPAREN          reduce using rule 37 (llamada_exp2 -> empty .)


state 170

    (77) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 188


state 171

    (78) accion_params -> LPAREN . accion_params_2
    (79) accion_params_2 -> . accion_params_cte RPAREN
    (80) accion_params_2 -> . RPAREN
    (81) accion_params_cte -> . var_cte accion_params_cte_2
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 192
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    llamada                        shift and go to state 67
    accion_params_cte              shift and go to state 189
    var_cte                        shift and go to state 190
    accion_params_2                shift and go to state 191

state 172

    (21) asignacion_3 -> COMMA . exp RBRACKET
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    addop                          shift and go to state 66
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    exp                            shift and go to state 193
    factor                         shift and go to state 64

state 173

    (19) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL expresion

    EQUAL           shift and go to state 194


state 174

    (20) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 20 (asignacion_3 -> RBRACKET .)


state 175

    (96) for -> FOR LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 195


state 176

    (97) while -> WHILE LPAREN expresion RPAREN . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    llamada                        shift and go to state 47
    bloque                         shift and go to state 196
    while                          shift and go to state 41
    ciclo                          shift and go to state 43
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 177

    (103) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 103 (var_local_3 -> COMMA var_local_2 .)


state 178

    (65) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 65 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 179

    (68) var_cte_3 -> COMMA . exp RBRACKET
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    addop                          shift and go to state 66
    llamada                        shift and go to state 67
    var_cte                        shift and go to state 68
    exp                            shift and go to state 197
    factor                         shift and go to state 64

state 180

    (67) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 67 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 67 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 67 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 67 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 67 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 67 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 67 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 67 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 67 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 67 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 67 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 67 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 67 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 67 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 67 (var_cte_3 -> RBRACKET .)


state 181

    (42) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 42 (def_array_cte_2 -> COMMA def_array_cte .)


state 182

    (26) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 26 (array_2 -> COMMA CTE_I .)


state 183

    (25) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 25 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 184

    (22) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    DEF             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 22 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 185

    (72) condicion -> IF LPAREN expresion RPAREN bloque . condicion_2
    (73) condicion_2 -> . END
    (74) condicion_2 -> . ELSE bloque END

    END             shift and go to state 198
    ELSE            shift and go to state 199

    condicion_2                    shift and go to state 200

state 186

    (99) funcion_2 -> RETURN expresion SEMICOLON END .

    DEF             reduce using rule 99 (funcion_2 -> RETURN expresion SEMICOLON END .)


state 187

    (36) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 36 (llamada_exp2 -> COMMA llamada_exp .)


state 188

    (77) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 77 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 189

    (79) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 201


state 190

    (81) accion_params_cte -> var_cte . accion_params_cte_2
    (82) accion_params_cte_2 -> . COMMA accion_params_cte
    (83) accion_params_cte_2 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 203
    RPAREN          reduce using rule 110 (empty -> .)

    accion_params_cte_2            shift and go to state 202
    empty                          shift and go to state 204

state 191

    (78) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 78 (accion_params -> LPAREN accion_params_2 .)


state 192

    (80) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 80 (accion_params_2 -> RPAREN .)


state 193

    (21) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 205


state 194

    (19) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . expresion
    (44) expresion -> . exp expresion_2
    (53) exp -> . termino exp_2
    (56) termino -> . factor termino_2
    (69) factor -> . LPAREN expresion RPAREN
    (70) factor -> . addop var_cte
    (71) factor -> . var_cte
    (105) addop -> . PLUS
    (106) addop -> . MINUS
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 70
    MINUS           shift and go to state 69
    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    termino                        shift and go to state 57
    llamada                        shift and go to state 67
    exp                            shift and go to state 59
    var_cte                        shift and go to state 68
    addop                          shift and go to state 66
    expresion                      shift and go to state 206
    factor                         shift and go to state 64

state 195

    (96) for -> FOR LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 207


state 196

    (97) while -> WHILE LPAREN expresion RPAREN bloque . END

    END             shift and go to state 208


state 197

    (68) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 209


state 198

    (73) condicion_2 -> END .

    ID              reduce using rule 73 (condicion_2 -> END .)
    IF              reduce using rule 73 (condicion_2 -> END .)
    DRAW            reduce using rule 73 (condicion_2 -> END .)
    FOR             reduce using rule 73 (condicion_2 -> END .)
    WHILE           reduce using rule 73 (condicion_2 -> END .)
    INT             reduce using rule 73 (condicion_2 -> END .)
    FLOAT           reduce using rule 73 (condicion_2 -> END .)
    BOOLEAN         reduce using rule 73 (condicion_2 -> END .)
    ARRAY           reduce using rule 73 (condicion_2 -> END .)
    RETURN          reduce using rule 73 (condicion_2 -> END .)
    END             reduce using rule 73 (condicion_2 -> END .)
    ELSE            reduce using rule 73 (condicion_2 -> END .)


state 199

    (74) condicion_2 -> ELSE . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    llamada                        shift and go to state 47
    bloque                         shift and go to state 210
    while                          shift and go to state 41
    ciclo                          shift and go to state 43
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 200

    (72) condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .

    ID              reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    IF              reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FOR             reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    INT             reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    END             reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 72 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)


state 201

    (79) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 79 (accion_params_2 -> accion_params_cte RPAREN .)


state 202

    (81) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 81 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 203

    (82) accion_params_cte_2 -> COMMA . accion_params_cte
    (81) accion_params_cte -> . var_cte accion_params_cte_2
    (59) var_cte -> . ID var_cte_2
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F
    (62) var_cte -> . TRUE
    (63) var_cte -> . FALSE
    (64) var_cte -> . llamada
    (32) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 62
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 61
    TRUE            shift and go to state 71
    FALSE           shift and go to state 65

    llamada                        shift and go to state 67
    accion_params_cte              shift and go to state 211
    var_cte                        shift and go to state 190

state 204

    (83) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 83 (accion_params_cte_2 -> empty .)


state 205

    (21) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 21 (asignacion_3 -> COMMA exp RBRACKET .)


state 206

    (19) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .

    SEMICOLON       reduce using rule 19 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .)


state 207

    (96) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque END

    CTE_I           shift and go to state 212


state 208

    (97) while -> WHILE LPAREN expresion RPAREN bloque END .

    ID              reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    IF              reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    DRAW            reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FOR             reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    WHILE           reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    INT             reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FLOAT           reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    BOOLEAN         reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ARRAY           reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    END             reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ELSE            reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    RETURN          reduce using rule 97 (while -> WHILE LPAREN expresion RPAREN bloque END .)


state 209

    (68) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 68 (var_cte_3 -> COMMA exp RBRACKET .)


state 210

    (74) condicion_2 -> ELSE bloque . END

    END             shift and go to state 213


state 211

    (82) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 82 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 212

    (96) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque END

    RPAREN          shift and go to state 214


state 213

    (74) condicion_2 -> ELSE bloque END .

    ID              reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    IF              reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    DRAW            reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    FOR             reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    WHILE           reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    INT             reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    FLOAT           reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    BOOLEAN         reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    ARRAY           reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    RETURN          reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    END             reduce using rule 74 (condicion_2 -> ELSE bloque END .)
    ELSE            reduce using rule 74 (condicion_2 -> ELSE bloque END .)


state 214

    (96) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque END
    (5) bloque -> . estatuto bloque
    (6) bloque -> . empty
    (11) estatuto -> . asignacion
    (12) estatuto -> . condicion
    (13) estatuto -> . ciclo
    (14) estatuto -> . accion
    (15) estatuto -> . vars
    (16) estatuto -> . llamada SEMICOLON
    (110) empty -> .
    (17) asignacion -> . ID asignacion_2 SEMICOLON
    (72) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (75) ciclo -> . for
    (76) ciclo -> . while
    (77) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (22) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (23) vars -> . data_type ID vars2
    (24) vars -> . array ID vars3
    (32) llamada -> . ID LPAREN llamada_2
    (96) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (97) while -> . WHILE LPAREN expresion RPAREN bloque END
    (7) data_type -> . INT
    (8) data_type -> . FLOAT
    (9) data_type -> . BOOLEAN
    (25) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 110 (empty -> .)
    ID              shift and go to state 50
    IF              shift and go to state 42
    DRAW            shift and go to state 19
    FOR             shift and go to state 51
    WHILE           shift and go to state 52
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOLEAN         shift and go to state 11
    ARRAY           shift and go to state 18

    data_type                      shift and go to state 16
    for                            shift and go to state 39
    estatuto                       shift and go to state 48
    llamada                        shift and go to state 47
    bloque                         shift and go to state 215
    while                          shift and go to state 41
    ciclo                          shift and go to state 43
    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 53
    accion                         shift and go to state 40
    array                          shift and go to state 17

state 215

    (96) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . END

    END             shift and go to state 216


state 216

    (96) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .

    ID              reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    IF              reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    DRAW            reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    FOR             reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    WHILE           reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    INT             reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    FLOAT           reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    BOOLEAN         reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    ARRAY           reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    END             reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    ELSE            reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    RETURN          reduce using rule 96 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)

