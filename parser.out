Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    OR
    AND

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones
Rule 2     programa -> funciones
Rule 3     funciones -> funcion main
Rule 4     funciones -> main
Rule 5     globales -> GLOBAL vars
Rule 6     bloque -> estatuto bloque
Rule 7     bloque -> empty
Rule 8     data_type -> INT
Rule 9     data_type -> FLOAT
Rule 10    data_type -> BOOLEAN
Rule 11    main -> DEF VOID MAIN LPAREN RPAREN bloque END
Rule 12    estatuto -> asignacion
Rule 13    estatuto -> condicion
Rule 14    estatuto -> ciclo
Rule 15    estatuto -> accion
Rule 16    estatuto -> vars
Rule 17    estatuto -> llamada SEMICOLON
Rule 18    asignacion -> ID asignacion_2 SEMICOLON
Rule 19    asignacion_2 -> EQUAL expresion
Rule 20    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion
Rule 21    asignacion_3 -> RBRACKET
Rule 22    asignacion_3 -> COMMA exp RBRACKET
Rule 23    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 24    vars -> data_type ID vars2
Rule 25    vars -> array ID vars3
Rule 26    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 27    array_2 -> COMMA CTE_I
Rule 28    array_2 -> empty
Rule 29    vars2 -> EQUAL expresion SEMICOLON
Rule 30    vars2 -> SEMICOLON
Rule 31    vars3 -> EQUAL def_array SEMICOLON
Rule 32    vars3 -> SEMICOLON
Rule 33    llamada -> ID LPAREN llamada_2
Rule 34    llamada_2 -> llamada_exp RPAREN
Rule 35    llamada_2 -> RPAREN
Rule 36    llamada_exp -> expresion llamada_exp2
Rule 37    llamada_exp2 -> COMMA llamada_exp
Rule 38    llamada_exp2 -> empty
Rule 39    def_array -> LBRACKET def_array_2
Rule 40    def_array_2 -> def_array_cte RBRACKET
Rule 41    def_array_2 -> RBRACKET
Rule 42    def_array_cte -> var_cte def_array_cte_2
Rule 43    def_array_cte_2 -> COMMA def_array_cte
Rule 44    def_array_cte_2 -> empty
Rule 45    expresion -> exp expresion_2
Rule 46    expresion_2 -> relop exp
Rule 47    expresion_2 -> empty
Rule 48    relop -> GREATER
Rule 49    relop -> GREATEREQUAL
Rule 50    relop -> LESS
Rule 51    relop -> LESSEQUAL
Rule 52    relop -> DEQUAL
Rule 53    relop -> DISTINT
Rule 54    exp -> termino exp_2
Rule 55    exp_2 -> addop exp
Rule 56    exp_2 -> empty
Rule 57    termino -> factor termino_2
Rule 58    termino_2 -> timesop termino
Rule 59    termino_2 -> empty
Rule 60    var_cte -> ID var_cte_2
Rule 61    var_cte -> CTE_I
Rule 62    var_cte -> CTE_F
Rule 63    var_cte -> TRUE
Rule 64    var_cte -> FALSE
Rule 65    var_cte -> llamada
Rule 66    var_cte_2 -> LBRACKET exp var_cte_3
Rule 67    var_cte_2 -> empty
Rule 68    var_cte_3 -> RBRACKET
Rule 69    var_cte_3 -> COMMA exp RBRACKET
Rule 70    factor -> LPAREN expresion RPAREN
Rule 71    factor -> addop var_cte
Rule 72    factor -> var_cte
Rule 73    condicion -> IF LPAREN expresion RPAREN bloque condicion_2
Rule 74    condicion_2 -> END
Rule 75    condicion_2 -> ELSE bloque END
Rule 76    ciclo -> for
Rule 77    ciclo -> while
Rule 78    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 79    accion_params -> LPAREN accion_params_2
Rule 80    accion_params_2 -> accion_params_cte RPAREN
Rule 81    accion_params_2 -> RPAREN
Rule 82    accion_params_cte -> var_cte accion_params_cte_2
Rule 83    accion_params_cte_2 -> COMMA accion_params_cte
Rule 84    accion_params_cte_2 -> empty
Rule 85    accion_nombre -> SETPOSITION
Rule 86    accion_nombre -> CIRCLE
Rule 87    accion_nombre -> RIGHT
Rule 88    accion_nombre -> LEFT
Rule 89    accion_nombre -> HIDE
Rule 90    accion_nombre -> SQUARE
Rule 91    accion_nombre -> CLEAR
Rule 92    accion_nombre -> SHOW
Rule 93    accion_nombre -> BACK
Rule 94    accion_nombre -> SPEED
Rule 95    accion_nombre -> FORWARD
Rule 96    accion_nombre -> SETCOLOR
Rule 97    for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
Rule 98    while -> WHILE LPAREN expresion RPAREN bloque END
Rule 99    funcion -> DEF data_type ID var_local bloque funcion_2
Rule 100   funcion_2 -> RETURN expresion SEMICOLON END
Rule 101   funcion_2 -> END
Rule 102   var_local -> LPAREN var_local_2 RPAREN
Rule 103   var_local_2 -> data_type ID var_local_3
Rule 104   var_local_3 -> COMMA var_local_2
Rule 105   var_local_3 -> empty
Rule 106   addop -> PLUS
Rule 107   addop -> MINUS
Rule 108   timesop -> TIMES
Rule 109   timesop -> DIVIDE
Rule 110   timesop -> PERCENT
Rule 111   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 26
BACK                 : 93
BOOLEAN              : 10
CIRCLE               : 86
CLEAR                : 91
COMMA                : 22 26 27 37 43 69 83 97 97 104
CTE_F                : 62
CTE_I                : 26 27 61 97 97 97
DEF                  : 11 99
DEQUAL               : 52
DISTINT              : 53
DIVIDE               : 109
DRAW                 : 23
ELSE                 : 75
END                  : 11 74 75 97 98 100 101
EQUAL                : 19 20 23 29 31
FALSE                : 64
FLOAT                : 9
FOR                  : 97
FORWARD              : 95
GLOBAL               : 5
GREATER              : 26 48
GREATEREQUAL         : 49
HIDE                 : 89
ID                   : 18 23 24 25 33 60 78 99 103
IF                   : 73
INT                  : 8
LBRACKET             : 20 39 66
LEFT                 : 88
LESS                 : 26 50
LESSEQUAL            : 51
LPAREN               : 11 23 33 70 73 79 97 98 102
MAIN                 : 11
MINUS                : 107
NEWDRAW              : 23
OR                   : 
PERCENT              : 110
PLUS                 : 106
POINT                : 78
RBRACKET             : 21 22 40 41 68 69
RETURN               : 100
RIGHT                : 87
RPAREN               : 11 23 34 35 70 73 80 81 97 98 102
SEMICOLON            : 17 18 23 29 30 31 32 78 100
SETCOLOR             : 96
SETPOSITION          : 85
SHOW                 : 92
SPEED                : 94
SQUARE               : 90
TIMES                : 108
TRUE                 : 63
VOID                 : 11
WHILE                : 98
error                : 

Nonterminals, with rules where they appear

accion               : 15
accion_nombre        : 78
accion_params        : 78
accion_params_2      : 79
accion_params_cte    : 80 83
accion_params_cte_2  : 82
addop                : 55 71
array                : 25
array_2              : 26
asignacion           : 12
asignacion_2         : 18
asignacion_3         : 20
bloque               : 6 11 73 75 97 98 99
ciclo                : 14
condicion            : 13
condicion_2          : 73
data_type            : 24 26 99 103
def_array            : 31
def_array_2          : 39
def_array_cte        : 40 43
def_array_cte_2      : 42
empty                : 7 28 38 44 47 56 59 67 84 105
estatuto             : 6
exp                  : 20 22 45 46 55 66 69
exp_2                : 54
expresion            : 19 20 29 36 70 73 98 100
expresion_2          : 45
factor               : 57
for                  : 76
funcion              : 3
funcion_2            : 99
funciones            : 1 2
globales             : 1
llamada              : 17 65
llamada_2            : 33
llamada_exp          : 34 37
llamada_exp2         : 36
main                 : 3 4
programa             : 0
relop                : 46
termino              : 54 58
termino_2            : 57
timesop              : 58
var_cte              : 42 71 72 82
var_cte_2            : 60
var_cte_3            : 66
var_local            : 99
var_local_2          : 102 104
var_local_3          : 103
vars                 : 5 16
vars2                : 24
vars3                : 25
while                : 77

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones
    (2) programa -> . funciones
    (5) globales -> . GLOBAL vars
    (3) funciones -> . funcion main
    (4) funciones -> . main
    (99) funcion -> . DEF data_type ID var_local bloque funcion_2
    (11) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    GLOBAL          shift and go to state 7
    DEF             shift and go to state 1

    funciones                      shift and go to state 2
    globales                       shift and go to state 3
    funcion                        shift and go to state 5
    programa                       shift and go to state 4
    main                           shift and go to state 6

state 1

    (99) funcion -> DEF . data_type ID var_local bloque funcion_2
    (11) main -> DEF . VOID MAIN LPAREN RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN

    VOID            shift and go to state 11
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8

    data_type                      shift and go to state 12

state 2

    (2) programa -> funciones .

    $end            reduce using rule 2 (programa -> funciones .)


state 3

    (1) programa -> globales . funciones
    (3) funciones -> . funcion main
    (4) funciones -> . main
    (99) funcion -> . DEF data_type ID var_local bloque funcion_2
    (11) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    DEF             shift and go to state 1

    funciones                      shift and go to state 13
    funcion                        shift and go to state 5
    main                           shift and go to state 6

state 4

    (0) S' -> programa .



state 5

    (3) funciones -> funcion . main
    (11) main -> . DEF VOID MAIN LPAREN RPAREN bloque END

    DEF             shift and go to state 14

    main                           shift and go to state 15

state 6

    (4) funciones -> main .

    $end            reduce using rule 4 (funciones -> main .)


state 7

    (5) globales -> GLOBAL . vars
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 19
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    array                          shift and go to state 18
    vars                           shift and go to state 17
    data_type                      shift and go to state 20

state 8

    (10) data_type -> BOOLEAN .

    ID              reduce using rule 10 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 10 (data_type -> BOOLEAN .)


state 9

    (9) data_type -> FLOAT .

    ID              reduce using rule 9 (data_type -> FLOAT .)
    COMMA           reduce using rule 9 (data_type -> FLOAT .)


state 10

    (8) data_type -> INT .

    ID              reduce using rule 8 (data_type -> INT .)
    COMMA           reduce using rule 8 (data_type -> INT .)


state 11

    (11) main -> DEF VOID . MAIN LPAREN RPAREN bloque END

    MAIN            shift and go to state 21


state 12

    (99) funcion -> DEF data_type . ID var_local bloque funcion_2

    ID              shift and go to state 22


state 13

    (1) programa -> globales funciones .

    $end            reduce using rule 1 (programa -> globales funciones .)


state 14

    (11) main -> DEF . VOID MAIN LPAREN RPAREN bloque END

    VOID            shift and go to state 11


state 15

    (3) funciones -> funcion main .

    $end            reduce using rule 3 (funciones -> funcion main .)


state 16

    (26) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 23


state 17

    (5) globales -> GLOBAL vars .

    DEF             reduce using rule 5 (globales -> GLOBAL vars .)


state 18

    (25) vars -> array . ID vars3

    ID              shift and go to state 24


state 19

    (23) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 25


state 20

    (24) vars -> data_type . ID vars2

    ID              shift and go to state 26


state 21

    (11) main -> DEF VOID MAIN . LPAREN RPAREN bloque END

    LPAREN          shift and go to state 27


state 22

    (99) funcion -> DEF data_type ID . var_local bloque funcion_2
    (102) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 28

    var_local                      shift and go to state 29

state 23

    (26) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN

    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8

    data_type                      shift and go to state 30

state 24

    (25) vars -> array ID . vars3
    (31) vars3 -> . EQUAL def_array SEMICOLON
    (32) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 31
    SEMICOLON       shift and go to state 32

    vars3                          shift and go to state 33

state 25

    (23) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 34


state 26

    (24) vars -> data_type ID . vars2
    (29) vars2 -> . EQUAL expresion SEMICOLON
    (30) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 35
    SEMICOLON       shift and go to state 36

    vars2                          shift and go to state 37

state 27

    (11) main -> DEF VOID MAIN LPAREN . RPAREN bloque END

    RPAREN          shift and go to state 38


state 28

    (102) var_local -> LPAREN . var_local_2 RPAREN
    (103) var_local_2 -> . data_type ID var_local_3
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN

    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8

    var_local_2                    shift and go to state 39
    data_type                      shift and go to state 40

state 29

    (99) funcion -> DEF data_type ID var_local . bloque funcion_2
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 111 (empty -> .)
    END             reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    asignacion                     shift and go to state 48
    bloque                         shift and go to state 49
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 30

    (26) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 56


state 31

    (31) vars3 -> EQUAL . def_array SEMICOLON
    (39) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 58

    def_array                      shift and go to state 57

state 32

    (32) vars3 -> SEMICOLON .

    DEF             reduce using rule 32 (vars3 -> SEMICOLON .)
    ID              reduce using rule 32 (vars3 -> SEMICOLON .)
    IF              reduce using rule 32 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 32 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 32 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 32 (vars3 -> SEMICOLON .)
    INT             reduce using rule 32 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 32 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 32 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 32 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 32 (vars3 -> SEMICOLON .)
    END             reduce using rule 32 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 32 (vars3 -> SEMICOLON .)


state 33

    (25) vars -> array ID vars3 .

    ID              reduce using rule 25 (vars -> array ID vars3 .)
    IF              reduce using rule 25 (vars -> array ID vars3 .)
    DRAW            reduce using rule 25 (vars -> array ID vars3 .)
    FOR             reduce using rule 25 (vars -> array ID vars3 .)
    WHILE           reduce using rule 25 (vars -> array ID vars3 .)
    INT             reduce using rule 25 (vars -> array ID vars3 .)
    FLOAT           reduce using rule 25 (vars -> array ID vars3 .)
    BOOLEAN         reduce using rule 25 (vars -> array ID vars3 .)
    ARRAY           reduce using rule 25 (vars -> array ID vars3 .)
    RETURN          reduce using rule 25 (vars -> array ID vars3 .)
    END             reduce using rule 25 (vars -> array ID vars3 .)
    ELSE            reduce using rule 25 (vars -> array ID vars3 .)
    DEF             reduce using rule 25 (vars -> array ID vars3 .)


state 34

    (23) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 59


state 35

    (29) vars2 -> EQUAL . expresion SEMICOLON
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 61
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 36

    (30) vars2 -> SEMICOLON .

    DEF             reduce using rule 30 (vars2 -> SEMICOLON .)
    ID              reduce using rule 30 (vars2 -> SEMICOLON .)
    IF              reduce using rule 30 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 30 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 30 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 30 (vars2 -> SEMICOLON .)
    INT             reduce using rule 30 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 30 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 30 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 30 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 30 (vars2 -> SEMICOLON .)
    END             reduce using rule 30 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 30 (vars2 -> SEMICOLON .)


state 37

    (24) vars -> data_type ID vars2 .

    ID              reduce using rule 24 (vars -> data_type ID vars2 .)
    IF              reduce using rule 24 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 24 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 24 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 24 (vars -> data_type ID vars2 .)
    INT             reduce using rule 24 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 24 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 24 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 24 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 24 (vars -> data_type ID vars2 .)
    END             reduce using rule 24 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 24 (vars -> data_type ID vars2 .)
    DEF             reduce using rule 24 (vars -> data_type ID vars2 .)


state 38

    (11) main -> DEF VOID MAIN LPAREN RPAREN . bloque END
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    bloque                         shift and go to state 75
    asignacion                     shift and go to state 48
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 39

    (102) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 76


state 40

    (103) var_local_2 -> data_type . ID var_local_3

    ID              shift and go to state 77


state 41

    (76) ciclo -> for .

    ID              reduce using rule 76 (ciclo -> for .)
    IF              reduce using rule 76 (ciclo -> for .)
    DRAW            reduce using rule 76 (ciclo -> for .)
    FOR             reduce using rule 76 (ciclo -> for .)
    WHILE           reduce using rule 76 (ciclo -> for .)
    INT             reduce using rule 76 (ciclo -> for .)
    FLOAT           reduce using rule 76 (ciclo -> for .)
    BOOLEAN         reduce using rule 76 (ciclo -> for .)
    ARRAY           reduce using rule 76 (ciclo -> for .)
    END             reduce using rule 76 (ciclo -> for .)
    RETURN          reduce using rule 76 (ciclo -> for .)
    ELSE            reduce using rule 76 (ciclo -> for .)


state 42

    (14) estatuto -> ciclo .

    ID              reduce using rule 14 (estatuto -> ciclo .)
    IF              reduce using rule 14 (estatuto -> ciclo .)
    DRAW            reduce using rule 14 (estatuto -> ciclo .)
    FOR             reduce using rule 14 (estatuto -> ciclo .)
    WHILE           reduce using rule 14 (estatuto -> ciclo .)
    INT             reduce using rule 14 (estatuto -> ciclo .)
    FLOAT           reduce using rule 14 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 14 (estatuto -> ciclo .)
    ARRAY           reduce using rule 14 (estatuto -> ciclo .)
    END             reduce using rule 14 (estatuto -> ciclo .)
    RETURN          reduce using rule 14 (estatuto -> ciclo .)
    ELSE            reduce using rule 14 (estatuto -> ciclo .)


state 43

    (77) ciclo -> while .

    ID              reduce using rule 77 (ciclo -> while .)
    IF              reduce using rule 77 (ciclo -> while .)
    DRAW            reduce using rule 77 (ciclo -> while .)
    FOR             reduce using rule 77 (ciclo -> while .)
    WHILE           reduce using rule 77 (ciclo -> while .)
    INT             reduce using rule 77 (ciclo -> while .)
    FLOAT           reduce using rule 77 (ciclo -> while .)
    BOOLEAN         reduce using rule 77 (ciclo -> while .)
    ARRAY           reduce using rule 77 (ciclo -> while .)
    END             reduce using rule 77 (ciclo -> while .)
    RETURN          reduce using rule 77 (ciclo -> while .)
    ELSE            reduce using rule 77 (ciclo -> while .)


state 44

    (6) bloque -> estatuto . bloque
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 111 (empty -> .)
    END             reduce using rule 111 (empty -> .)
    ELSE            reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    bloque                         shift and go to state 78
    asignacion                     shift and go to state 48
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 45

    (7) bloque -> empty .

    RETURN          reduce using rule 7 (bloque -> empty .)
    END             reduce using rule 7 (bloque -> empty .)
    ELSE            reduce using rule 7 (bloque -> empty .)


state 46

    (73) condicion -> IF . LPAREN expresion RPAREN bloque condicion_2

    LPAREN          shift and go to state 79


state 47

    (97) for -> FOR . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END

    LPAREN          shift and go to state 80


state 48

    (12) estatuto -> asignacion .

    ID              reduce using rule 12 (estatuto -> asignacion .)
    IF              reduce using rule 12 (estatuto -> asignacion .)
    DRAW            reduce using rule 12 (estatuto -> asignacion .)
    FOR             reduce using rule 12 (estatuto -> asignacion .)
    WHILE           reduce using rule 12 (estatuto -> asignacion .)
    INT             reduce using rule 12 (estatuto -> asignacion .)
    FLOAT           reduce using rule 12 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 12 (estatuto -> asignacion .)
    ARRAY           reduce using rule 12 (estatuto -> asignacion .)
    END             reduce using rule 12 (estatuto -> asignacion .)
    RETURN          reduce using rule 12 (estatuto -> asignacion .)
    ELSE            reduce using rule 12 (estatuto -> asignacion .)


state 49

    (99) funcion -> DEF data_type ID var_local bloque . funcion_2
    (100) funcion_2 -> . RETURN expresion SEMICOLON END
    (101) funcion_2 -> . END

    RETURN          shift and go to state 83
    END             shift and go to state 81

    funcion_2                      shift and go to state 82

state 50

    (16) estatuto -> vars .

    ID              reduce using rule 16 (estatuto -> vars .)
    IF              reduce using rule 16 (estatuto -> vars .)
    DRAW            reduce using rule 16 (estatuto -> vars .)
    FOR             reduce using rule 16 (estatuto -> vars .)
    WHILE           reduce using rule 16 (estatuto -> vars .)
    INT             reduce using rule 16 (estatuto -> vars .)
    FLOAT           reduce using rule 16 (estatuto -> vars .)
    BOOLEAN         reduce using rule 16 (estatuto -> vars .)
    ARRAY           reduce using rule 16 (estatuto -> vars .)
    END             reduce using rule 16 (estatuto -> vars .)
    RETURN          reduce using rule 16 (estatuto -> vars .)
    ELSE            reduce using rule 16 (estatuto -> vars .)


state 51

    (13) estatuto -> condicion .

    ID              reduce using rule 13 (estatuto -> condicion .)
    IF              reduce using rule 13 (estatuto -> condicion .)
    DRAW            reduce using rule 13 (estatuto -> condicion .)
    FOR             reduce using rule 13 (estatuto -> condicion .)
    WHILE           reduce using rule 13 (estatuto -> condicion .)
    INT             reduce using rule 13 (estatuto -> condicion .)
    FLOAT           reduce using rule 13 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 13 (estatuto -> condicion .)
    ARRAY           reduce using rule 13 (estatuto -> condicion .)
    END             reduce using rule 13 (estatuto -> condicion .)
    RETURN          reduce using rule 13 (estatuto -> condicion .)
    ELSE            reduce using rule 13 (estatuto -> condicion .)


state 52

    (98) while -> WHILE . LPAREN expresion RPAREN bloque END

    LPAREN          shift and go to state 84


state 53

    (15) estatuto -> accion .

    ID              reduce using rule 15 (estatuto -> accion .)
    IF              reduce using rule 15 (estatuto -> accion .)
    DRAW            reduce using rule 15 (estatuto -> accion .)
    FOR             reduce using rule 15 (estatuto -> accion .)
    WHILE           reduce using rule 15 (estatuto -> accion .)
    INT             reduce using rule 15 (estatuto -> accion .)
    FLOAT           reduce using rule 15 (estatuto -> accion .)
    BOOLEAN         reduce using rule 15 (estatuto -> accion .)
    ARRAY           reduce using rule 15 (estatuto -> accion .)
    END             reduce using rule 15 (estatuto -> accion .)
    RETURN          reduce using rule 15 (estatuto -> accion .)
    ELSE            reduce using rule 15 (estatuto -> accion .)


state 54

    (17) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 85


state 55

    (18) asignacion -> ID . asignacion_2 SEMICOLON
    (78) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (33) llamada -> ID . LPAREN llamada_2
    (19) asignacion_2 -> . EQUAL expresion
    (20) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL expresion

    POINT           shift and go to state 90
    LPAREN          shift and go to state 88
    EQUAL           shift and go to state 87
    LBRACKET        shift and go to state 86

    asignacion_2                   shift and go to state 89

state 56

    (26) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 91


state 57

    (31) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 92


state 58

    (39) def_array -> LBRACKET . def_array_2
    (40) def_array_2 -> . def_array_cte RBRACKET
    (41) def_array_2 -> . RBRACKET
    (42) def_array_cte -> . var_cte def_array_cte_2
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    RBRACKET        shift and go to state 93
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    def_array_cte                  shift and go to state 94
    var_cte                        shift and go to state 95
    def_array_2                    shift and go to state 96
    llamada                        shift and go to state 67

state 59

    (23) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 97


state 60

    (106) addop -> PLUS .

    ID              reduce using rule 106 (addop -> PLUS .)
    CTE_I           reduce using rule 106 (addop -> PLUS .)
    CTE_F           reduce using rule 106 (addop -> PLUS .)
    TRUE            reduce using rule 106 (addop -> PLUS .)
    FALSE           reduce using rule 106 (addop -> PLUS .)
    LPAREN          reduce using rule 106 (addop -> PLUS .)
    PLUS            reduce using rule 106 (addop -> PLUS .)
    MINUS           reduce using rule 106 (addop -> PLUS .)


state 61

    (29) vars2 -> EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 98


state 62

    (45) expresion -> exp . expresion_2
    (46) expresion_2 -> . relop exp
    (47) expresion_2 -> . empty
    (48) relop -> . GREATER
    (49) relop -> . GREATEREQUAL
    (50) relop -> . LESS
    (51) relop -> . LESSEQUAL
    (52) relop -> . DEQUAL
    (53) relop -> . DISTINT
    (111) empty -> .

    GREATER         shift and go to state 106
    GREATEREQUAL    shift and go to state 103
    LESS            shift and go to state 102
    LESSEQUAL       shift and go to state 105
    DEQUAL          shift and go to state 101
    DISTINT         shift and go to state 104
    SEMICOLON       reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    relop                          shift and go to state 99
    expresion_2                    shift and go to state 100
    empty                          shift and go to state 107

state 63

    (70) factor -> LPAREN . expresion RPAREN
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 108
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 64

    (72) factor -> var_cte .

    TIMES           reduce using rule 72 (factor -> var_cte .)
    DIVIDE          reduce using rule 72 (factor -> var_cte .)
    PERCENT         reduce using rule 72 (factor -> var_cte .)
    PLUS            reduce using rule 72 (factor -> var_cte .)
    MINUS           reduce using rule 72 (factor -> var_cte .)
    GREATER         reduce using rule 72 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 72 (factor -> var_cte .)
    LESS            reduce using rule 72 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 72 (factor -> var_cte .)
    DEQUAL          reduce using rule 72 (factor -> var_cte .)
    DISTINT         reduce using rule 72 (factor -> var_cte .)
    SEMICOLON       reduce using rule 72 (factor -> var_cte .)
    RPAREN          reduce using rule 72 (factor -> var_cte .)
    RBRACKET        reduce using rule 72 (factor -> var_cte .)
    COMMA           reduce using rule 72 (factor -> var_cte .)


state 65

    (64) var_cte -> FALSE .

    TIMES           reduce using rule 64 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 64 (var_cte -> FALSE .)
    PERCENT         reduce using rule 64 (var_cte -> FALSE .)
    PLUS            reduce using rule 64 (var_cte -> FALSE .)
    MINUS           reduce using rule 64 (var_cte -> FALSE .)
    GREATER         reduce using rule 64 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 64 (var_cte -> FALSE .)
    LESS            reduce using rule 64 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 64 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 64 (var_cte -> FALSE .)
    DISTINT         reduce using rule 64 (var_cte -> FALSE .)
    RPAREN          reduce using rule 64 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 64 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 64 (var_cte -> FALSE .)
    COMMA           reduce using rule 64 (var_cte -> FALSE .)


state 66

    (63) var_cte -> TRUE .

    TIMES           reduce using rule 63 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 63 (var_cte -> TRUE .)
    PERCENT         reduce using rule 63 (var_cte -> TRUE .)
    PLUS            reduce using rule 63 (var_cte -> TRUE .)
    MINUS           reduce using rule 63 (var_cte -> TRUE .)
    GREATER         reduce using rule 63 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 63 (var_cte -> TRUE .)
    LESS            reduce using rule 63 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 63 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 63 (var_cte -> TRUE .)
    DISTINT         reduce using rule 63 (var_cte -> TRUE .)
    RPAREN          reduce using rule 63 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 63 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 63 (var_cte -> TRUE .)
    COMMA           reduce using rule 63 (var_cte -> TRUE .)


state 67

    (65) var_cte -> llamada .

    TIMES           reduce using rule 65 (var_cte -> llamada .)
    DIVIDE          reduce using rule 65 (var_cte -> llamada .)
    PERCENT         reduce using rule 65 (var_cte -> llamada .)
    PLUS            reduce using rule 65 (var_cte -> llamada .)
    MINUS           reduce using rule 65 (var_cte -> llamada .)
    GREATER         reduce using rule 65 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 65 (var_cte -> llamada .)
    LESS            reduce using rule 65 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 65 (var_cte -> llamada .)
    DEQUAL          reduce using rule 65 (var_cte -> llamada .)
    DISTINT         reduce using rule 65 (var_cte -> llamada .)
    RPAREN          reduce using rule 65 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 65 (var_cte -> llamada .)
    RBRACKET        reduce using rule 65 (var_cte -> llamada .)
    COMMA           reduce using rule 65 (var_cte -> llamada .)


state 68

    (71) factor -> addop . var_cte
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    var_cte                        shift and go to state 109
    llamada                        shift and go to state 67

state 69

    (54) exp -> termino . exp_2
    (55) exp_2 -> . addop exp
    (56) exp_2 -> . empty
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (111) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    GREATER         reduce using rule 111 (empty -> .)
    GREATEREQUAL    reduce using rule 111 (empty -> .)
    LESS            reduce using rule 111 (empty -> .)
    LESSEQUAL       reduce using rule 111 (empty -> .)
    DEQUAL          reduce using rule 111 (empty -> .)
    DISTINT         reduce using rule 111 (empty -> .)
    SEMICOLON       reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    RBRACKET        reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    exp_2                          shift and go to state 110
    empty                          shift and go to state 111
    addop                          shift and go to state 112

state 70

    (107) addop -> MINUS .

    ID              reduce using rule 107 (addop -> MINUS .)
    CTE_I           reduce using rule 107 (addop -> MINUS .)
    CTE_F           reduce using rule 107 (addop -> MINUS .)
    TRUE            reduce using rule 107 (addop -> MINUS .)
    FALSE           reduce using rule 107 (addop -> MINUS .)
    LPAREN          reduce using rule 107 (addop -> MINUS .)
    PLUS            reduce using rule 107 (addop -> MINUS .)
    MINUS           reduce using rule 107 (addop -> MINUS .)


state 71

    (62) var_cte -> CTE_F .

    TIMES           reduce using rule 62 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 62 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 62 (var_cte -> CTE_F .)
    PLUS            reduce using rule 62 (var_cte -> CTE_F .)
    MINUS           reduce using rule 62 (var_cte -> CTE_F .)
    GREATER         reduce using rule 62 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 62 (var_cte -> CTE_F .)
    LESS            reduce using rule 62 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 62 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 62 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 62 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 62 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 62 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 62 (var_cte -> CTE_F .)
    COMMA           reduce using rule 62 (var_cte -> CTE_F .)


state 72

    (61) var_cte -> CTE_I .

    TIMES           reduce using rule 61 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 61 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 61 (var_cte -> CTE_I .)
    PLUS            reduce using rule 61 (var_cte -> CTE_I .)
    MINUS           reduce using rule 61 (var_cte -> CTE_I .)
    GREATER         reduce using rule 61 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 61 (var_cte -> CTE_I .)
    LESS            reduce using rule 61 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 61 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 61 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 61 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 61 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 61 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 61 (var_cte -> CTE_I .)
    COMMA           reduce using rule 61 (var_cte -> CTE_I .)


state 73

    (57) termino -> factor . termino_2
    (58) termino_2 -> . timesop termino
    (59) termino_2 -> . empty
    (108) timesop -> . TIMES
    (109) timesop -> . DIVIDE
    (110) timesop -> . PERCENT
    (111) empty -> .

    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 118
    PERCENT         shift and go to state 115
    PLUS            reduce using rule 111 (empty -> .)
    MINUS           reduce using rule 111 (empty -> .)
    GREATER         reduce using rule 111 (empty -> .)
    GREATEREQUAL    reduce using rule 111 (empty -> .)
    LESS            reduce using rule 111 (empty -> .)
    LESSEQUAL       reduce using rule 111 (empty -> .)
    DEQUAL          reduce using rule 111 (empty -> .)
    DISTINT         reduce using rule 111 (empty -> .)
    SEMICOLON       reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    RBRACKET        reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    timesop                        shift and go to state 116
    termino_2                      shift and go to state 113
    empty                          shift and go to state 117

state 74

    (60) var_cte -> ID . var_cte_2
    (33) llamada -> ID . LPAREN llamada_2
    (66) var_cte_2 -> . LBRACKET exp var_cte_3
    (67) var_cte_2 -> . empty
    (111) empty -> .

    LPAREN          shift and go to state 88
    LBRACKET        shift and go to state 121
    TIMES           reduce using rule 111 (empty -> .)
    DIVIDE          reduce using rule 111 (empty -> .)
    PERCENT         reduce using rule 111 (empty -> .)
    PLUS            reduce using rule 111 (empty -> .)
    MINUS           reduce using rule 111 (empty -> .)
    GREATER         reduce using rule 111 (empty -> .)
    GREATEREQUAL    reduce using rule 111 (empty -> .)
    LESS            reduce using rule 111 (empty -> .)
    LESSEQUAL       reduce using rule 111 (empty -> .)
    DEQUAL          reduce using rule 111 (empty -> .)
    DISTINT         reduce using rule 111 (empty -> .)
    SEMICOLON       reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    RBRACKET        reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)

    empty                          shift and go to state 119
    var_cte_2                      shift and go to state 120

state 75

    (11) main -> DEF VOID MAIN LPAREN RPAREN bloque . END

    END             shift and go to state 122


state 76

    (102) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 102 (var_local -> LPAREN var_local_2 RPAREN .)


state 77

    (103) var_local_2 -> data_type ID . var_local_3
    (104) var_local_3 -> . COMMA var_local_2
    (105) var_local_3 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 123
    RPAREN          reduce using rule 111 (empty -> .)

    empty                          shift and go to state 124
    var_local_3                    shift and go to state 125

state 78

    (6) bloque -> estatuto bloque .

    RETURN          reduce using rule 6 (bloque -> estatuto bloque .)
    END             reduce using rule 6 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 6 (bloque -> estatuto bloque .)


state 79

    (73) condicion -> IF LPAREN . expresion RPAREN bloque condicion_2
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 126
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 80

    (97) for -> FOR LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 127


state 81

    (101) funcion_2 -> END .

    DEF             reduce using rule 101 (funcion_2 -> END .)


state 82

    (99) funcion -> DEF data_type ID var_local bloque funcion_2 .

    DEF             reduce using rule 99 (funcion -> DEF data_type ID var_local bloque funcion_2 .)


state 83

    (100) funcion_2 -> RETURN . expresion SEMICOLON END
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 128
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 84

    (98) while -> WHILE LPAREN . expresion RPAREN bloque END
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 129
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 85

    (17) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 17 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 17 (estatuto -> llamada SEMICOLON .)


state 86

    (20) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL expresion
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    exp                            shift and go to state 130
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 87

    (19) asignacion_2 -> EQUAL . expresion
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 131
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 88

    (33) llamada -> ID LPAREN . llamada_2
    (34) llamada_2 -> . llamada_exp RPAREN
    (35) llamada_2 -> . RPAREN
    (36) llamada_exp -> . expresion llamada_exp2
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 135
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 132
    exp                            shift and go to state 62
    llamada_2                      shift and go to state 133
    llamada_exp                    shift and go to state 134
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 89

    (18) asignacion -> ID asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 136


state 90

    (78) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (85) accion_nombre -> . SETPOSITION
    (86) accion_nombre -> . CIRCLE
    (87) accion_nombre -> . RIGHT
    (88) accion_nombre -> . LEFT
    (89) accion_nombre -> . HIDE
    (90) accion_nombre -> . SQUARE
    (91) accion_nombre -> . CLEAR
    (92) accion_nombre -> . SHOW
    (93) accion_nombre -> . BACK
    (94) accion_nombre -> . SPEED
    (95) accion_nombre -> . FORWARD
    (96) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 144
    CIRCLE          shift and go to state 149
    RIGHT           shift and go to state 140
    LEFT            shift and go to state 143
    HIDE            shift and go to state 138
    SQUARE          shift and go to state 139
    CLEAR           shift and go to state 137
    SHOW            shift and go to state 145
    BACK            shift and go to state 146
    SPEED           shift and go to state 142
    FORWARD         shift and go to state 141
    SETCOLOR        shift and go to state 147

    accion_nombre                  shift and go to state 148

state 91

    (26) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (27) array_2 -> . COMMA CTE_I
    (28) array_2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 150
    GREATER         reduce using rule 111 (empty -> .)

    array_2                        shift and go to state 152
    empty                          shift and go to state 151

state 92

    (31) vars3 -> EQUAL def_array SEMICOLON .

    DEF             reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 31 (vars3 -> EQUAL def_array SEMICOLON .)


state 93

    (41) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 41 (def_array_2 -> RBRACKET .)


state 94

    (40) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 153


state 95

    (42) def_array_cte -> var_cte . def_array_cte_2
    (43) def_array_cte_2 -> . COMMA def_array_cte
    (44) def_array_cte_2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 154
    RBRACKET        reduce using rule 111 (empty -> .)

    empty                          shift and go to state 155
    def_array_cte_2                shift and go to state 156

state 96

    (39) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 39 (def_array -> LBRACKET def_array_2 .)


state 97

    (23) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 157


state 98

    (29) vars2 -> EQUAL expresion SEMICOLON .

    DEF             reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    ID              reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    IF              reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    DRAW            reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    FOR             reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    INT             reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    BOOLEAN         reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    ARRAY           reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    END             reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)
    ELSE            reduce using rule 29 (vars2 -> EQUAL expresion SEMICOLON .)


state 99

    (46) expresion_2 -> relop . exp
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    exp                            shift and go to state 158
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 100

    (45) expresion -> exp expresion_2 .

    RPAREN          reduce using rule 45 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 45 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 45 (expresion -> exp expresion_2 .)


state 101

    (52) relop -> DEQUAL .

    LPAREN          reduce using rule 52 (relop -> DEQUAL .)
    PLUS            reduce using rule 52 (relop -> DEQUAL .)
    MINUS           reduce using rule 52 (relop -> DEQUAL .)
    ID              reduce using rule 52 (relop -> DEQUAL .)
    CTE_I           reduce using rule 52 (relop -> DEQUAL .)
    CTE_F           reduce using rule 52 (relop -> DEQUAL .)
    TRUE            reduce using rule 52 (relop -> DEQUAL .)
    FALSE           reduce using rule 52 (relop -> DEQUAL .)


state 102

    (50) relop -> LESS .

    LPAREN          reduce using rule 50 (relop -> LESS .)
    PLUS            reduce using rule 50 (relop -> LESS .)
    MINUS           reduce using rule 50 (relop -> LESS .)
    ID              reduce using rule 50 (relop -> LESS .)
    CTE_I           reduce using rule 50 (relop -> LESS .)
    CTE_F           reduce using rule 50 (relop -> LESS .)
    TRUE            reduce using rule 50 (relop -> LESS .)
    FALSE           reduce using rule 50 (relop -> LESS .)


state 103

    (49) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 49 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 49 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 49 (relop -> GREATEREQUAL .)
    ID              reduce using rule 49 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 49 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 49 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 49 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 49 (relop -> GREATEREQUAL .)


state 104

    (53) relop -> DISTINT .

    LPAREN          reduce using rule 53 (relop -> DISTINT .)
    PLUS            reduce using rule 53 (relop -> DISTINT .)
    MINUS           reduce using rule 53 (relop -> DISTINT .)
    ID              reduce using rule 53 (relop -> DISTINT .)
    CTE_I           reduce using rule 53 (relop -> DISTINT .)
    CTE_F           reduce using rule 53 (relop -> DISTINT .)
    TRUE            reduce using rule 53 (relop -> DISTINT .)
    FALSE           reduce using rule 53 (relop -> DISTINT .)


state 105

    (51) relop -> LESSEQUAL .

    LPAREN          reduce using rule 51 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 51 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 51 (relop -> LESSEQUAL .)
    ID              reduce using rule 51 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 51 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 51 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 51 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 51 (relop -> LESSEQUAL .)


state 106

    (48) relop -> GREATER .

    LPAREN          reduce using rule 48 (relop -> GREATER .)
    PLUS            reduce using rule 48 (relop -> GREATER .)
    MINUS           reduce using rule 48 (relop -> GREATER .)
    ID              reduce using rule 48 (relop -> GREATER .)
    CTE_I           reduce using rule 48 (relop -> GREATER .)
    CTE_F           reduce using rule 48 (relop -> GREATER .)
    TRUE            reduce using rule 48 (relop -> GREATER .)
    FALSE           reduce using rule 48 (relop -> GREATER .)


state 107

    (47) expresion_2 -> empty .

    SEMICOLON       reduce using rule 47 (expresion_2 -> empty .)
    RPAREN          reduce using rule 47 (expresion_2 -> empty .)
    COMMA           reduce using rule 47 (expresion_2 -> empty .)


state 108

    (70) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 159


state 109

    (71) factor -> addop var_cte .

    TIMES           reduce using rule 71 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 71 (factor -> addop var_cte .)
    PERCENT         reduce using rule 71 (factor -> addop var_cte .)
    PLUS            reduce using rule 71 (factor -> addop var_cte .)
    MINUS           reduce using rule 71 (factor -> addop var_cte .)
    GREATER         reduce using rule 71 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 71 (factor -> addop var_cte .)
    LESS            reduce using rule 71 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 71 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 71 (factor -> addop var_cte .)
    DISTINT         reduce using rule 71 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 71 (factor -> addop var_cte .)
    RPAREN          reduce using rule 71 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 71 (factor -> addop var_cte .)
    COMMA           reduce using rule 71 (factor -> addop var_cte .)


state 110

    (54) exp -> termino exp_2 .

    GREATER         reduce using rule 54 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 54 (exp -> termino exp_2 .)
    LESS            reduce using rule 54 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 54 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 54 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 54 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 54 (exp -> termino exp_2 .)
    COMMA           reduce using rule 54 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 54 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 54 (exp -> termino exp_2 .)


state 111

    (56) exp_2 -> empty .

    GREATER         reduce using rule 56 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 56 (exp_2 -> empty .)
    LESS            reduce using rule 56 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 56 (exp_2 -> empty .)
    DEQUAL          reduce using rule 56 (exp_2 -> empty .)
    DISTINT         reduce using rule 56 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 56 (exp_2 -> empty .)
    RPAREN          reduce using rule 56 (exp_2 -> empty .)
    RBRACKET        reduce using rule 56 (exp_2 -> empty .)
    COMMA           reduce using rule 56 (exp_2 -> empty .)


state 112

    (55) exp_2 -> addop . exp
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    exp                            shift and go to state 160
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 113

    (57) termino -> factor termino_2 .

    PLUS            reduce using rule 57 (termino -> factor termino_2 .)
    MINUS           reduce using rule 57 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 57 (termino -> factor termino_2 .)
    COMMA           reduce using rule 57 (termino -> factor termino_2 .)
    GREATER         reduce using rule 57 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 57 (termino -> factor termino_2 .)
    LESS            reduce using rule 57 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 57 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 57 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 57 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 57 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 57 (termino -> factor termino_2 .)


state 114

    (108) timesop -> TIMES .

    LPAREN          reduce using rule 108 (timesop -> TIMES .)
    PLUS            reduce using rule 108 (timesop -> TIMES .)
    MINUS           reduce using rule 108 (timesop -> TIMES .)
    ID              reduce using rule 108 (timesop -> TIMES .)
    CTE_I           reduce using rule 108 (timesop -> TIMES .)
    CTE_F           reduce using rule 108 (timesop -> TIMES .)
    TRUE            reduce using rule 108 (timesop -> TIMES .)
    FALSE           reduce using rule 108 (timesop -> TIMES .)


state 115

    (110) timesop -> PERCENT .

    LPAREN          reduce using rule 110 (timesop -> PERCENT .)
    PLUS            reduce using rule 110 (timesop -> PERCENT .)
    MINUS           reduce using rule 110 (timesop -> PERCENT .)
    ID              reduce using rule 110 (timesop -> PERCENT .)
    CTE_I           reduce using rule 110 (timesop -> PERCENT .)
    CTE_F           reduce using rule 110 (timesop -> PERCENT .)
    TRUE            reduce using rule 110 (timesop -> PERCENT .)
    FALSE           reduce using rule 110 (timesop -> PERCENT .)


state 116

    (58) termino_2 -> timesop . termino
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 161
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 117

    (59) termino_2 -> empty .

    PLUS            reduce using rule 59 (termino_2 -> empty .)
    MINUS           reduce using rule 59 (termino_2 -> empty .)
    GREATER         reduce using rule 59 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 59 (termino_2 -> empty .)
    LESS            reduce using rule 59 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 59 (termino_2 -> empty .)
    DEQUAL          reduce using rule 59 (termino_2 -> empty .)
    DISTINT         reduce using rule 59 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 59 (termino_2 -> empty .)
    RPAREN          reduce using rule 59 (termino_2 -> empty .)
    RBRACKET        reduce using rule 59 (termino_2 -> empty .)
    COMMA           reduce using rule 59 (termino_2 -> empty .)


state 118

    (109) timesop -> DIVIDE .

    LPAREN          reduce using rule 109 (timesop -> DIVIDE .)
    PLUS            reduce using rule 109 (timesop -> DIVIDE .)
    MINUS           reduce using rule 109 (timesop -> DIVIDE .)
    ID              reduce using rule 109 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 109 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 109 (timesop -> DIVIDE .)
    TRUE            reduce using rule 109 (timesop -> DIVIDE .)
    FALSE           reduce using rule 109 (timesop -> DIVIDE .)


state 119

    (67) var_cte_2 -> empty .

    TIMES           reduce using rule 67 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 67 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 67 (var_cte_2 -> empty .)
    PLUS            reduce using rule 67 (var_cte_2 -> empty .)
    MINUS           reduce using rule 67 (var_cte_2 -> empty .)
    GREATER         reduce using rule 67 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 67 (var_cte_2 -> empty .)
    LESS            reduce using rule 67 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 67 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 67 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 67 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 67 (var_cte_2 -> empty .)
    COMMA           reduce using rule 67 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 67 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 67 (var_cte_2 -> empty .)


state 120

    (60) var_cte -> ID var_cte_2 .

    TIMES           reduce using rule 60 (var_cte -> ID var_cte_2 .)
    DIVIDE          reduce using rule 60 (var_cte -> ID var_cte_2 .)
    PERCENT         reduce using rule 60 (var_cte -> ID var_cte_2 .)
    PLUS            reduce using rule 60 (var_cte -> ID var_cte_2 .)
    MINUS           reduce using rule 60 (var_cte -> ID var_cte_2 .)
    GREATER         reduce using rule 60 (var_cte -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 60 (var_cte -> ID var_cte_2 .)
    LESS            reduce using rule 60 (var_cte -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 60 (var_cte -> ID var_cte_2 .)
    DEQUAL          reduce using rule 60 (var_cte -> ID var_cte_2 .)
    DISTINT         reduce using rule 60 (var_cte -> ID var_cte_2 .)
    RPAREN          reduce using rule 60 (var_cte -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 60 (var_cte -> ID var_cte_2 .)
    RBRACKET        reduce using rule 60 (var_cte -> ID var_cte_2 .)
    COMMA           reduce using rule 60 (var_cte -> ID var_cte_2 .)


state 121

    (66) var_cte_2 -> LBRACKET . exp var_cte_3
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    exp                            shift and go to state 162
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 122

    (11) main -> DEF VOID MAIN LPAREN RPAREN bloque END .

    $end            reduce using rule 11 (main -> DEF VOID MAIN LPAREN RPAREN bloque END .)


state 123

    (104) var_local_3 -> COMMA . var_local_2
    (103) var_local_2 -> . data_type ID var_local_3
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN

    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8

    var_local_2                    shift and go to state 163
    data_type                      shift and go to state 40

state 124

    (105) var_local_3 -> empty .

    RPAREN          reduce using rule 105 (var_local_3 -> empty .)


state 125

    (103) var_local_2 -> data_type ID var_local_3 .

    RPAREN          reduce using rule 103 (var_local_2 -> data_type ID var_local_3 .)


state 126

    (73) condicion -> IF LPAREN expresion . RPAREN bloque condicion_2

    RPAREN          shift and go to state 164


state 127

    (97) for -> FOR LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 165


state 128

    (100) funcion_2 -> RETURN expresion . SEMICOLON END

    SEMICOLON       shift and go to state 166


state 129

    (98) while -> WHILE LPAREN expresion . RPAREN bloque END

    RPAREN          shift and go to state 167


state 130

    (20) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL expresion
    (21) asignacion_3 -> . RBRACKET
    (22) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 170
    COMMA           shift and go to state 168

    asignacion_3                   shift and go to state 169

state 131

    (19) asignacion_2 -> EQUAL expresion .

    SEMICOLON       reduce using rule 19 (asignacion_2 -> EQUAL expresion .)


state 132

    (36) llamada_exp -> expresion . llamada_exp2
    (37) llamada_exp2 -> . COMMA llamada_exp
    (38) llamada_exp2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 171
    RPAREN          reduce using rule 111 (empty -> .)

    empty                          shift and go to state 172
    llamada_exp2                   shift and go to state 173

state 133

    (33) llamada -> ID LPAREN llamada_2 .

    COMMA           reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    RPAREN          reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    SEMICOLON       reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    RBRACKET        reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    TIMES           reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    DIVIDE          reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    PERCENT         reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    PLUS            reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    MINUS           reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    GREATER         reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    LESS            reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    DEQUAL          reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)
    DISTINT         reduce using rule 33 (llamada -> ID LPAREN llamada_2 .)


state 134

    (34) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 174


state 135

    (35) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 35 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 35 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 35 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 35 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 35 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 35 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 35 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 35 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 35 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 35 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 35 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 35 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 35 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 35 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 35 (llamada_2 -> RPAREN .)


state 136

    (18) asignacion -> ID asignacion_2 SEMICOLON .

    ID              reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    IF              reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    FOR             reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    INT             reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    END             reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 18 (asignacion -> ID asignacion_2 SEMICOLON .)


state 137

    (91) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 91 (accion_nombre -> CLEAR .)


state 138

    (89) accion_nombre -> HIDE .

    LPAREN          reduce using rule 89 (accion_nombre -> HIDE .)


state 139

    (90) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 90 (accion_nombre -> SQUARE .)


state 140

    (87) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 87 (accion_nombre -> RIGHT .)


state 141

    (95) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 95 (accion_nombre -> FORWARD .)


state 142

    (94) accion_nombre -> SPEED .

    LPAREN          reduce using rule 94 (accion_nombre -> SPEED .)


state 143

    (88) accion_nombre -> LEFT .

    LPAREN          reduce using rule 88 (accion_nombre -> LEFT .)


state 144

    (85) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 85 (accion_nombre -> SETPOSITION .)


state 145

    (92) accion_nombre -> SHOW .

    LPAREN          reduce using rule 92 (accion_nombre -> SHOW .)


state 146

    (93) accion_nombre -> BACK .

    LPAREN          reduce using rule 93 (accion_nombre -> BACK .)


state 147

    (96) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 96 (accion_nombre -> SETCOLOR .)


state 148

    (78) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (79) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 176

    accion_params                  shift and go to state 175

state 149

    (86) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 86 (accion_nombre -> CIRCLE .)


state 150

    (27) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 177


state 151

    (28) array_2 -> empty .

    GREATER         reduce using rule 28 (array_2 -> empty .)


state 152

    (26) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 178


state 153

    (40) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 40 (def_array_2 -> def_array_cte RBRACKET .)


state 154

    (43) def_array_cte_2 -> COMMA . def_array_cte
    (42) def_array_cte -> . var_cte def_array_cte_2
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    def_array_cte                  shift and go to state 179
    var_cte                        shift and go to state 95
    llamada                        shift and go to state 67

state 155

    (44) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 44 (def_array_cte_2 -> empty .)


state 156

    (42) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 42 (def_array_cte -> var_cte def_array_cte_2 .)


state 157

    (23) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 180


state 158

    (46) expresion_2 -> relop exp .

    SEMICOLON       reduce using rule 46 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 46 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 46 (expresion_2 -> relop exp .)


state 159

    (70) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    PERCENT         reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 70 (factor -> LPAREN expresion RPAREN .)


state 160

    (55) exp_2 -> addop exp .

    GREATER         reduce using rule 55 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 55 (exp_2 -> addop exp .)
    LESS            reduce using rule 55 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 55 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 55 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 55 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 55 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 55 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 55 (exp_2 -> addop exp .)
    COMMA           reduce using rule 55 (exp_2 -> addop exp .)


state 161

    (58) termino_2 -> timesop termino .

    PLUS            reduce using rule 58 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 58 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 58 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 58 (termino_2 -> timesop termino .)
    LESS            reduce using rule 58 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 58 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 58 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 58 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 58 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 58 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 58 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 58 (termino_2 -> timesop termino .)


state 162

    (66) var_cte_2 -> LBRACKET exp . var_cte_3
    (68) var_cte_3 -> . RBRACKET
    (69) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 182
    COMMA           shift and go to state 181

    var_cte_3                      shift and go to state 183

state 163

    (104) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 104 (var_local_3 -> COMMA var_local_2 .)


state 164

    (73) condicion -> IF LPAREN expresion RPAREN . bloque condicion_2
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 111 (empty -> .)
    ELSE            reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    bloque                         shift and go to state 184
    asignacion                     shift and go to state 48
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 165

    (97) for -> FOR LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque END

    CTE_I           shift and go to state 185


state 166

    (100) funcion_2 -> RETURN expresion SEMICOLON . END

    END             shift and go to state 186


state 167

    (98) while -> WHILE LPAREN expresion RPAREN . bloque END
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    bloque                         shift and go to state 187
    asignacion                     shift and go to state 48
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 168

    (22) asignacion_3 -> COMMA . exp RBRACKET
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    exp                            shift and go to state 188
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 169

    (20) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL expresion

    EQUAL           shift and go to state 189


state 170

    (21) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 21 (asignacion_3 -> RBRACKET .)


state 171

    (37) llamada_exp2 -> COMMA . llamada_exp
    (36) llamada_exp -> . expresion llamada_exp2
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 132
    exp                            shift and go to state 62
    llamada_exp                    shift and go to state 190
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 172

    (38) llamada_exp2 -> empty .

    RPAREN          reduce using rule 38 (llamada_exp2 -> empty .)


state 173

    (36) llamada_exp -> expresion llamada_exp2 .

    RPAREN          reduce using rule 36 (llamada_exp -> expresion llamada_exp2 .)


state 174

    (34) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 34 (llamada_2 -> llamada_exp RPAREN .)


state 175

    (78) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 191


state 176

    (79) accion_params -> LPAREN . accion_params_2
    (80) accion_params_2 -> . accion_params_cte RPAREN
    (81) accion_params_2 -> . RPAREN
    (82) accion_params_cte -> . var_cte accion_params_cte_2
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    RPAREN          shift and go to state 194
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    accion_params_2                shift and go to state 192
    accion_params_cte              shift and go to state 193
    var_cte                        shift and go to state 195
    llamada                        shift and go to state 67

state 177

    (27) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 27 (array_2 -> COMMA CTE_I .)


state 178

    (26) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 26 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 179

    (43) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 43 (def_array_cte_2 -> COMMA def_array_cte .)


state 180

    (23) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 23 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 181

    (69) var_cte_3 -> COMMA . exp RBRACKET
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    exp                            shift and go to state 196
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 182

    (68) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 68 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 68 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 68 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 68 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 68 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 68 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 68 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 68 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 68 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 68 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 68 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 68 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 68 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 68 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 68 (var_cte_3 -> RBRACKET .)


state 183

    (66) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 66 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 184

    (73) condicion -> IF LPAREN expresion RPAREN bloque . condicion_2
    (74) condicion_2 -> . END
    (75) condicion_2 -> . ELSE bloque END

    END             shift and go to state 199
    ELSE            shift and go to state 198

    condicion_2                    shift and go to state 197

state 185

    (97) for -> FOR LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque END

    COMMA           shift and go to state 200


state 186

    (100) funcion_2 -> RETURN expresion SEMICOLON END .

    DEF             reduce using rule 100 (funcion_2 -> RETURN expresion SEMICOLON END .)


state 187

    (98) while -> WHILE LPAREN expresion RPAREN bloque . END

    END             shift and go to state 201


state 188

    (22) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 202


state 189

    (20) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . expresion
    (45) expresion -> . exp expresion_2
    (54) exp -> . termino exp_2
    (57) termino -> . factor termino_2
    (70) factor -> . LPAREN expresion RPAREN
    (71) factor -> . addop var_cte
    (72) factor -> . var_cte
    (106) addop -> . PLUS
    (107) addop -> . MINUS
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    LPAREN          shift and go to state 63
    PLUS            shift and go to state 60
    MINUS           shift and go to state 70
    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    addop                          shift and go to state 68
    termino                        shift and go to state 69
    expresion                      shift and go to state 203
    exp                            shift and go to state 62
    var_cte                        shift and go to state 64
    llamada                        shift and go to state 67
    factor                         shift and go to state 73

state 190

    (37) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 37 (llamada_exp2 -> COMMA llamada_exp .)


state 191

    (78) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 78 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 192

    (79) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 79 (accion_params -> LPAREN accion_params_2 .)


state 193

    (80) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 204


state 194

    (81) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 81 (accion_params_2 -> RPAREN .)


state 195

    (82) accion_params_cte -> var_cte . accion_params_cte_2
    (83) accion_params_cte_2 -> . COMMA accion_params_cte
    (84) accion_params_cte_2 -> . empty
    (111) empty -> .

    COMMA           shift and go to state 205
    RPAREN          reduce using rule 111 (empty -> .)

    accion_params_cte_2            shift and go to state 206
    empty                          shift and go to state 207

state 196

    (69) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 208


state 197

    (73) condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .

    ID              reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    IF              reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FOR             reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    INT             reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    END             reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 73 (condicion -> IF LPAREN expresion RPAREN bloque condicion_2 .)


state 198

    (75) condicion_2 -> ELSE . bloque END
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    bloque                         shift and go to state 209
    asignacion                     shift and go to state 48
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 199

    (74) condicion_2 -> END .

    ID              reduce using rule 74 (condicion_2 -> END .)
    IF              reduce using rule 74 (condicion_2 -> END .)
    DRAW            reduce using rule 74 (condicion_2 -> END .)
    FOR             reduce using rule 74 (condicion_2 -> END .)
    WHILE           reduce using rule 74 (condicion_2 -> END .)
    INT             reduce using rule 74 (condicion_2 -> END .)
    FLOAT           reduce using rule 74 (condicion_2 -> END .)
    BOOLEAN         reduce using rule 74 (condicion_2 -> END .)
    ARRAY           reduce using rule 74 (condicion_2 -> END .)
    RETURN          reduce using rule 74 (condicion_2 -> END .)
    END             reduce using rule 74 (condicion_2 -> END .)
    ELSE            reduce using rule 74 (condicion_2 -> END .)


state 200

    (97) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque END

    CTE_I           shift and go to state 210


state 201

    (98) while -> WHILE LPAREN expresion RPAREN bloque END .

    ID              reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    IF              reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    DRAW            reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FOR             reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    WHILE           reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    INT             reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    FLOAT           reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    BOOLEAN         reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ARRAY           reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    RETURN          reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    END             reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)
    ELSE            reduce using rule 98 (while -> WHILE LPAREN expresion RPAREN bloque END .)


state 202

    (22) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 22 (asignacion_3 -> COMMA exp RBRACKET .)


state 203

    (20) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .

    SEMICOLON       reduce using rule 20 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL expresion .)


state 204

    (80) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 80 (accion_params_2 -> accion_params_cte RPAREN .)


state 205

    (83) accion_params_cte_2 -> COMMA . accion_params_cte
    (82) accion_params_cte -> . var_cte accion_params_cte_2
    (60) var_cte -> . ID var_cte_2
    (61) var_cte -> . CTE_I
    (62) var_cte -> . CTE_F
    (63) var_cte -> . TRUE
    (64) var_cte -> . FALSE
    (65) var_cte -> . llamada
    (33) llamada -> . ID LPAREN llamada_2

    ID              shift and go to state 74
    CTE_I           shift and go to state 72
    CTE_F           shift and go to state 71
    TRUE            shift and go to state 66
    FALSE           shift and go to state 65

    accion_params_cte              shift and go to state 211
    var_cte                        shift and go to state 195
    llamada                        shift and go to state 67

state 206

    (82) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 82 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 207

    (84) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 84 (accion_params_cte_2 -> empty .)


state 208

    (69) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 69 (var_cte_3 -> COMMA exp RBRACKET .)


state 209

    (75) condicion_2 -> ELSE bloque . END

    END             shift and go to state 212


state 210

    (97) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque END

    RPAREN          shift and go to state 213


state 211

    (83) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 83 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 212

    (75) condicion_2 -> ELSE bloque END .

    ID              reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    IF              reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    DRAW            reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    FOR             reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    WHILE           reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    INT             reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    FLOAT           reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    BOOLEAN         reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    ARRAY           reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    RETURN          reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    END             reduce using rule 75 (condicion_2 -> ELSE bloque END .)
    ELSE            reduce using rule 75 (condicion_2 -> ELSE bloque END .)


state 213

    (97) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque END
    (6) bloque -> . estatuto bloque
    (7) bloque -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . ciclo
    (15) estatuto -> . accion
    (16) estatuto -> . vars
    (17) estatuto -> . llamada SEMICOLON
    (111) empty -> .
    (18) asignacion -> . ID asignacion_2 SEMICOLON
    (73) condicion -> . IF LPAREN expresion RPAREN bloque condicion_2
    (76) ciclo -> . for
    (77) ciclo -> . while
    (78) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (23) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (24) vars -> . data_type ID vars2
    (25) vars -> . array ID vars3
    (33) llamada -> . ID LPAREN llamada_2
    (97) for -> . FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END
    (98) while -> . WHILE LPAREN expresion RPAREN bloque END
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . BOOLEAN
    (26) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 111 (empty -> .)
    ID              shift and go to state 55
    IF              shift and go to state 46
    DRAW            shift and go to state 19
    FOR             shift and go to state 47
    WHILE           shift and go to state 52
    INT             shift and go to state 10
    FLOAT           shift and go to state 9
    BOOLEAN         shift and go to state 8
    ARRAY           shift and go to state 16

    for                            shift and go to state 41
    bloque                         shift and go to state 214
    asignacion                     shift and go to state 48
    ciclo                          shift and go to state 42
    vars                           shift and go to state 50
    estatuto                       shift and go to state 44
    array                          shift and go to state 18
    empty                          shift and go to state 45
    condicion                      shift and go to state 51
    accion                         shift and go to state 53
    data_type                      shift and go to state 20
    llamada                        shift and go to state 54
    while                          shift and go to state 43

state 214

    (97) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . END

    END             shift and go to state 215


state 215

    (97) for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .

    ID              reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    IF              reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    DRAW            reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    FOR             reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    WHILE           reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    INT             reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    FLOAT           reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    BOOLEAN         reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    ARRAY           reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    END             reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    ELSE            reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)
    RETURN          reduce using rule 97 (for -> FOR LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque END .)

