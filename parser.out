Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones programa_end
Rule 2     programa -> funciones programa_end
Rule 3     programa_end -> empty
Rule 4     funciones -> funciones_2 main
Rule 5     funciones_2 -> funcion funciones_2
Rule 6     funciones_2 -> empty
Rule 7     globales -> global_1 vars globales_2
Rule 8     globales_2 -> global_1 vars globales_2
Rule 9     globales_2 -> empty
Rule 10    global_1 -> GLOBAL
Rule 11    bloque -> estatuto bloque
Rule 12    bloque -> empty
Rule 13    data_type -> INT
Rule 14    data_type -> FLOAT
Rule 15    data_type -> BOOLEAN
Rule 16    data_type_func -> INT
Rule 17    data_type_func -> FLOAT
Rule 18    data_type_func -> BOOLEAN
Rule 19    data_type_func -> VOID
Rule 20    main -> main_1 bloque END
Rule 21    main_1 -> MAIN LPAREN RPAREN
Rule 22    estatuto -> asignacion
Rule 23    estatuto -> condicion
Rule 24    estatuto -> ciclo
Rule 25    estatuto -> accion
Rule 26    estatuto -> vars
Rule 27    estatuto -> llamada SEMICOLON
Rule 28    asignacion -> asignacion_id asignacion_2 SEMICOLON
Rule 29    asignacion_id -> ID
Rule 30    asignacion_2 -> EQUAL super_exp
Rule 31    asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp
Rule 32    asignacion_3 -> RBRACKET
Rule 33    asignacion_3 -> COMMA exp RBRACKET
Rule 34    vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
Rule 35    vars -> data_type ID vars2
Rule 36    vars -> vars_aux
Rule 37    vars_aux -> array ID vars3
Rule 38    array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER
Rule 39    array_2 -> COMMA CTE_I
Rule 40    array_2 -> empty
Rule 41    vars2 -> EQUAL super_exp SEMICOLON
Rule 42    vars2 -> SEMICOLON
Rule 43    vars3 -> EQUAL def_array SEMICOLON
Rule 44    vars3 -> SEMICOLON
Rule 45    llamada -> llamada_id LPAREN llamada_2
Rule 46    llamada_id -> ID
Rule 47    llamada_2 -> llamada_exp RPAREN
Rule 48    llamada_2 -> RPAREN
Rule 49    llamada_exp -> super_exp llamada_exp2
Rule 50    llamada_exp2 -> COMMA llamada_exp
Rule 51    llamada_exp2 -> empty
Rule 52    def_array -> LBRACKET def_array_2
Rule 53    def_array_2 -> def_array_cte RBRACKET
Rule 54    def_array_2 -> RBRACKET
Rule 55    def_array_cte -> var_cte def_array_cte_2
Rule 56    def_array_cte_2 -> COMMA def_array_cte
Rule 57    def_array_cte_2 -> empty
Rule 58    super_exp -> expresion super_exp_2
Rule 59    super_exp_2 -> logicop super_exp
Rule 60    super_exp_2 -> empty
Rule 61    expresion -> exp expresion_2
Rule 62    expresion_2 -> relop exp
Rule 63    expresion_2 -> empty
Rule 64    relop -> GREATER
Rule 65    relop -> GREATEREQUAL
Rule 66    relop -> LESS
Rule 67    relop -> LESSEQUAL
Rule 68    relop -> DEQUAL
Rule 69    relop -> DISTINT
Rule 70    exp -> termino exp_2
Rule 71    exp_2 -> addop exp
Rule 72    exp_2 -> empty
Rule 73    termino -> factor termino_2
Rule 74    termino_2 -> timesop termino
Rule 75    termino_2 -> empty
Rule 76    var_cte -> var_cte_1
Rule 77    var_cte -> CTE_I
Rule 78    var_cte -> CTE_F
Rule 79    var_cte -> TRUE
Rule 80    var_cte -> FALSE
Rule 81    var_cte -> llamada
Rule 82    var_cte_1 -> ID var_cte_2
Rule 83    var_cte_2 -> LBRACKET exp var_cte_3
Rule 84    var_cte_2 -> empty
Rule 85    var_cte_3 -> RBRACKET
Rule 86    var_cte_3 -> COMMA exp RBRACKET
Rule 87    factor -> LPAREN super_exp RPAREN
Rule 88    factor -> addop var_cte
Rule 89    factor -> var_cte
Rule 90    condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2
Rule 91    condicion_id -> IF
Rule 92    condicion_2 -> condicion_end
Rule 93    condicion_2 -> ELSE bloque condicion_end
Rule 94    condicion_end -> END
Rule 95    ciclo -> for
Rule 96    ciclo -> while
Rule 97    accion -> ID POINT accion_nombre accion_params SEMICOLON
Rule 98    accion_params -> LPAREN accion_params_2
Rule 99    accion_params_2 -> accion_params_cte RPAREN
Rule 100   accion_params_2 -> RPAREN
Rule 101   accion_params_cte -> var_cte accion_params_cte_2
Rule 102   accion_params_cte_2 -> COMMA accion_params_cte
Rule 103   accion_params_cte_2 -> empty
Rule 104   accion_nombre -> SETPOSITION
Rule 105   accion_nombre -> CIRCLE
Rule 106   accion_nombre -> RIGHT
Rule 107   accion_nombre -> LEFT
Rule 108   accion_nombre -> HIDE
Rule 109   accion_nombre -> SQUARE
Rule 110   accion_nombre -> CLEAR
Rule 111   accion_nombre -> SHOW
Rule 112   accion_nombre -> BACK
Rule 113   accion_nombre -> SPEED
Rule 114   accion_nombre -> FORWARD
Rule 115   accion_nombre -> SETCOLOR
Rule 116   for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
Rule 117   for_init -> FOR
Rule 118   for_end -> END
Rule 119   while -> while_init LPAREN super_exp RPAREN bloque while_end
Rule 120   while_init -> WHILE
Rule 121   while_end -> END
Rule 122   funcion -> funcion_1 var_local bloque funcion_2
Rule 123   funcion_1 -> DEF data_type_func ID
Rule 124   funcion_2 -> RETURN super_exp SEMICOLON funcion_end
Rule 125   funcion_2 -> funcion_end
Rule 126   funcion_end -> END
Rule 127   var_local -> LPAREN var_local_2 RPAREN
Rule 128   var_local_2 -> var_local_2_1 var_local_3
Rule 129   var_local_2 -> empty
Rule 130   var_local_2_1 -> data_type ID
Rule 131   var_local_3 -> COMMA var_local_2
Rule 132   var_local_3 -> empty
Rule 133   addop -> PLUS
Rule 134   addop -> MINUS
Rule 135   timesop -> TIMES
Rule 136   timesop -> DIVIDE
Rule 137   timesop -> PERCENT
Rule 138   logicop -> AND
Rule 139   logicop -> OR
Rule 140   empty -> <empty>

Terminals, with rules where they appear

AND                  : 138
ARRAY                : 38
BACK                 : 112
BOOLEAN              : 15 18
CIRCLE               : 105
CLEAR                : 110
COMMA                : 33 38 39 50 56 86 102 116 116 131
CTE_F                : 78
CTE_I                : 38 39 77 116 116 116
DEF                  : 123
DEQUAL               : 68
DISTINT              : 69
DIVIDE               : 136
DRAW                 : 34
ELSE                 : 93
END                  : 20 94 118 121 126
EQUAL                : 30 31 34 41 43
FALSE                : 80
FLOAT                : 14 17
FOR                  : 117
FORWARD              : 114
GLOBAL               : 10
GREATER              : 38 64
GREATEREQUAL         : 65
HIDE                 : 108
ID                   : 29 34 35 37 46 82 97 123 130
IF                   : 91
INT                  : 13 16
LBRACKET             : 31 52 83
LEFT                 : 107
LESS                 : 38 66
LESSEQUAL            : 67
LPAREN               : 21 34 45 87 90 98 116 119 127
MAIN                 : 21
MINUS                : 134
NEWDRAW              : 34
OR                   : 139
PERCENT              : 137
PLUS                 : 133
POINT                : 97
RBRACKET             : 32 33 53 54 85 86
RETURN               : 124
RIGHT                : 106
RPAREN               : 21 34 47 48 87 90 99 100 116 119 127
SEMICOLON            : 27 28 34 41 42 43 44 97 124
SETCOLOR             : 115
SETPOSITION          : 104
SHOW                 : 111
SPEED                : 113
SQUARE               : 109
TIMES                : 135
TRUE                 : 79
VOID                 : 19
WHILE                : 120
error                : 

Nonterminals, with rules where they appear

accion               : 25
accion_nombre        : 97
accion_params        : 97
accion_params_2      : 98
accion_params_cte    : 99 102
accion_params_cte_2  : 101
addop                : 71 88
array                : 37
array_2              : 38
asignacion           : 22
asignacion_2         : 28
asignacion_3         : 31
asignacion_id        : 28
bloque               : 11 20 90 93 116 119 122
ciclo                : 24
condicion            : 23
condicion_2          : 90
condicion_end        : 92 93
condicion_id         : 90
data_type            : 35 38 130
data_type_func       : 123
def_array            : 43
def_array_2          : 52
def_array_cte        : 53 56
def_array_cte_2      : 55
empty                : 3 6 9 12 40 51 57 60 63 72 75 84 103 129 132
estatuto             : 11
exp                  : 31 33 61 62 71 83 86
exp_2                : 70
expresion            : 58
expresion_2          : 61
factor               : 73
for                  : 95
for_end              : 116
for_init             : 116
funcion              : 5
funcion_1            : 122
funcion_2            : 122
funcion_end          : 124 125
funciones            : 1 2
funciones_2          : 4 5
global_1             : 7 8
globales             : 1
globales_2           : 7 8
llamada              : 27 81
llamada_2            : 45
llamada_exp          : 47 50
llamada_exp2         : 49
llamada_id           : 45
logicop              : 59
main                 : 4
main_1               : 20
programa             : 0
programa_end         : 1 2
relop                : 62
super_exp            : 30 31 41 49 59 87 90 119 124
super_exp_2          : 58
termino              : 70 74
termino_2            : 73
timesop              : 74
var_cte              : 55 88 89 101
var_cte_1            : 76
var_cte_2            : 82
var_cte_3            : 83
var_local            : 122
var_local_2          : 127 131
var_local_2_1        : 128
var_local_3          : 128
vars                 : 7 8 26
vars2                : 35
vars3                : 37
vars_aux             : 36
while                : 96
while_end            : 119
while_init           : 119

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones programa_end
    (2) programa -> . funciones programa_end
    (7) globales -> . global_1 vars globales_2
    (4) funciones -> . funciones_2 main
    (10) global_1 -> . GLOBAL
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (122) funcion -> . funcion_1 var_local bloque funcion_2
    (140) empty -> .
    (123) funcion_1 -> . DEF data_type_func ID

    GLOBAL          shift and go to state 6
    MAIN            reduce using rule 140 (empty -> .)
    DEF             shift and go to state 10

    programa                       shift and go to state 1
    globales                       shift and go to state 2
    funciones                      shift and go to state 3
    global_1                       shift and go to state 4
    funciones_2                    shift and go to state 5
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> globales . funciones programa_end
    (4) funciones -> . funciones_2 main
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (122) funcion -> . funcion_1 var_local bloque funcion_2
    (140) empty -> .
    (123) funcion_1 -> . DEF data_type_func ID

    MAIN            reduce using rule 140 (empty -> .)
    DEF             shift and go to state 10

    funciones                      shift and go to state 11
    funciones_2                    shift and go to state 5
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 3

    (2) programa -> funciones . programa_end
    (3) programa_end -> . empty
    (140) empty -> .

    $end            reduce using rule 140 (empty -> .)

    programa_end                   shift and go to state 12
    empty                          shift and go to state 13

state 4

    (7) globales -> global_1 . vars globales_2
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    ARRAY           shift and go to state 22

    vars                           shift and go to state 14
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    array                          shift and go to state 21

state 5

    (4) funciones -> funciones_2 . main
    (20) main -> . main_1 bloque END
    (21) main_1 -> . MAIN LPAREN RPAREN

    MAIN            shift and go to state 25

    main                           shift and go to state 23
    main_1                         shift and go to state 24

state 6

    (10) global_1 -> GLOBAL .

    DRAW            reduce using rule 10 (global_1 -> GLOBAL .)
    INT             reduce using rule 10 (global_1 -> GLOBAL .)
    FLOAT           reduce using rule 10 (global_1 -> GLOBAL .)
    BOOLEAN         reduce using rule 10 (global_1 -> GLOBAL .)
    ARRAY           reduce using rule 10 (global_1 -> GLOBAL .)


state 7

    (5) funciones_2 -> funcion . funciones_2
    (5) funciones_2 -> . funcion funciones_2
    (6) funciones_2 -> . empty
    (122) funcion -> . funcion_1 var_local bloque funcion_2
    (140) empty -> .
    (123) funcion_1 -> . DEF data_type_func ID

    MAIN            reduce using rule 140 (empty -> .)
    DEF             shift and go to state 10

    funcion                        shift and go to state 7
    funciones_2                    shift and go to state 26
    empty                          shift and go to state 8
    funcion_1                      shift and go to state 9

state 8

    (6) funciones_2 -> empty .

    MAIN            reduce using rule 6 (funciones_2 -> empty .)


state 9

    (122) funcion -> funcion_1 . var_local bloque funcion_2
    (127) var_local -> . LPAREN var_local_2 RPAREN

    LPAREN          shift and go to state 28

    var_local                      shift and go to state 27

state 10

    (123) funcion_1 -> DEF . data_type_func ID
    (16) data_type_func -> . INT
    (17) data_type_func -> . FLOAT
    (18) data_type_func -> . BOOLEAN
    (19) data_type_func -> . VOID

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    BOOLEAN         shift and go to state 32
    VOID            shift and go to state 33

    data_type_func                 shift and go to state 29

state 11

    (1) programa -> globales funciones . programa_end
    (3) programa_end -> . empty
    (140) empty -> .

    $end            reduce using rule 140 (empty -> .)

    programa_end                   shift and go to state 34
    empty                          shift and go to state 13

state 12

    (2) programa -> funciones programa_end .

    $end            reduce using rule 2 (programa -> funciones programa_end .)


state 13

    (3) programa_end -> empty .

    $end            reduce using rule 3 (programa_end -> empty .)


state 14

    (7) globales -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (140) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 140 (empty -> .)
    MAIN            reduce using rule 140 (empty -> .)

    global_1                       shift and go to state 35
    globales_2                     shift and go to state 36
    empty                          shift and go to state 37

state 15

    (34) vars -> DRAW . ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    ID              shift and go to state 38


state 16

    (35) vars -> data_type . ID vars2

    ID              shift and go to state 39


state 17

    (36) vars -> vars_aux .

    GLOBAL          reduce using rule 36 (vars -> vars_aux .)
    DEF             reduce using rule 36 (vars -> vars_aux .)
    MAIN            reduce using rule 36 (vars -> vars_aux .)
    ID              reduce using rule 36 (vars -> vars_aux .)
    DRAW            reduce using rule 36 (vars -> vars_aux .)
    IF              reduce using rule 36 (vars -> vars_aux .)
    INT             reduce using rule 36 (vars -> vars_aux .)
    FLOAT           reduce using rule 36 (vars -> vars_aux .)
    BOOLEAN         reduce using rule 36 (vars -> vars_aux .)
    FOR             reduce using rule 36 (vars -> vars_aux .)
    WHILE           reduce using rule 36 (vars -> vars_aux .)
    ARRAY           reduce using rule 36 (vars -> vars_aux .)
    END             reduce using rule 36 (vars -> vars_aux .)
    RETURN          reduce using rule 36 (vars -> vars_aux .)
    ELSE            reduce using rule 36 (vars -> vars_aux .)


state 18

    (13) data_type -> INT .

    ID              reduce using rule 13 (data_type -> INT .)
    COMMA           reduce using rule 13 (data_type -> INT .)


state 19

    (14) data_type -> FLOAT .

    ID              reduce using rule 14 (data_type -> FLOAT .)
    COMMA           reduce using rule 14 (data_type -> FLOAT .)


state 20

    (15) data_type -> BOOLEAN .

    ID              reduce using rule 15 (data_type -> BOOLEAN .)
    COMMA           reduce using rule 15 (data_type -> BOOLEAN .)


state 21

    (37) vars_aux -> array . ID vars3

    ID              shift and go to state 40


state 22

    (38) array -> ARRAY . LESS data_type COMMA CTE_I array_2 GREATER

    LESS            shift and go to state 41


state 23

    (4) funciones -> funciones_2 main .

    $end            reduce using rule 4 (funciones -> funciones_2 main .)


state 24

    (20) main -> main_1 . bloque END
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    bloque                         shift and go to state 42
    estatuto                       shift and go to state 43
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    condicion_id                   shift and go to state 52
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    for_init                       shift and go to state 58
    while_init                     shift and go to state 59
    array                          shift and go to state 21

state 25

    (21) main_1 -> MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 62


state 26

    (5) funciones_2 -> funcion funciones_2 .

    MAIN            reduce using rule 5 (funciones_2 -> funcion funciones_2 .)


state 27

    (122) funcion -> funcion_1 var_local . bloque funcion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    RETURN          reduce using rule 140 (empty -> .)
    END             reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    bloque                         shift and go to state 63
    estatuto                       shift and go to state 43
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    condicion_id                   shift and go to state 52
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    for_init                       shift and go to state 58
    while_init                     shift and go to state 59
    array                          shift and go to state 21

state 28

    (127) var_local -> LPAREN . var_local_2 RPAREN
    (128) var_local_2 -> . var_local_2_1 var_local_3
    (129) var_local_2 -> . empty
    (130) var_local_2_1 -> . data_type ID
    (140) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 140 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20

    var_local_2                    shift and go to state 64
    var_local_2_1                  shift and go to state 65
    empty                          shift and go to state 66
    data_type                      shift and go to state 67

state 29

    (123) funcion_1 -> DEF data_type_func . ID

    ID              shift and go to state 68


state 30

    (16) data_type_func -> INT .

    ID              reduce using rule 16 (data_type_func -> INT .)


state 31

    (17) data_type_func -> FLOAT .

    ID              reduce using rule 17 (data_type_func -> FLOAT .)


state 32

    (18) data_type_func -> BOOLEAN .

    ID              reduce using rule 18 (data_type_func -> BOOLEAN .)


state 33

    (19) data_type_func -> VOID .

    ID              reduce using rule 19 (data_type_func -> VOID .)


state 34

    (1) programa -> globales funciones programa_end .

    $end            reduce using rule 1 (programa -> globales funciones programa_end .)


state 35

    (8) globales_2 -> global_1 . vars globales_2
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    DRAW            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    ARRAY           shift and go to state 22

    vars                           shift and go to state 69
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    array                          shift and go to state 21

state 36

    (7) globales -> global_1 vars globales_2 .

    DEF             reduce using rule 7 (globales -> global_1 vars globales_2 .)
    MAIN            reduce using rule 7 (globales -> global_1 vars globales_2 .)


state 37

    (9) globales_2 -> empty .

    DEF             reduce using rule 9 (globales_2 -> empty .)
    MAIN            reduce using rule 9 (globales_2 -> empty .)


state 38

    (34) vars -> DRAW ID . EQUAL NEWDRAW LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 70


state 39

    (35) vars -> data_type ID . vars2
    (41) vars2 -> . EQUAL super_exp SEMICOLON
    (42) vars2 -> . SEMICOLON

    EQUAL           shift and go to state 72
    SEMICOLON       shift and go to state 73

    vars2                          shift and go to state 71

state 40

    (37) vars_aux -> array ID . vars3
    (43) vars3 -> . EQUAL def_array SEMICOLON
    (44) vars3 -> . SEMICOLON

    EQUAL           shift and go to state 75
    SEMICOLON       shift and go to state 76

    vars3                          shift and go to state 74

state 41

    (38) array -> ARRAY LESS . data_type COMMA CTE_I array_2 GREATER
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20

    data_type                      shift and go to state 77

state 42

    (20) main -> main_1 bloque . END

    END             shift and go to state 78


state 43

    (11) bloque -> estatuto . bloque
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 140 (empty -> .)
    RETURN          reduce using rule 140 (empty -> .)
    ELSE            reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    estatuto                       shift and go to state 43
    bloque                         shift and go to state 79
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    condicion_id                   shift and go to state 52
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    for_init                       shift and go to state 58
    while_init                     shift and go to state 59
    array                          shift and go to state 21

state 44

    (12) bloque -> empty .

    END             reduce using rule 12 (bloque -> empty .)
    RETURN          reduce using rule 12 (bloque -> empty .)
    ELSE            reduce using rule 12 (bloque -> empty .)


state 45

    (22) estatuto -> asignacion .

    ID              reduce using rule 22 (estatuto -> asignacion .)
    DRAW            reduce using rule 22 (estatuto -> asignacion .)
    IF              reduce using rule 22 (estatuto -> asignacion .)
    INT             reduce using rule 22 (estatuto -> asignacion .)
    FLOAT           reduce using rule 22 (estatuto -> asignacion .)
    BOOLEAN         reduce using rule 22 (estatuto -> asignacion .)
    FOR             reduce using rule 22 (estatuto -> asignacion .)
    WHILE           reduce using rule 22 (estatuto -> asignacion .)
    ARRAY           reduce using rule 22 (estatuto -> asignacion .)
    END             reduce using rule 22 (estatuto -> asignacion .)
    RETURN          reduce using rule 22 (estatuto -> asignacion .)
    ELSE            reduce using rule 22 (estatuto -> asignacion .)


state 46

    (23) estatuto -> condicion .

    ID              reduce using rule 23 (estatuto -> condicion .)
    DRAW            reduce using rule 23 (estatuto -> condicion .)
    IF              reduce using rule 23 (estatuto -> condicion .)
    INT             reduce using rule 23 (estatuto -> condicion .)
    FLOAT           reduce using rule 23 (estatuto -> condicion .)
    BOOLEAN         reduce using rule 23 (estatuto -> condicion .)
    FOR             reduce using rule 23 (estatuto -> condicion .)
    WHILE           reduce using rule 23 (estatuto -> condicion .)
    ARRAY           reduce using rule 23 (estatuto -> condicion .)
    END             reduce using rule 23 (estatuto -> condicion .)
    RETURN          reduce using rule 23 (estatuto -> condicion .)
    ELSE            reduce using rule 23 (estatuto -> condicion .)


state 47

    (24) estatuto -> ciclo .

    ID              reduce using rule 24 (estatuto -> ciclo .)
    DRAW            reduce using rule 24 (estatuto -> ciclo .)
    IF              reduce using rule 24 (estatuto -> ciclo .)
    INT             reduce using rule 24 (estatuto -> ciclo .)
    FLOAT           reduce using rule 24 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 24 (estatuto -> ciclo .)
    FOR             reduce using rule 24 (estatuto -> ciclo .)
    WHILE           reduce using rule 24 (estatuto -> ciclo .)
    ARRAY           reduce using rule 24 (estatuto -> ciclo .)
    END             reduce using rule 24 (estatuto -> ciclo .)
    RETURN          reduce using rule 24 (estatuto -> ciclo .)
    ELSE            reduce using rule 24 (estatuto -> ciclo .)


state 48

    (25) estatuto -> accion .

    ID              reduce using rule 25 (estatuto -> accion .)
    DRAW            reduce using rule 25 (estatuto -> accion .)
    IF              reduce using rule 25 (estatuto -> accion .)
    INT             reduce using rule 25 (estatuto -> accion .)
    FLOAT           reduce using rule 25 (estatuto -> accion .)
    BOOLEAN         reduce using rule 25 (estatuto -> accion .)
    FOR             reduce using rule 25 (estatuto -> accion .)
    WHILE           reduce using rule 25 (estatuto -> accion .)
    ARRAY           reduce using rule 25 (estatuto -> accion .)
    END             reduce using rule 25 (estatuto -> accion .)
    RETURN          reduce using rule 25 (estatuto -> accion .)
    ELSE            reduce using rule 25 (estatuto -> accion .)


state 49

    (26) estatuto -> vars .

    ID              reduce using rule 26 (estatuto -> vars .)
    DRAW            reduce using rule 26 (estatuto -> vars .)
    IF              reduce using rule 26 (estatuto -> vars .)
    INT             reduce using rule 26 (estatuto -> vars .)
    FLOAT           reduce using rule 26 (estatuto -> vars .)
    BOOLEAN         reduce using rule 26 (estatuto -> vars .)
    FOR             reduce using rule 26 (estatuto -> vars .)
    WHILE           reduce using rule 26 (estatuto -> vars .)
    ARRAY           reduce using rule 26 (estatuto -> vars .)
    END             reduce using rule 26 (estatuto -> vars .)
    RETURN          reduce using rule 26 (estatuto -> vars .)
    ELSE            reduce using rule 26 (estatuto -> vars .)


state 50

    (27) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 80


state 51

    (28) asignacion -> asignacion_id . asignacion_2 SEMICOLON
    (30) asignacion_2 -> . EQUAL super_exp
    (31) asignacion_2 -> . LBRACKET exp asignacion_3 EQUAL super_exp

    EQUAL           shift and go to state 82
    LBRACKET        shift and go to state 83

    asignacion_2                   shift and go to state 81

state 52

    (90) condicion -> condicion_id . LPAREN super_exp RPAREN bloque condicion_2

    LPAREN          shift and go to state 84


state 53

    (95) ciclo -> for .

    ID              reduce using rule 95 (ciclo -> for .)
    DRAW            reduce using rule 95 (ciclo -> for .)
    IF              reduce using rule 95 (ciclo -> for .)
    INT             reduce using rule 95 (ciclo -> for .)
    FLOAT           reduce using rule 95 (ciclo -> for .)
    BOOLEAN         reduce using rule 95 (ciclo -> for .)
    FOR             reduce using rule 95 (ciclo -> for .)
    WHILE           reduce using rule 95 (ciclo -> for .)
    ARRAY           reduce using rule 95 (ciclo -> for .)
    END             reduce using rule 95 (ciclo -> for .)
    RETURN          reduce using rule 95 (ciclo -> for .)
    ELSE            reduce using rule 95 (ciclo -> for .)


state 54

    (96) ciclo -> while .

    ID              reduce using rule 96 (ciclo -> while .)
    DRAW            reduce using rule 96 (ciclo -> while .)
    IF              reduce using rule 96 (ciclo -> while .)
    INT             reduce using rule 96 (ciclo -> while .)
    FLOAT           reduce using rule 96 (ciclo -> while .)
    BOOLEAN         reduce using rule 96 (ciclo -> while .)
    FOR             reduce using rule 96 (ciclo -> while .)
    WHILE           reduce using rule 96 (ciclo -> while .)
    ARRAY           reduce using rule 96 (ciclo -> while .)
    END             reduce using rule 96 (ciclo -> while .)
    RETURN          reduce using rule 96 (ciclo -> while .)
    ELSE            reduce using rule 96 (ciclo -> while .)


state 55

    (97) accion -> ID . POINT accion_nombre accion_params SEMICOLON
    (29) asignacion_id -> ID .
    (46) llamada_id -> ID .

    POINT           shift and go to state 85
    EQUAL           reduce using rule 29 (asignacion_id -> ID .)
    LBRACKET        reduce using rule 29 (asignacion_id -> ID .)
    LPAREN          reduce using rule 46 (llamada_id -> ID .)


state 56

    (45) llamada -> llamada_id . LPAREN llamada_2

    LPAREN          shift and go to state 86


state 57

    (91) condicion_id -> IF .

    LPAREN          reduce using rule 91 (condicion_id -> IF .)


state 58

    (116) for -> for_init . LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    LPAREN          shift and go to state 87


state 59

    (119) while -> while_init . LPAREN super_exp RPAREN bloque while_end

    LPAREN          shift and go to state 88


state 60

    (117) for_init -> FOR .

    LPAREN          reduce using rule 117 (for_init -> FOR .)


state 61

    (120) while_init -> WHILE .

    LPAREN          reduce using rule 120 (while_init -> WHILE .)


state 62

    (21) main_1 -> MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 89


state 63

    (122) funcion -> funcion_1 var_local bloque . funcion_2
    (124) funcion_2 -> . RETURN super_exp SEMICOLON funcion_end
    (125) funcion_2 -> . funcion_end
    (126) funcion_end -> . END

    RETURN          shift and go to state 91
    END             shift and go to state 93

    funcion_2                      shift and go to state 90
    funcion_end                    shift and go to state 92

state 64

    (127) var_local -> LPAREN var_local_2 . RPAREN

    RPAREN          shift and go to state 94


state 65

    (128) var_local_2 -> var_local_2_1 . var_local_3
    (131) var_local_3 -> . COMMA var_local_2
    (132) var_local_3 -> . empty
    (140) empty -> .

    COMMA           shift and go to state 96
    RPAREN          reduce using rule 140 (empty -> .)

    var_local_3                    shift and go to state 95
    empty                          shift and go to state 97

state 66

    (129) var_local_2 -> empty .

    RPAREN          reduce using rule 129 (var_local_2 -> empty .)


state 67

    (130) var_local_2_1 -> data_type . ID

    ID              shift and go to state 98


state 68

    (123) funcion_1 -> DEF data_type_func ID .

    LPAREN          reduce using rule 123 (funcion_1 -> DEF data_type_func ID .)


state 69

    (8) globales_2 -> global_1 vars . globales_2
    (8) globales_2 -> . global_1 vars globales_2
    (9) globales_2 -> . empty
    (10) global_1 -> . GLOBAL
    (140) empty -> .

    GLOBAL          shift and go to state 6
    DEF             reduce using rule 140 (empty -> .)
    MAIN            reduce using rule 140 (empty -> .)

    global_1                       shift and go to state 35
    globales_2                     shift and go to state 99
    empty                          shift and go to state 37

state 70

    (34) vars -> DRAW ID EQUAL . NEWDRAW LPAREN RPAREN SEMICOLON

    NEWDRAW         shift and go to state 100


state 71

    (35) vars -> data_type ID vars2 .

    GLOBAL          reduce using rule 35 (vars -> data_type ID vars2 .)
    DEF             reduce using rule 35 (vars -> data_type ID vars2 .)
    MAIN            reduce using rule 35 (vars -> data_type ID vars2 .)
    ID              reduce using rule 35 (vars -> data_type ID vars2 .)
    DRAW            reduce using rule 35 (vars -> data_type ID vars2 .)
    IF              reduce using rule 35 (vars -> data_type ID vars2 .)
    INT             reduce using rule 35 (vars -> data_type ID vars2 .)
    FLOAT           reduce using rule 35 (vars -> data_type ID vars2 .)
    BOOLEAN         reduce using rule 35 (vars -> data_type ID vars2 .)
    FOR             reduce using rule 35 (vars -> data_type ID vars2 .)
    WHILE           reduce using rule 35 (vars -> data_type ID vars2 .)
    ARRAY           reduce using rule 35 (vars -> data_type ID vars2 .)
    END             reduce using rule 35 (vars -> data_type ID vars2 .)
    RETURN          reduce using rule 35 (vars -> data_type ID vars2 .)
    ELSE            reduce using rule 35 (vars -> data_type ID vars2 .)


state 72

    (41) vars2 -> EQUAL . super_exp SEMICOLON
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 101
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 73

    (42) vars2 -> SEMICOLON .

    GLOBAL          reduce using rule 42 (vars2 -> SEMICOLON .)
    DEF             reduce using rule 42 (vars2 -> SEMICOLON .)
    MAIN            reduce using rule 42 (vars2 -> SEMICOLON .)
    ID              reduce using rule 42 (vars2 -> SEMICOLON .)
    DRAW            reduce using rule 42 (vars2 -> SEMICOLON .)
    IF              reduce using rule 42 (vars2 -> SEMICOLON .)
    INT             reduce using rule 42 (vars2 -> SEMICOLON .)
    FLOAT           reduce using rule 42 (vars2 -> SEMICOLON .)
    BOOLEAN         reduce using rule 42 (vars2 -> SEMICOLON .)
    FOR             reduce using rule 42 (vars2 -> SEMICOLON .)
    WHILE           reduce using rule 42 (vars2 -> SEMICOLON .)
    ARRAY           reduce using rule 42 (vars2 -> SEMICOLON .)
    END             reduce using rule 42 (vars2 -> SEMICOLON .)
    RETURN          reduce using rule 42 (vars2 -> SEMICOLON .)
    ELSE            reduce using rule 42 (vars2 -> SEMICOLON .)


state 74

    (37) vars_aux -> array ID vars3 .

    GLOBAL          reduce using rule 37 (vars_aux -> array ID vars3 .)
    DEF             reduce using rule 37 (vars_aux -> array ID vars3 .)
    MAIN            reduce using rule 37 (vars_aux -> array ID vars3 .)
    ID              reduce using rule 37 (vars_aux -> array ID vars3 .)
    DRAW            reduce using rule 37 (vars_aux -> array ID vars3 .)
    IF              reduce using rule 37 (vars_aux -> array ID vars3 .)
    INT             reduce using rule 37 (vars_aux -> array ID vars3 .)
    FLOAT           reduce using rule 37 (vars_aux -> array ID vars3 .)
    BOOLEAN         reduce using rule 37 (vars_aux -> array ID vars3 .)
    FOR             reduce using rule 37 (vars_aux -> array ID vars3 .)
    WHILE           reduce using rule 37 (vars_aux -> array ID vars3 .)
    ARRAY           reduce using rule 37 (vars_aux -> array ID vars3 .)
    END             reduce using rule 37 (vars_aux -> array ID vars3 .)
    RETURN          reduce using rule 37 (vars_aux -> array ID vars3 .)
    ELSE            reduce using rule 37 (vars_aux -> array ID vars3 .)


state 75

    (43) vars3 -> EQUAL . def_array SEMICOLON
    (52) def_array -> . LBRACKET def_array_2

    LBRACKET        shift and go to state 119

    def_array                      shift and go to state 118

state 76

    (44) vars3 -> SEMICOLON .

    GLOBAL          reduce using rule 44 (vars3 -> SEMICOLON .)
    DEF             reduce using rule 44 (vars3 -> SEMICOLON .)
    MAIN            reduce using rule 44 (vars3 -> SEMICOLON .)
    ID              reduce using rule 44 (vars3 -> SEMICOLON .)
    DRAW            reduce using rule 44 (vars3 -> SEMICOLON .)
    IF              reduce using rule 44 (vars3 -> SEMICOLON .)
    INT             reduce using rule 44 (vars3 -> SEMICOLON .)
    FLOAT           reduce using rule 44 (vars3 -> SEMICOLON .)
    BOOLEAN         reduce using rule 44 (vars3 -> SEMICOLON .)
    FOR             reduce using rule 44 (vars3 -> SEMICOLON .)
    WHILE           reduce using rule 44 (vars3 -> SEMICOLON .)
    ARRAY           reduce using rule 44 (vars3 -> SEMICOLON .)
    END             reduce using rule 44 (vars3 -> SEMICOLON .)
    RETURN          reduce using rule 44 (vars3 -> SEMICOLON .)
    ELSE            reduce using rule 44 (vars3 -> SEMICOLON .)


state 77

    (38) array -> ARRAY LESS data_type . COMMA CTE_I array_2 GREATER

    COMMA           shift and go to state 120


state 78

    (20) main -> main_1 bloque END .

    $end            reduce using rule 20 (main -> main_1 bloque END .)


state 79

    (11) bloque -> estatuto bloque .

    END             reduce using rule 11 (bloque -> estatuto bloque .)
    RETURN          reduce using rule 11 (bloque -> estatuto bloque .)
    ELSE            reduce using rule 11 (bloque -> estatuto bloque .)


state 80

    (27) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    DRAW            reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    INT             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FLOAT           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    BOOLEAN         reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ARRAY           reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    END             reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 27 (estatuto -> llamada SEMICOLON .)
    ELSE            reduce using rule 27 (estatuto -> llamada SEMICOLON .)


state 81

    (28) asignacion -> asignacion_id asignacion_2 . SEMICOLON

    SEMICOLON       shift and go to state 121


state 82

    (30) asignacion_2 -> EQUAL . super_exp
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 122
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 83

    (31) asignacion_2 -> LBRACKET . exp asignacion_3 EQUAL super_exp
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    exp                            shift and go to state 123
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 84

    (90) condicion -> condicion_id LPAREN . super_exp RPAREN bloque condicion_2
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 124
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 85

    (97) accion -> ID POINT . accion_nombre accion_params SEMICOLON
    (104) accion_nombre -> . SETPOSITION
    (105) accion_nombre -> . CIRCLE
    (106) accion_nombre -> . RIGHT
    (107) accion_nombre -> . LEFT
    (108) accion_nombre -> . HIDE
    (109) accion_nombre -> . SQUARE
    (110) accion_nombre -> . CLEAR
    (111) accion_nombre -> . SHOW
    (112) accion_nombre -> . BACK
    (113) accion_nombre -> . SPEED
    (114) accion_nombre -> . FORWARD
    (115) accion_nombre -> . SETCOLOR

    SETPOSITION     shift and go to state 126
    CIRCLE          shift and go to state 127
    RIGHT           shift and go to state 128
    LEFT            shift and go to state 129
    HIDE            shift and go to state 130
    SQUARE          shift and go to state 131
    CLEAR           shift and go to state 132
    SHOW            shift and go to state 133
    BACK            shift and go to state 134
    SPEED           shift and go to state 135
    FORWARD         shift and go to state 136
    SETCOLOR        shift and go to state 137

    accion_nombre                  shift and go to state 125

state 86

    (45) llamada -> llamada_id LPAREN . llamada_2
    (47) llamada_2 -> . llamada_exp RPAREN
    (48) llamada_2 -> . RPAREN
    (49) llamada_exp -> . super_exp llamada_exp2
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    RPAREN          shift and go to state 140
    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    llamada_id                     shift and go to state 56
    llamada_2                      shift and go to state 138
    llamada_exp                    shift and go to state 139
    super_exp                      shift and go to state 141
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116

state 87

    (116) for -> for_init LPAREN . CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 142


state 88

    (119) while -> while_init LPAREN . super_exp RPAREN bloque while_end
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 143
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 89

    (21) main_1 -> MAIN LPAREN RPAREN .

    ID              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    DRAW            reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    IF              reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    INT             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FLOAT           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    BOOLEAN         reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    FOR             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    WHILE           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    ARRAY           reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)
    END             reduce using rule 21 (main_1 -> MAIN LPAREN RPAREN .)


state 90

    (122) funcion -> funcion_1 var_local bloque funcion_2 .

    DEF             reduce using rule 122 (funcion -> funcion_1 var_local bloque funcion_2 .)
    MAIN            reduce using rule 122 (funcion -> funcion_1 var_local bloque funcion_2 .)


state 91

    (124) funcion_2 -> RETURN . super_exp SEMICOLON funcion_end
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 144
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 92

    (125) funcion_2 -> funcion_end .

    DEF             reduce using rule 125 (funcion_2 -> funcion_end .)
    MAIN            reduce using rule 125 (funcion_2 -> funcion_end .)


state 93

    (126) funcion_end -> END .

    DEF             reduce using rule 126 (funcion_end -> END .)
    MAIN            reduce using rule 126 (funcion_end -> END .)


state 94

    (127) var_local -> LPAREN var_local_2 RPAREN .

    ID              reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    DRAW            reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    IF              reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    INT             reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    FLOAT           reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    BOOLEAN         reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    FOR             reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    WHILE           reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    ARRAY           reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    RETURN          reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)
    END             reduce using rule 127 (var_local -> LPAREN var_local_2 RPAREN .)


state 95

    (128) var_local_2 -> var_local_2_1 var_local_3 .

    RPAREN          reduce using rule 128 (var_local_2 -> var_local_2_1 var_local_3 .)


state 96

    (131) var_local_3 -> COMMA . var_local_2
    (128) var_local_2 -> . var_local_2_1 var_local_3
    (129) var_local_2 -> . empty
    (130) var_local_2_1 -> . data_type ID
    (140) empty -> .
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN

    RPAREN          reduce using rule 140 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20

    var_local_2                    shift and go to state 145
    var_local_2_1                  shift and go to state 65
    empty                          shift and go to state 66
    data_type                      shift and go to state 67

state 97

    (132) var_local_3 -> empty .

    RPAREN          reduce using rule 132 (var_local_3 -> empty .)


state 98

    (130) var_local_2_1 -> data_type ID .

    COMMA           reduce using rule 130 (var_local_2_1 -> data_type ID .)
    RPAREN          reduce using rule 130 (var_local_2_1 -> data_type ID .)


state 99

    (8) globales_2 -> global_1 vars globales_2 .

    DEF             reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)
    MAIN            reduce using rule 8 (globales_2 -> global_1 vars globales_2 .)


state 100

    (34) vars -> DRAW ID EQUAL NEWDRAW . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 146


state 101

    (41) vars2 -> EQUAL super_exp . SEMICOLON

    SEMICOLON       shift and go to state 147


state 102

    (58) super_exp -> expresion . super_exp_2
    (59) super_exp_2 -> . logicop super_exp
    (60) super_exp_2 -> . empty
    (138) logicop -> . AND
    (139) logicop -> . OR
    (140) empty -> .

    AND             shift and go to state 151
    OR              shift and go to state 152
    SEMICOLON       reduce using rule 140 (empty -> .)
    RPAREN          reduce using rule 140 (empty -> .)
    COMMA           reduce using rule 140 (empty -> .)

    super_exp_2                    shift and go to state 148
    logicop                        shift and go to state 149
    empty                          shift and go to state 150

state 103

    (61) expresion -> exp . expresion_2
    (62) expresion_2 -> . relop exp
    (63) expresion_2 -> . empty
    (64) relop -> . GREATER
    (65) relop -> . GREATEREQUAL
    (66) relop -> . LESS
    (67) relop -> . LESSEQUAL
    (68) relop -> . DEQUAL
    (69) relop -> . DISTINT
    (140) empty -> .

    GREATER         shift and go to state 156
    GREATEREQUAL    shift and go to state 157
    LESS            shift and go to state 158
    LESSEQUAL       shift and go to state 159
    DEQUAL          shift and go to state 160
    DISTINT         shift and go to state 161
    AND             reduce using rule 140 (empty -> .)
    OR              reduce using rule 140 (empty -> .)
    SEMICOLON       reduce using rule 140 (empty -> .)
    RPAREN          reduce using rule 140 (empty -> .)
    COMMA           reduce using rule 140 (empty -> .)

    expresion_2                    shift and go to state 153
    relop                          shift and go to state 154
    empty                          shift and go to state 155

state 104

    (70) exp -> termino . exp_2
    (71) exp_2 -> . addop exp
    (72) exp_2 -> . empty
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (140) empty -> .

    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    GREATER         reduce using rule 140 (empty -> .)
    GREATEREQUAL    reduce using rule 140 (empty -> .)
    LESS            reduce using rule 140 (empty -> .)
    LESSEQUAL       reduce using rule 140 (empty -> .)
    DEQUAL          reduce using rule 140 (empty -> .)
    DISTINT         reduce using rule 140 (empty -> .)
    AND             reduce using rule 140 (empty -> .)
    OR              reduce using rule 140 (empty -> .)
    SEMICOLON       reduce using rule 140 (empty -> .)
    RBRACKET        reduce using rule 140 (empty -> .)
    COMMA           reduce using rule 140 (empty -> .)
    RPAREN          reduce using rule 140 (empty -> .)

    exp_2                          shift and go to state 162
    addop                          shift and go to state 163
    empty                          shift and go to state 164

state 105

    (73) termino -> factor . termino_2
    (74) termino_2 -> . timesop termino
    (75) termino_2 -> . empty
    (135) timesop -> . TIMES
    (136) timesop -> . DIVIDE
    (137) timesop -> . PERCENT
    (140) empty -> .

    TIMES           shift and go to state 168
    DIVIDE          shift and go to state 169
    PERCENT         shift and go to state 170
    PLUS            reduce using rule 140 (empty -> .)
    MINUS           reduce using rule 140 (empty -> .)
    GREATER         reduce using rule 140 (empty -> .)
    GREATEREQUAL    reduce using rule 140 (empty -> .)
    LESS            reduce using rule 140 (empty -> .)
    LESSEQUAL       reduce using rule 140 (empty -> .)
    DEQUAL          reduce using rule 140 (empty -> .)
    DISTINT         reduce using rule 140 (empty -> .)
    AND             reduce using rule 140 (empty -> .)
    OR              reduce using rule 140 (empty -> .)
    SEMICOLON       reduce using rule 140 (empty -> .)
    RBRACKET        reduce using rule 140 (empty -> .)
    COMMA           reduce using rule 140 (empty -> .)
    RPAREN          reduce using rule 140 (empty -> .)

    termino_2                      shift and go to state 165
    timesop                        shift and go to state 166
    empty                          shift and go to state 167

state 106

    (87) factor -> LPAREN . super_exp RPAREN
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 171
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 107

    (88) factor -> addop . var_cte
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    var_cte                        shift and go to state 172
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 108

    (89) factor -> var_cte .

    TIMES           reduce using rule 89 (factor -> var_cte .)
    DIVIDE          reduce using rule 89 (factor -> var_cte .)
    PERCENT         reduce using rule 89 (factor -> var_cte .)
    PLUS            reduce using rule 89 (factor -> var_cte .)
    MINUS           reduce using rule 89 (factor -> var_cte .)
    GREATER         reduce using rule 89 (factor -> var_cte .)
    GREATEREQUAL    reduce using rule 89 (factor -> var_cte .)
    LESS            reduce using rule 89 (factor -> var_cte .)
    LESSEQUAL       reduce using rule 89 (factor -> var_cte .)
    DEQUAL          reduce using rule 89 (factor -> var_cte .)
    DISTINT         reduce using rule 89 (factor -> var_cte .)
    AND             reduce using rule 89 (factor -> var_cte .)
    OR              reduce using rule 89 (factor -> var_cte .)
    SEMICOLON       reduce using rule 89 (factor -> var_cte .)
    RBRACKET        reduce using rule 89 (factor -> var_cte .)
    COMMA           reduce using rule 89 (factor -> var_cte .)
    RPAREN          reduce using rule 89 (factor -> var_cte .)


state 109

    (133) addop -> PLUS .

    CTE_I           reduce using rule 133 (addop -> PLUS .)
    CTE_F           reduce using rule 133 (addop -> PLUS .)
    TRUE            reduce using rule 133 (addop -> PLUS .)
    FALSE           reduce using rule 133 (addop -> PLUS .)
    ID              reduce using rule 133 (addop -> PLUS .)
    LPAREN          reduce using rule 133 (addop -> PLUS .)
    PLUS            reduce using rule 133 (addop -> PLUS .)
    MINUS           reduce using rule 133 (addop -> PLUS .)


state 110

    (134) addop -> MINUS .

    CTE_I           reduce using rule 134 (addop -> MINUS .)
    CTE_F           reduce using rule 134 (addop -> MINUS .)
    TRUE            reduce using rule 134 (addop -> MINUS .)
    FALSE           reduce using rule 134 (addop -> MINUS .)
    ID              reduce using rule 134 (addop -> MINUS .)
    LPAREN          reduce using rule 134 (addop -> MINUS .)
    PLUS            reduce using rule 134 (addop -> MINUS .)
    MINUS           reduce using rule 134 (addop -> MINUS .)


state 111

    (76) var_cte -> var_cte_1 .

    TIMES           reduce using rule 76 (var_cte -> var_cte_1 .)
    DIVIDE          reduce using rule 76 (var_cte -> var_cte_1 .)
    PERCENT         reduce using rule 76 (var_cte -> var_cte_1 .)
    PLUS            reduce using rule 76 (var_cte -> var_cte_1 .)
    MINUS           reduce using rule 76 (var_cte -> var_cte_1 .)
    GREATER         reduce using rule 76 (var_cte -> var_cte_1 .)
    GREATEREQUAL    reduce using rule 76 (var_cte -> var_cte_1 .)
    LESS            reduce using rule 76 (var_cte -> var_cte_1 .)
    LESSEQUAL       reduce using rule 76 (var_cte -> var_cte_1 .)
    DEQUAL          reduce using rule 76 (var_cte -> var_cte_1 .)
    DISTINT         reduce using rule 76 (var_cte -> var_cte_1 .)
    AND             reduce using rule 76 (var_cte -> var_cte_1 .)
    OR              reduce using rule 76 (var_cte -> var_cte_1 .)
    SEMICOLON       reduce using rule 76 (var_cte -> var_cte_1 .)
    RBRACKET        reduce using rule 76 (var_cte -> var_cte_1 .)
    COMMA           reduce using rule 76 (var_cte -> var_cte_1 .)
    RPAREN          reduce using rule 76 (var_cte -> var_cte_1 .)


state 112

    (77) var_cte -> CTE_I .

    TIMES           reduce using rule 77 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 77 (var_cte -> CTE_I .)
    PERCENT         reduce using rule 77 (var_cte -> CTE_I .)
    PLUS            reduce using rule 77 (var_cte -> CTE_I .)
    MINUS           reduce using rule 77 (var_cte -> CTE_I .)
    GREATER         reduce using rule 77 (var_cte -> CTE_I .)
    GREATEREQUAL    reduce using rule 77 (var_cte -> CTE_I .)
    LESS            reduce using rule 77 (var_cte -> CTE_I .)
    LESSEQUAL       reduce using rule 77 (var_cte -> CTE_I .)
    DEQUAL          reduce using rule 77 (var_cte -> CTE_I .)
    DISTINT         reduce using rule 77 (var_cte -> CTE_I .)
    AND             reduce using rule 77 (var_cte -> CTE_I .)
    OR              reduce using rule 77 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 77 (var_cte -> CTE_I .)
    RBRACKET        reduce using rule 77 (var_cte -> CTE_I .)
    COMMA           reduce using rule 77 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 77 (var_cte -> CTE_I .)


state 113

    (78) var_cte -> CTE_F .

    TIMES           reduce using rule 78 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 78 (var_cte -> CTE_F .)
    PERCENT         reduce using rule 78 (var_cte -> CTE_F .)
    PLUS            reduce using rule 78 (var_cte -> CTE_F .)
    MINUS           reduce using rule 78 (var_cte -> CTE_F .)
    GREATER         reduce using rule 78 (var_cte -> CTE_F .)
    GREATEREQUAL    reduce using rule 78 (var_cte -> CTE_F .)
    LESS            reduce using rule 78 (var_cte -> CTE_F .)
    LESSEQUAL       reduce using rule 78 (var_cte -> CTE_F .)
    DEQUAL          reduce using rule 78 (var_cte -> CTE_F .)
    DISTINT         reduce using rule 78 (var_cte -> CTE_F .)
    AND             reduce using rule 78 (var_cte -> CTE_F .)
    OR              reduce using rule 78 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 78 (var_cte -> CTE_F .)
    RBRACKET        reduce using rule 78 (var_cte -> CTE_F .)
    COMMA           reduce using rule 78 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 78 (var_cte -> CTE_F .)


state 114

    (79) var_cte -> TRUE .

    TIMES           reduce using rule 79 (var_cte -> TRUE .)
    DIVIDE          reduce using rule 79 (var_cte -> TRUE .)
    PERCENT         reduce using rule 79 (var_cte -> TRUE .)
    PLUS            reduce using rule 79 (var_cte -> TRUE .)
    MINUS           reduce using rule 79 (var_cte -> TRUE .)
    GREATER         reduce using rule 79 (var_cte -> TRUE .)
    GREATEREQUAL    reduce using rule 79 (var_cte -> TRUE .)
    LESS            reduce using rule 79 (var_cte -> TRUE .)
    LESSEQUAL       reduce using rule 79 (var_cte -> TRUE .)
    DEQUAL          reduce using rule 79 (var_cte -> TRUE .)
    DISTINT         reduce using rule 79 (var_cte -> TRUE .)
    AND             reduce using rule 79 (var_cte -> TRUE .)
    OR              reduce using rule 79 (var_cte -> TRUE .)
    SEMICOLON       reduce using rule 79 (var_cte -> TRUE .)
    RBRACKET        reduce using rule 79 (var_cte -> TRUE .)
    COMMA           reduce using rule 79 (var_cte -> TRUE .)
    RPAREN          reduce using rule 79 (var_cte -> TRUE .)


state 115

    (80) var_cte -> FALSE .

    TIMES           reduce using rule 80 (var_cte -> FALSE .)
    DIVIDE          reduce using rule 80 (var_cte -> FALSE .)
    PERCENT         reduce using rule 80 (var_cte -> FALSE .)
    PLUS            reduce using rule 80 (var_cte -> FALSE .)
    MINUS           reduce using rule 80 (var_cte -> FALSE .)
    GREATER         reduce using rule 80 (var_cte -> FALSE .)
    GREATEREQUAL    reduce using rule 80 (var_cte -> FALSE .)
    LESS            reduce using rule 80 (var_cte -> FALSE .)
    LESSEQUAL       reduce using rule 80 (var_cte -> FALSE .)
    DEQUAL          reduce using rule 80 (var_cte -> FALSE .)
    DISTINT         reduce using rule 80 (var_cte -> FALSE .)
    AND             reduce using rule 80 (var_cte -> FALSE .)
    OR              reduce using rule 80 (var_cte -> FALSE .)
    SEMICOLON       reduce using rule 80 (var_cte -> FALSE .)
    RBRACKET        reduce using rule 80 (var_cte -> FALSE .)
    COMMA           reduce using rule 80 (var_cte -> FALSE .)
    RPAREN          reduce using rule 80 (var_cte -> FALSE .)


state 116

    (81) var_cte -> llamada .

    TIMES           reduce using rule 81 (var_cte -> llamada .)
    DIVIDE          reduce using rule 81 (var_cte -> llamada .)
    PERCENT         reduce using rule 81 (var_cte -> llamada .)
    PLUS            reduce using rule 81 (var_cte -> llamada .)
    MINUS           reduce using rule 81 (var_cte -> llamada .)
    GREATER         reduce using rule 81 (var_cte -> llamada .)
    GREATEREQUAL    reduce using rule 81 (var_cte -> llamada .)
    LESS            reduce using rule 81 (var_cte -> llamada .)
    LESSEQUAL       reduce using rule 81 (var_cte -> llamada .)
    DEQUAL          reduce using rule 81 (var_cte -> llamada .)
    DISTINT         reduce using rule 81 (var_cte -> llamada .)
    AND             reduce using rule 81 (var_cte -> llamada .)
    OR              reduce using rule 81 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 81 (var_cte -> llamada .)
    RBRACKET        reduce using rule 81 (var_cte -> llamada .)
    COMMA           reduce using rule 81 (var_cte -> llamada .)
    RPAREN          reduce using rule 81 (var_cte -> llamada .)


state 117

    (82) var_cte_1 -> ID . var_cte_2
    (46) llamada_id -> ID .
    (83) var_cte_2 -> . LBRACKET exp var_cte_3
    (84) var_cte_2 -> . empty
    (140) empty -> .

    LPAREN          reduce using rule 46 (llamada_id -> ID .)
    LBRACKET        shift and go to state 174
    TIMES           reduce using rule 140 (empty -> .)
    DIVIDE          reduce using rule 140 (empty -> .)
    PERCENT         reduce using rule 140 (empty -> .)
    PLUS            reduce using rule 140 (empty -> .)
    MINUS           reduce using rule 140 (empty -> .)
    GREATER         reduce using rule 140 (empty -> .)
    GREATEREQUAL    reduce using rule 140 (empty -> .)
    LESS            reduce using rule 140 (empty -> .)
    LESSEQUAL       reduce using rule 140 (empty -> .)
    DEQUAL          reduce using rule 140 (empty -> .)
    DISTINT         reduce using rule 140 (empty -> .)
    AND             reduce using rule 140 (empty -> .)
    OR              reduce using rule 140 (empty -> .)
    SEMICOLON       reduce using rule 140 (empty -> .)
    RBRACKET        reduce using rule 140 (empty -> .)
    COMMA           reduce using rule 140 (empty -> .)
    RPAREN          reduce using rule 140 (empty -> .)

    var_cte_2                      shift and go to state 173
    empty                          shift and go to state 175

state 118

    (43) vars3 -> EQUAL def_array . SEMICOLON

    SEMICOLON       shift and go to state 176


state 119

    (52) def_array -> LBRACKET . def_array_2
    (53) def_array_2 -> . def_array_cte RBRACKET
    (54) def_array_2 -> . RBRACKET
    (55) def_array_cte -> . var_cte def_array_cte_2
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    RBRACKET        shift and go to state 179
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    def_array_2                    shift and go to state 177
    def_array_cte                  shift and go to state 178
    var_cte                        shift and go to state 180
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 120

    (38) array -> ARRAY LESS data_type COMMA . CTE_I array_2 GREATER

    CTE_I           shift and go to state 181


state 121

    (28) asignacion -> asignacion_id asignacion_2 SEMICOLON .

    ID              reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    DRAW            reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    IF              reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    INT             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FLOAT           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    BOOLEAN         reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    FOR             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    WHILE           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ARRAY           reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    END             reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    RETURN          reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)
    ELSE            reduce using rule 28 (asignacion -> asignacion_id asignacion_2 SEMICOLON .)


state 122

    (30) asignacion_2 -> EQUAL super_exp .

    SEMICOLON       reduce using rule 30 (asignacion_2 -> EQUAL super_exp .)


state 123

    (31) asignacion_2 -> LBRACKET exp . asignacion_3 EQUAL super_exp
    (32) asignacion_3 -> . RBRACKET
    (33) asignacion_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 183
    COMMA           shift and go to state 184

    asignacion_3                   shift and go to state 182

state 124

    (90) condicion -> condicion_id LPAREN super_exp . RPAREN bloque condicion_2

    RPAREN          shift and go to state 185


state 125

    (97) accion -> ID POINT accion_nombre . accion_params SEMICOLON
    (98) accion_params -> . LPAREN accion_params_2

    LPAREN          shift and go to state 187

    accion_params                  shift and go to state 186

state 126

    (104) accion_nombre -> SETPOSITION .

    LPAREN          reduce using rule 104 (accion_nombre -> SETPOSITION .)


state 127

    (105) accion_nombre -> CIRCLE .

    LPAREN          reduce using rule 105 (accion_nombre -> CIRCLE .)


state 128

    (106) accion_nombre -> RIGHT .

    LPAREN          reduce using rule 106 (accion_nombre -> RIGHT .)


state 129

    (107) accion_nombre -> LEFT .

    LPAREN          reduce using rule 107 (accion_nombre -> LEFT .)


state 130

    (108) accion_nombre -> HIDE .

    LPAREN          reduce using rule 108 (accion_nombre -> HIDE .)


state 131

    (109) accion_nombre -> SQUARE .

    LPAREN          reduce using rule 109 (accion_nombre -> SQUARE .)


state 132

    (110) accion_nombre -> CLEAR .

    LPAREN          reduce using rule 110 (accion_nombre -> CLEAR .)


state 133

    (111) accion_nombre -> SHOW .

    LPAREN          reduce using rule 111 (accion_nombre -> SHOW .)


state 134

    (112) accion_nombre -> BACK .

    LPAREN          reduce using rule 112 (accion_nombre -> BACK .)


state 135

    (113) accion_nombre -> SPEED .

    LPAREN          reduce using rule 113 (accion_nombre -> SPEED .)


state 136

    (114) accion_nombre -> FORWARD .

    LPAREN          reduce using rule 114 (accion_nombre -> FORWARD .)


state 137

    (115) accion_nombre -> SETCOLOR .

    LPAREN          reduce using rule 115 (accion_nombre -> SETCOLOR .)


state 138

    (45) llamada -> llamada_id LPAREN llamada_2 .

    SEMICOLON       reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    TIMES           reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    DIVIDE          reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    PERCENT         reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    PLUS            reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    MINUS           reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATER         reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    GREATEREQUAL    reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    LESS            reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    LESSEQUAL       reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    DEQUAL          reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    DISTINT         reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    AND             reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    OR              reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    RBRACKET        reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    COMMA           reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)
    RPAREN          reduce using rule 45 (llamada -> llamada_id LPAREN llamada_2 .)


state 139

    (47) llamada_2 -> llamada_exp . RPAREN

    RPAREN          shift and go to state 188


state 140

    (48) llamada_2 -> RPAREN .

    SEMICOLON       reduce using rule 48 (llamada_2 -> RPAREN .)
    TIMES           reduce using rule 48 (llamada_2 -> RPAREN .)
    DIVIDE          reduce using rule 48 (llamada_2 -> RPAREN .)
    PERCENT         reduce using rule 48 (llamada_2 -> RPAREN .)
    PLUS            reduce using rule 48 (llamada_2 -> RPAREN .)
    MINUS           reduce using rule 48 (llamada_2 -> RPAREN .)
    GREATER         reduce using rule 48 (llamada_2 -> RPAREN .)
    GREATEREQUAL    reduce using rule 48 (llamada_2 -> RPAREN .)
    LESS            reduce using rule 48 (llamada_2 -> RPAREN .)
    LESSEQUAL       reduce using rule 48 (llamada_2 -> RPAREN .)
    DEQUAL          reduce using rule 48 (llamada_2 -> RPAREN .)
    DISTINT         reduce using rule 48 (llamada_2 -> RPAREN .)
    AND             reduce using rule 48 (llamada_2 -> RPAREN .)
    OR              reduce using rule 48 (llamada_2 -> RPAREN .)
    RBRACKET        reduce using rule 48 (llamada_2 -> RPAREN .)
    COMMA           reduce using rule 48 (llamada_2 -> RPAREN .)
    RPAREN          reduce using rule 48 (llamada_2 -> RPAREN .)


state 141

    (49) llamada_exp -> super_exp . llamada_exp2
    (50) llamada_exp2 -> . COMMA llamada_exp
    (51) llamada_exp2 -> . empty
    (140) empty -> .

    COMMA           shift and go to state 190
    RPAREN          reduce using rule 140 (empty -> .)

    llamada_exp2                   shift and go to state 189
    empty                          shift and go to state 191

state 142

    (116) for -> for_init LPAREN CTE_I . COMMA CTE_I COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 192


state 143

    (119) while -> while_init LPAREN super_exp . RPAREN bloque while_end

    RPAREN          shift and go to state 193


state 144

    (124) funcion_2 -> RETURN super_exp . SEMICOLON funcion_end

    SEMICOLON       shift and go to state 194


state 145

    (131) var_local_3 -> COMMA var_local_2 .

    RPAREN          reduce using rule 131 (var_local_3 -> COMMA var_local_2 .)


state 146

    (34) vars -> DRAW ID EQUAL NEWDRAW LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 195


state 147

    (41) vars2 -> EQUAL super_exp SEMICOLON .

    GLOBAL          reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    DEF             reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    MAIN            reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    ID              reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    DRAW            reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    IF              reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    INT             reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    FLOAT           reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    BOOLEAN         reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    FOR             reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    WHILE           reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    ARRAY           reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    END             reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    RETURN          reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)
    ELSE            reduce using rule 41 (vars2 -> EQUAL super_exp SEMICOLON .)


state 148

    (58) super_exp -> expresion super_exp_2 .

    SEMICOLON       reduce using rule 58 (super_exp -> expresion super_exp_2 .)
    RPAREN          reduce using rule 58 (super_exp -> expresion super_exp_2 .)
    COMMA           reduce using rule 58 (super_exp -> expresion super_exp_2 .)


state 149

    (59) super_exp_2 -> logicop . super_exp
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    super_exp                      shift and go to state 196
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 150

    (60) super_exp_2 -> empty .

    SEMICOLON       reduce using rule 60 (super_exp_2 -> empty .)
    RPAREN          reduce using rule 60 (super_exp_2 -> empty .)
    COMMA           reduce using rule 60 (super_exp_2 -> empty .)


state 151

    (138) logicop -> AND .

    LPAREN          reduce using rule 138 (logicop -> AND .)
    PLUS            reduce using rule 138 (logicop -> AND .)
    MINUS           reduce using rule 138 (logicop -> AND .)
    CTE_I           reduce using rule 138 (logicop -> AND .)
    CTE_F           reduce using rule 138 (logicop -> AND .)
    TRUE            reduce using rule 138 (logicop -> AND .)
    FALSE           reduce using rule 138 (logicop -> AND .)
    ID              reduce using rule 138 (logicop -> AND .)


state 152

    (139) logicop -> OR .

    LPAREN          reduce using rule 139 (logicop -> OR .)
    PLUS            reduce using rule 139 (logicop -> OR .)
    MINUS           reduce using rule 139 (logicop -> OR .)
    CTE_I           reduce using rule 139 (logicop -> OR .)
    CTE_F           reduce using rule 139 (logicop -> OR .)
    TRUE            reduce using rule 139 (logicop -> OR .)
    FALSE           reduce using rule 139 (logicop -> OR .)
    ID              reduce using rule 139 (logicop -> OR .)


state 153

    (61) expresion -> exp expresion_2 .

    AND             reduce using rule 61 (expresion -> exp expresion_2 .)
    OR              reduce using rule 61 (expresion -> exp expresion_2 .)
    SEMICOLON       reduce using rule 61 (expresion -> exp expresion_2 .)
    RPAREN          reduce using rule 61 (expresion -> exp expresion_2 .)
    COMMA           reduce using rule 61 (expresion -> exp expresion_2 .)


state 154

    (62) expresion_2 -> relop . exp
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    exp                            shift and go to state 197
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 155

    (63) expresion_2 -> empty .

    AND             reduce using rule 63 (expresion_2 -> empty .)
    OR              reduce using rule 63 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 63 (expresion_2 -> empty .)
    RPAREN          reduce using rule 63 (expresion_2 -> empty .)
    COMMA           reduce using rule 63 (expresion_2 -> empty .)


state 156

    (64) relop -> GREATER .

    LPAREN          reduce using rule 64 (relop -> GREATER .)
    PLUS            reduce using rule 64 (relop -> GREATER .)
    MINUS           reduce using rule 64 (relop -> GREATER .)
    CTE_I           reduce using rule 64 (relop -> GREATER .)
    CTE_F           reduce using rule 64 (relop -> GREATER .)
    TRUE            reduce using rule 64 (relop -> GREATER .)
    FALSE           reduce using rule 64 (relop -> GREATER .)
    ID              reduce using rule 64 (relop -> GREATER .)


state 157

    (65) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 65 (relop -> GREATEREQUAL .)
    PLUS            reduce using rule 65 (relop -> GREATEREQUAL .)
    MINUS           reduce using rule 65 (relop -> GREATEREQUAL .)
    CTE_I           reduce using rule 65 (relop -> GREATEREQUAL .)
    CTE_F           reduce using rule 65 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 65 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 65 (relop -> GREATEREQUAL .)
    ID              reduce using rule 65 (relop -> GREATEREQUAL .)


state 158

    (66) relop -> LESS .

    LPAREN          reduce using rule 66 (relop -> LESS .)
    PLUS            reduce using rule 66 (relop -> LESS .)
    MINUS           reduce using rule 66 (relop -> LESS .)
    CTE_I           reduce using rule 66 (relop -> LESS .)
    CTE_F           reduce using rule 66 (relop -> LESS .)
    TRUE            reduce using rule 66 (relop -> LESS .)
    FALSE           reduce using rule 66 (relop -> LESS .)
    ID              reduce using rule 66 (relop -> LESS .)


state 159

    (67) relop -> LESSEQUAL .

    LPAREN          reduce using rule 67 (relop -> LESSEQUAL .)
    PLUS            reduce using rule 67 (relop -> LESSEQUAL .)
    MINUS           reduce using rule 67 (relop -> LESSEQUAL .)
    CTE_I           reduce using rule 67 (relop -> LESSEQUAL .)
    CTE_F           reduce using rule 67 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 67 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 67 (relop -> LESSEQUAL .)
    ID              reduce using rule 67 (relop -> LESSEQUAL .)


state 160

    (68) relop -> DEQUAL .

    LPAREN          reduce using rule 68 (relop -> DEQUAL .)
    PLUS            reduce using rule 68 (relop -> DEQUAL .)
    MINUS           reduce using rule 68 (relop -> DEQUAL .)
    CTE_I           reduce using rule 68 (relop -> DEQUAL .)
    CTE_F           reduce using rule 68 (relop -> DEQUAL .)
    TRUE            reduce using rule 68 (relop -> DEQUAL .)
    FALSE           reduce using rule 68 (relop -> DEQUAL .)
    ID              reduce using rule 68 (relop -> DEQUAL .)


state 161

    (69) relop -> DISTINT .

    LPAREN          reduce using rule 69 (relop -> DISTINT .)
    PLUS            reduce using rule 69 (relop -> DISTINT .)
    MINUS           reduce using rule 69 (relop -> DISTINT .)
    CTE_I           reduce using rule 69 (relop -> DISTINT .)
    CTE_F           reduce using rule 69 (relop -> DISTINT .)
    TRUE            reduce using rule 69 (relop -> DISTINT .)
    FALSE           reduce using rule 69 (relop -> DISTINT .)
    ID              reduce using rule 69 (relop -> DISTINT .)


state 162

    (70) exp -> termino exp_2 .

    GREATER         reduce using rule 70 (exp -> termino exp_2 .)
    GREATEREQUAL    reduce using rule 70 (exp -> termino exp_2 .)
    LESS            reduce using rule 70 (exp -> termino exp_2 .)
    LESSEQUAL       reduce using rule 70 (exp -> termino exp_2 .)
    DEQUAL          reduce using rule 70 (exp -> termino exp_2 .)
    DISTINT         reduce using rule 70 (exp -> termino exp_2 .)
    AND             reduce using rule 70 (exp -> termino exp_2 .)
    OR              reduce using rule 70 (exp -> termino exp_2 .)
    SEMICOLON       reduce using rule 70 (exp -> termino exp_2 .)
    RBRACKET        reduce using rule 70 (exp -> termino exp_2 .)
    COMMA           reduce using rule 70 (exp -> termino exp_2 .)
    RPAREN          reduce using rule 70 (exp -> termino exp_2 .)


state 163

    (71) exp_2 -> addop . exp
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    addop                          shift and go to state 107
    exp                            shift and go to state 198
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 164

    (72) exp_2 -> empty .

    GREATER         reduce using rule 72 (exp_2 -> empty .)
    GREATEREQUAL    reduce using rule 72 (exp_2 -> empty .)
    LESS            reduce using rule 72 (exp_2 -> empty .)
    LESSEQUAL       reduce using rule 72 (exp_2 -> empty .)
    DEQUAL          reduce using rule 72 (exp_2 -> empty .)
    DISTINT         reduce using rule 72 (exp_2 -> empty .)
    AND             reduce using rule 72 (exp_2 -> empty .)
    OR              reduce using rule 72 (exp_2 -> empty .)
    SEMICOLON       reduce using rule 72 (exp_2 -> empty .)
    RBRACKET        reduce using rule 72 (exp_2 -> empty .)
    COMMA           reduce using rule 72 (exp_2 -> empty .)
    RPAREN          reduce using rule 72 (exp_2 -> empty .)


state 165

    (73) termino -> factor termino_2 .

    PLUS            reduce using rule 73 (termino -> factor termino_2 .)
    MINUS           reduce using rule 73 (termino -> factor termino_2 .)
    GREATER         reduce using rule 73 (termino -> factor termino_2 .)
    GREATEREQUAL    reduce using rule 73 (termino -> factor termino_2 .)
    LESS            reduce using rule 73 (termino -> factor termino_2 .)
    LESSEQUAL       reduce using rule 73 (termino -> factor termino_2 .)
    DEQUAL          reduce using rule 73 (termino -> factor termino_2 .)
    DISTINT         reduce using rule 73 (termino -> factor termino_2 .)
    AND             reduce using rule 73 (termino -> factor termino_2 .)
    OR              reduce using rule 73 (termino -> factor termino_2 .)
    SEMICOLON       reduce using rule 73 (termino -> factor termino_2 .)
    RBRACKET        reduce using rule 73 (termino -> factor termino_2 .)
    COMMA           reduce using rule 73 (termino -> factor termino_2 .)
    RPAREN          reduce using rule 73 (termino -> factor termino_2 .)


state 166

    (74) termino_2 -> timesop . termino
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    termino                        shift and go to state 199
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 167

    (75) termino_2 -> empty .

    PLUS            reduce using rule 75 (termino_2 -> empty .)
    MINUS           reduce using rule 75 (termino_2 -> empty .)
    GREATER         reduce using rule 75 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 75 (termino_2 -> empty .)
    LESS            reduce using rule 75 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 75 (termino_2 -> empty .)
    DEQUAL          reduce using rule 75 (termino_2 -> empty .)
    DISTINT         reduce using rule 75 (termino_2 -> empty .)
    AND             reduce using rule 75 (termino_2 -> empty .)
    OR              reduce using rule 75 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 75 (termino_2 -> empty .)
    RBRACKET        reduce using rule 75 (termino_2 -> empty .)
    COMMA           reduce using rule 75 (termino_2 -> empty .)
    RPAREN          reduce using rule 75 (termino_2 -> empty .)


state 168

    (135) timesop -> TIMES .

    LPAREN          reduce using rule 135 (timesop -> TIMES .)
    PLUS            reduce using rule 135 (timesop -> TIMES .)
    MINUS           reduce using rule 135 (timesop -> TIMES .)
    CTE_I           reduce using rule 135 (timesop -> TIMES .)
    CTE_F           reduce using rule 135 (timesop -> TIMES .)
    TRUE            reduce using rule 135 (timesop -> TIMES .)
    FALSE           reduce using rule 135 (timesop -> TIMES .)
    ID              reduce using rule 135 (timesop -> TIMES .)


state 169

    (136) timesop -> DIVIDE .

    LPAREN          reduce using rule 136 (timesop -> DIVIDE .)
    PLUS            reduce using rule 136 (timesop -> DIVIDE .)
    MINUS           reduce using rule 136 (timesop -> DIVIDE .)
    CTE_I           reduce using rule 136 (timesop -> DIVIDE .)
    CTE_F           reduce using rule 136 (timesop -> DIVIDE .)
    TRUE            reduce using rule 136 (timesop -> DIVIDE .)
    FALSE           reduce using rule 136 (timesop -> DIVIDE .)
    ID              reduce using rule 136 (timesop -> DIVIDE .)


state 170

    (137) timesop -> PERCENT .

    LPAREN          reduce using rule 137 (timesop -> PERCENT .)
    PLUS            reduce using rule 137 (timesop -> PERCENT .)
    MINUS           reduce using rule 137 (timesop -> PERCENT .)
    CTE_I           reduce using rule 137 (timesop -> PERCENT .)
    CTE_F           reduce using rule 137 (timesop -> PERCENT .)
    TRUE            reduce using rule 137 (timesop -> PERCENT .)
    FALSE           reduce using rule 137 (timesop -> PERCENT .)
    ID              reduce using rule 137 (timesop -> PERCENT .)


state 171

    (87) factor -> LPAREN super_exp . RPAREN

    RPAREN          shift and go to state 200


state 172

    (88) factor -> addop var_cte .

    TIMES           reduce using rule 88 (factor -> addop var_cte .)
    DIVIDE          reduce using rule 88 (factor -> addop var_cte .)
    PERCENT         reduce using rule 88 (factor -> addop var_cte .)
    PLUS            reduce using rule 88 (factor -> addop var_cte .)
    MINUS           reduce using rule 88 (factor -> addop var_cte .)
    GREATER         reduce using rule 88 (factor -> addop var_cte .)
    GREATEREQUAL    reduce using rule 88 (factor -> addop var_cte .)
    LESS            reduce using rule 88 (factor -> addop var_cte .)
    LESSEQUAL       reduce using rule 88 (factor -> addop var_cte .)
    DEQUAL          reduce using rule 88 (factor -> addop var_cte .)
    DISTINT         reduce using rule 88 (factor -> addop var_cte .)
    AND             reduce using rule 88 (factor -> addop var_cte .)
    OR              reduce using rule 88 (factor -> addop var_cte .)
    SEMICOLON       reduce using rule 88 (factor -> addop var_cte .)
    RBRACKET        reduce using rule 88 (factor -> addop var_cte .)
    COMMA           reduce using rule 88 (factor -> addop var_cte .)
    RPAREN          reduce using rule 88 (factor -> addop var_cte .)


state 173

    (82) var_cte_1 -> ID var_cte_2 .

    TIMES           reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    DIVIDE          reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    PERCENT         reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    PLUS            reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    MINUS           reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    GREATER         reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    GREATEREQUAL    reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    LESS            reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    LESSEQUAL       reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    DEQUAL          reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    DISTINT         reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    AND             reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    OR              reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    SEMICOLON       reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    RBRACKET        reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    COMMA           reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)
    RPAREN          reduce using rule 82 (var_cte_1 -> ID var_cte_2 .)


state 174

    (83) var_cte_2 -> LBRACKET . exp var_cte_3
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    exp                            shift and go to state 201
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 175

    (84) var_cte_2 -> empty .

    TIMES           reduce using rule 84 (var_cte_2 -> empty .)
    DIVIDE          reduce using rule 84 (var_cte_2 -> empty .)
    PERCENT         reduce using rule 84 (var_cte_2 -> empty .)
    PLUS            reduce using rule 84 (var_cte_2 -> empty .)
    MINUS           reduce using rule 84 (var_cte_2 -> empty .)
    GREATER         reduce using rule 84 (var_cte_2 -> empty .)
    GREATEREQUAL    reduce using rule 84 (var_cte_2 -> empty .)
    LESS            reduce using rule 84 (var_cte_2 -> empty .)
    LESSEQUAL       reduce using rule 84 (var_cte_2 -> empty .)
    DEQUAL          reduce using rule 84 (var_cte_2 -> empty .)
    DISTINT         reduce using rule 84 (var_cte_2 -> empty .)
    AND             reduce using rule 84 (var_cte_2 -> empty .)
    OR              reduce using rule 84 (var_cte_2 -> empty .)
    SEMICOLON       reduce using rule 84 (var_cte_2 -> empty .)
    RBRACKET        reduce using rule 84 (var_cte_2 -> empty .)
    COMMA           reduce using rule 84 (var_cte_2 -> empty .)
    RPAREN          reduce using rule 84 (var_cte_2 -> empty .)


state 176

    (43) vars3 -> EQUAL def_array SEMICOLON .

    GLOBAL          reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    DEF             reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    MAIN            reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    ID              reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    DRAW            reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    IF              reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    INT             reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    FLOAT           reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    BOOLEAN         reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    FOR             reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    WHILE           reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    ARRAY           reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    END             reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    RETURN          reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)
    ELSE            reduce using rule 43 (vars3 -> EQUAL def_array SEMICOLON .)


state 177

    (52) def_array -> LBRACKET def_array_2 .

    SEMICOLON       reduce using rule 52 (def_array -> LBRACKET def_array_2 .)


state 178

    (53) def_array_2 -> def_array_cte . RBRACKET

    RBRACKET        shift and go to state 202


state 179

    (54) def_array_2 -> RBRACKET .

    SEMICOLON       reduce using rule 54 (def_array_2 -> RBRACKET .)


state 180

    (55) def_array_cte -> var_cte . def_array_cte_2
    (56) def_array_cte_2 -> . COMMA def_array_cte
    (57) def_array_cte_2 -> . empty
    (140) empty -> .

    COMMA           shift and go to state 204
    RBRACKET        reduce using rule 140 (empty -> .)

    def_array_cte_2                shift and go to state 203
    empty                          shift and go to state 205

state 181

    (38) array -> ARRAY LESS data_type COMMA CTE_I . array_2 GREATER
    (39) array_2 -> . COMMA CTE_I
    (40) array_2 -> . empty
    (140) empty -> .

    COMMA           shift and go to state 206
    GREATER         reduce using rule 140 (empty -> .)

    array_2                        shift and go to state 207
    empty                          shift and go to state 208

state 182

    (31) asignacion_2 -> LBRACKET exp asignacion_3 . EQUAL super_exp

    EQUAL           shift and go to state 209


state 183

    (32) asignacion_3 -> RBRACKET .

    EQUAL           reduce using rule 32 (asignacion_3 -> RBRACKET .)


state 184

    (33) asignacion_3 -> COMMA . exp RBRACKET
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    exp                            shift and go to state 210
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 185

    (90) condicion -> condicion_id LPAREN super_exp RPAREN . bloque condicion_2
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    ELSE            reduce using rule 140 (empty -> .)
    END             reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    condicion_id                   shift and go to state 52
    bloque                         shift and go to state 211
    estatuto                       shift and go to state 43
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    for_init                       shift and go to state 58
    while_init                     shift and go to state 59
    array                          shift and go to state 21

state 186

    (97) accion -> ID POINT accion_nombre accion_params . SEMICOLON

    SEMICOLON       shift and go to state 212


state 187

    (98) accion_params -> LPAREN . accion_params_2
    (99) accion_params_2 -> . accion_params_cte RPAREN
    (100) accion_params_2 -> . RPAREN
    (101) accion_params_cte -> . var_cte accion_params_cte_2
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    RPAREN          shift and go to state 215
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    accion_params_2                shift and go to state 213
    accion_params_cte              shift and go to state 214
    var_cte                        shift and go to state 216
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 188

    (47) llamada_2 -> llamada_exp RPAREN .

    SEMICOLON       reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    TIMES           reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    DIVIDE          reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    PERCENT         reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    PLUS            reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    MINUS           reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    GREATER         reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    GREATEREQUAL    reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    LESS            reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    LESSEQUAL       reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    DEQUAL          reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    DISTINT         reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    AND             reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    OR              reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    RBRACKET        reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    COMMA           reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)
    RPAREN          reduce using rule 47 (llamada_2 -> llamada_exp RPAREN .)


state 189

    (49) llamada_exp -> super_exp llamada_exp2 .

    RPAREN          reduce using rule 49 (llamada_exp -> super_exp llamada_exp2 .)


state 190

    (50) llamada_exp2 -> COMMA . llamada_exp
    (49) llamada_exp -> . super_exp llamada_exp2
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    llamada_exp                    shift and go to state 217
    super_exp                      shift and go to state 141
    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 191

    (51) llamada_exp2 -> empty .

    RPAREN          reduce using rule 51 (llamada_exp2 -> empty .)


state 192

    (116) for -> for_init LPAREN CTE_I COMMA . CTE_I COMMA CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 218


state 193

    (119) while -> while_init LPAREN super_exp RPAREN . bloque while_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    while_init                     shift and go to state 59
    bloque                         shift and go to state 219
    estatuto                       shift and go to state 43
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    condicion_id                   shift and go to state 52
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    for_init                       shift and go to state 58
    array                          shift and go to state 21

state 194

    (124) funcion_2 -> RETURN super_exp SEMICOLON . funcion_end
    (126) funcion_end -> . END

    END             shift and go to state 93

    funcion_end                    shift and go to state 220

state 195

    (34) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 221


state 196

    (59) super_exp_2 -> logicop super_exp .

    SEMICOLON       reduce using rule 59 (super_exp_2 -> logicop super_exp .)
    RPAREN          reduce using rule 59 (super_exp_2 -> logicop super_exp .)
    COMMA           reduce using rule 59 (super_exp_2 -> logicop super_exp .)


state 197

    (62) expresion_2 -> relop exp .

    AND             reduce using rule 62 (expresion_2 -> relop exp .)
    OR              reduce using rule 62 (expresion_2 -> relop exp .)
    SEMICOLON       reduce using rule 62 (expresion_2 -> relop exp .)
    RPAREN          reduce using rule 62 (expresion_2 -> relop exp .)
    COMMA           reduce using rule 62 (expresion_2 -> relop exp .)


state 198

    (71) exp_2 -> addop exp .

    GREATER         reduce using rule 71 (exp_2 -> addop exp .)
    GREATEREQUAL    reduce using rule 71 (exp_2 -> addop exp .)
    LESS            reduce using rule 71 (exp_2 -> addop exp .)
    LESSEQUAL       reduce using rule 71 (exp_2 -> addop exp .)
    DEQUAL          reduce using rule 71 (exp_2 -> addop exp .)
    DISTINT         reduce using rule 71 (exp_2 -> addop exp .)
    AND             reduce using rule 71 (exp_2 -> addop exp .)
    OR              reduce using rule 71 (exp_2 -> addop exp .)
    SEMICOLON       reduce using rule 71 (exp_2 -> addop exp .)
    RBRACKET        reduce using rule 71 (exp_2 -> addop exp .)
    COMMA           reduce using rule 71 (exp_2 -> addop exp .)
    RPAREN          reduce using rule 71 (exp_2 -> addop exp .)


state 199

    (74) termino_2 -> timesop termino .

    PLUS            reduce using rule 74 (termino_2 -> timesop termino .)
    MINUS           reduce using rule 74 (termino_2 -> timesop termino .)
    GREATER         reduce using rule 74 (termino_2 -> timesop termino .)
    GREATEREQUAL    reduce using rule 74 (termino_2 -> timesop termino .)
    LESS            reduce using rule 74 (termino_2 -> timesop termino .)
    LESSEQUAL       reduce using rule 74 (termino_2 -> timesop termino .)
    DEQUAL          reduce using rule 74 (termino_2 -> timesop termino .)
    DISTINT         reduce using rule 74 (termino_2 -> timesop termino .)
    AND             reduce using rule 74 (termino_2 -> timesop termino .)
    OR              reduce using rule 74 (termino_2 -> timesop termino .)
    SEMICOLON       reduce using rule 74 (termino_2 -> timesop termino .)
    RBRACKET        reduce using rule 74 (termino_2 -> timesop termino .)
    COMMA           reduce using rule 74 (termino_2 -> timesop termino .)
    RPAREN          reduce using rule 74 (termino_2 -> timesop termino .)


state 200

    (87) factor -> LPAREN super_exp RPAREN .

    TIMES           reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    DIVIDE          reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    PERCENT         reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    PLUS            reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    MINUS           reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    GREATER         reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    GREATEREQUAL    reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    LESS            reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    LESSEQUAL       reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    DEQUAL          reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    DISTINT         reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    AND             reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    OR              reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    SEMICOLON       reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    RBRACKET        reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    COMMA           reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)
    RPAREN          reduce using rule 87 (factor -> LPAREN super_exp RPAREN .)


state 201

    (83) var_cte_2 -> LBRACKET exp . var_cte_3
    (85) var_cte_3 -> . RBRACKET
    (86) var_cte_3 -> . COMMA exp RBRACKET

    RBRACKET        shift and go to state 223
    COMMA           shift and go to state 224

    var_cte_3                      shift and go to state 222

state 202

    (53) def_array_2 -> def_array_cte RBRACKET .

    SEMICOLON       reduce using rule 53 (def_array_2 -> def_array_cte RBRACKET .)


state 203

    (55) def_array_cte -> var_cte def_array_cte_2 .

    RBRACKET        reduce using rule 55 (def_array_cte -> var_cte def_array_cte_2 .)


state 204

    (56) def_array_cte_2 -> COMMA . def_array_cte
    (55) def_array_cte -> . var_cte def_array_cte_2
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    def_array_cte                  shift and go to state 225
    var_cte                        shift and go to state 180
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 205

    (57) def_array_cte_2 -> empty .

    RBRACKET        reduce using rule 57 (def_array_cte_2 -> empty .)


state 206

    (39) array_2 -> COMMA . CTE_I

    CTE_I           shift and go to state 226


state 207

    (38) array -> ARRAY LESS data_type COMMA CTE_I array_2 . GREATER

    GREATER         shift and go to state 227


state 208

    (40) array_2 -> empty .

    GREATER         reduce using rule 40 (array_2 -> empty .)


state 209

    (31) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL . super_exp
    (58) super_exp -> . expresion super_exp_2
    (61) expresion -> . exp expresion_2
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    exp                            shift and go to state 103
    super_exp                      shift and go to state 228
    expresion                      shift and go to state 102
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 210

    (33) asignacion_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 229


state 211

    (90) condicion -> condicion_id LPAREN super_exp RPAREN bloque . condicion_2
    (92) condicion_2 -> . condicion_end
    (93) condicion_2 -> . ELSE bloque condicion_end
    (94) condicion_end -> . END

    ELSE            shift and go to state 232
    END             shift and go to state 233

    condicion_2                    shift and go to state 230
    condicion_end                  shift and go to state 231

state 212

    (97) accion -> ID POINT accion_nombre accion_params SEMICOLON .

    ID              reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    DRAW            reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    IF              reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    INT             reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FLOAT           reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    BOOLEAN         reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    FOR             reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    WHILE           reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ARRAY           reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    END             reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    RETURN          reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)
    ELSE            reduce using rule 97 (accion -> ID POINT accion_nombre accion_params SEMICOLON .)


state 213

    (98) accion_params -> LPAREN accion_params_2 .

    SEMICOLON       reduce using rule 98 (accion_params -> LPAREN accion_params_2 .)


state 214

    (99) accion_params_2 -> accion_params_cte . RPAREN

    RPAREN          shift and go to state 234


state 215

    (100) accion_params_2 -> RPAREN .

    SEMICOLON       reduce using rule 100 (accion_params_2 -> RPAREN .)


state 216

    (101) accion_params_cte -> var_cte . accion_params_cte_2
    (102) accion_params_cte_2 -> . COMMA accion_params_cte
    (103) accion_params_cte_2 -> . empty
    (140) empty -> .

    COMMA           shift and go to state 236
    RPAREN          reduce using rule 140 (empty -> .)

    accion_params_cte_2            shift and go to state 235
    empty                          shift and go to state 237

state 217

    (50) llamada_exp2 -> COMMA llamada_exp .

    RPAREN          reduce using rule 50 (llamada_exp2 -> COMMA llamada_exp .)


state 218

    (116) for -> for_init LPAREN CTE_I COMMA CTE_I . COMMA CTE_I RPAREN bloque for_end

    COMMA           shift and go to state 238


state 219

    (119) while -> while_init LPAREN super_exp RPAREN bloque . while_end
    (121) while_end -> . END

    END             shift and go to state 240

    while_end                      shift and go to state 239

state 220

    (124) funcion_2 -> RETURN super_exp SEMICOLON funcion_end .

    DEF             reduce using rule 124 (funcion_2 -> RETURN super_exp SEMICOLON funcion_end .)
    MAIN            reduce using rule 124 (funcion_2 -> RETURN super_exp SEMICOLON funcion_end .)


state 221

    (34) vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .

    GLOBAL          reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    MAIN            reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    DRAW            reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 34 (vars -> DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON .)


state 222

    (83) var_cte_2 -> LBRACKET exp var_cte_3 .

    TIMES           reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DIVIDE          reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PERCENT         reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    PLUS            reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    MINUS           reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATER         reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    GREATEREQUAL    reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESS            reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    LESSEQUAL       reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DEQUAL          reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    DISTINT         reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    AND             reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    OR              reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    SEMICOLON       reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RBRACKET        reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    COMMA           reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)
    RPAREN          reduce using rule 83 (var_cte_2 -> LBRACKET exp var_cte_3 .)


state 223

    (85) var_cte_3 -> RBRACKET .

    TIMES           reduce using rule 85 (var_cte_3 -> RBRACKET .)
    DIVIDE          reduce using rule 85 (var_cte_3 -> RBRACKET .)
    PERCENT         reduce using rule 85 (var_cte_3 -> RBRACKET .)
    PLUS            reduce using rule 85 (var_cte_3 -> RBRACKET .)
    MINUS           reduce using rule 85 (var_cte_3 -> RBRACKET .)
    GREATER         reduce using rule 85 (var_cte_3 -> RBRACKET .)
    GREATEREQUAL    reduce using rule 85 (var_cte_3 -> RBRACKET .)
    LESS            reduce using rule 85 (var_cte_3 -> RBRACKET .)
    LESSEQUAL       reduce using rule 85 (var_cte_3 -> RBRACKET .)
    DEQUAL          reduce using rule 85 (var_cte_3 -> RBRACKET .)
    DISTINT         reduce using rule 85 (var_cte_3 -> RBRACKET .)
    AND             reduce using rule 85 (var_cte_3 -> RBRACKET .)
    OR              reduce using rule 85 (var_cte_3 -> RBRACKET .)
    SEMICOLON       reduce using rule 85 (var_cte_3 -> RBRACKET .)
    RBRACKET        reduce using rule 85 (var_cte_3 -> RBRACKET .)
    COMMA           reduce using rule 85 (var_cte_3 -> RBRACKET .)
    RPAREN          reduce using rule 85 (var_cte_3 -> RBRACKET .)


state 224

    (86) var_cte_3 -> COMMA . exp RBRACKET
    (70) exp -> . termino exp_2
    (73) termino -> . factor termino_2
    (87) factor -> . LPAREN super_exp RPAREN
    (88) factor -> . addop var_cte
    (89) factor -> . var_cte
    (133) addop -> . PLUS
    (134) addop -> . MINUS
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    LPAREN          shift and go to state 106
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    exp                            shift and go to state 241
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    addop                          shift and go to state 107
    var_cte                        shift and go to state 108
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 225

    (56) def_array_cte_2 -> COMMA def_array_cte .

    RBRACKET        reduce using rule 56 (def_array_cte_2 -> COMMA def_array_cte .)


state 226

    (39) array_2 -> COMMA CTE_I .

    GREATER         reduce using rule 39 (array_2 -> COMMA CTE_I .)


state 227

    (38) array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .

    ID              reduce using rule 38 (array -> ARRAY LESS data_type COMMA CTE_I array_2 GREATER .)


state 228

    (31) asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .

    SEMICOLON       reduce using rule 31 (asignacion_2 -> LBRACKET exp asignacion_3 EQUAL super_exp .)


state 229

    (33) asignacion_3 -> COMMA exp RBRACKET .

    EQUAL           reduce using rule 33 (asignacion_3 -> COMMA exp RBRACKET .)


state 230

    (90) condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .

    ID              reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    DRAW            reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    IF              reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    INT             reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    FLOAT           reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    BOOLEAN         reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    FOR             reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    WHILE           reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    ARRAY           reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    END             reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    RETURN          reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)
    ELSE            reduce using rule 90 (condicion -> condicion_id LPAREN super_exp RPAREN bloque condicion_2 .)


state 231

    (92) condicion_2 -> condicion_end .

    ID              reduce using rule 92 (condicion_2 -> condicion_end .)
    DRAW            reduce using rule 92 (condicion_2 -> condicion_end .)
    IF              reduce using rule 92 (condicion_2 -> condicion_end .)
    INT             reduce using rule 92 (condicion_2 -> condicion_end .)
    FLOAT           reduce using rule 92 (condicion_2 -> condicion_end .)
    BOOLEAN         reduce using rule 92 (condicion_2 -> condicion_end .)
    FOR             reduce using rule 92 (condicion_2 -> condicion_end .)
    WHILE           reduce using rule 92 (condicion_2 -> condicion_end .)
    ARRAY           reduce using rule 92 (condicion_2 -> condicion_end .)
    END             reduce using rule 92 (condicion_2 -> condicion_end .)
    RETURN          reduce using rule 92 (condicion_2 -> condicion_end .)
    ELSE            reduce using rule 92 (condicion_2 -> condicion_end .)


state 232

    (93) condicion_2 -> ELSE . bloque condicion_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    bloque                         shift and go to state 242
    estatuto                       shift and go to state 43
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    condicion_id                   shift and go to state 52
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    for_init                       shift and go to state 58
    while_init                     shift and go to state 59
    array                          shift and go to state 21

state 233

    (94) condicion_end -> END .

    ID              reduce using rule 94 (condicion_end -> END .)
    DRAW            reduce using rule 94 (condicion_end -> END .)
    IF              reduce using rule 94 (condicion_end -> END .)
    INT             reduce using rule 94 (condicion_end -> END .)
    FLOAT           reduce using rule 94 (condicion_end -> END .)
    BOOLEAN         reduce using rule 94 (condicion_end -> END .)
    FOR             reduce using rule 94 (condicion_end -> END .)
    WHILE           reduce using rule 94 (condicion_end -> END .)
    ARRAY           reduce using rule 94 (condicion_end -> END .)
    END             reduce using rule 94 (condicion_end -> END .)
    RETURN          reduce using rule 94 (condicion_end -> END .)
    ELSE            reduce using rule 94 (condicion_end -> END .)


state 234

    (99) accion_params_2 -> accion_params_cte RPAREN .

    SEMICOLON       reduce using rule 99 (accion_params_2 -> accion_params_cte RPAREN .)


state 235

    (101) accion_params_cte -> var_cte accion_params_cte_2 .

    RPAREN          reduce using rule 101 (accion_params_cte -> var_cte accion_params_cte_2 .)


state 236

    (102) accion_params_cte_2 -> COMMA . accion_params_cte
    (101) accion_params_cte -> . var_cte accion_params_cte_2
    (76) var_cte -> . var_cte_1
    (77) var_cte -> . CTE_I
    (78) var_cte -> . CTE_F
    (79) var_cte -> . TRUE
    (80) var_cte -> . FALSE
    (81) var_cte -> . llamada
    (82) var_cte_1 -> . ID var_cte_2
    (45) llamada -> . llamada_id LPAREN llamada_2
    (46) llamada_id -> . ID

    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    ID              shift and go to state 117

    accion_params_cte              shift and go to state 243
    var_cte                        shift and go to state 216
    var_cte_1                      shift and go to state 111
    llamada                        shift and go to state 116
    llamada_id                     shift and go to state 56

state 237

    (103) accion_params_cte_2 -> empty .

    RPAREN          reduce using rule 103 (accion_params_cte_2 -> empty .)


state 238

    (116) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA . CTE_I RPAREN bloque for_end

    CTE_I           shift and go to state 244


state 239

    (119) while -> while_init LPAREN super_exp RPAREN bloque while_end .

    ID              reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    DRAW            reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    IF              reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    INT             reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    FLOAT           reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    BOOLEAN         reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    FOR             reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    WHILE           reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    ARRAY           reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    END             reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    RETURN          reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)
    ELSE            reduce using rule 119 (while -> while_init LPAREN super_exp RPAREN bloque while_end .)


state 240

    (121) while_end -> END .

    ID              reduce using rule 121 (while_end -> END .)
    DRAW            reduce using rule 121 (while_end -> END .)
    IF              reduce using rule 121 (while_end -> END .)
    INT             reduce using rule 121 (while_end -> END .)
    FLOAT           reduce using rule 121 (while_end -> END .)
    BOOLEAN         reduce using rule 121 (while_end -> END .)
    FOR             reduce using rule 121 (while_end -> END .)
    WHILE           reduce using rule 121 (while_end -> END .)
    ARRAY           reduce using rule 121 (while_end -> END .)
    END             reduce using rule 121 (while_end -> END .)
    RETURN          reduce using rule 121 (while_end -> END .)
    ELSE            reduce using rule 121 (while_end -> END .)


state 241

    (86) var_cte_3 -> COMMA exp . RBRACKET

    RBRACKET        shift and go to state 245


state 242

    (93) condicion_2 -> ELSE bloque . condicion_end
    (94) condicion_end -> . END

    END             shift and go to state 233

    condicion_end                  shift and go to state 246

state 243

    (102) accion_params_cte_2 -> COMMA accion_params_cte .

    RPAREN          reduce using rule 102 (accion_params_cte_2 -> COMMA accion_params_cte .)


state 244

    (116) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I . RPAREN bloque for_end

    RPAREN          shift and go to state 247


state 245

    (86) var_cte_3 -> COMMA exp RBRACKET .

    TIMES           reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    DIVIDE          reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    PERCENT         reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    PLUS            reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    MINUS           reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATER         reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    GREATEREQUAL    reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    LESS            reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    LESSEQUAL       reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    DEQUAL          reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    DISTINT         reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    AND             reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    OR              reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    SEMICOLON       reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    RBRACKET        reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    COMMA           reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)
    RPAREN          reduce using rule 86 (var_cte_3 -> COMMA exp RBRACKET .)


state 246

    (93) condicion_2 -> ELSE bloque condicion_end .

    ID              reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    DRAW            reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    IF              reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    INT             reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    FLOAT           reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    BOOLEAN         reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    FOR             reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    WHILE           reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    ARRAY           reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    END             reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    RETURN          reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)
    ELSE            reduce using rule 93 (condicion_2 -> ELSE bloque condicion_end .)


state 247

    (116) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN . bloque for_end
    (11) bloque -> . estatuto bloque
    (12) bloque -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . ciclo
    (25) estatuto -> . accion
    (26) estatuto -> . vars
    (27) estatuto -> . llamada SEMICOLON
    (140) empty -> .
    (28) asignacion -> . asignacion_id asignacion_2 SEMICOLON
    (90) condicion -> . condicion_id LPAREN super_exp RPAREN bloque condicion_2
    (95) ciclo -> . for
    (96) ciclo -> . while
    (97) accion -> . ID POINT accion_nombre accion_params SEMICOLON
    (34) vars -> . DRAW ID EQUAL NEWDRAW LPAREN RPAREN SEMICOLON
    (35) vars -> . data_type ID vars2
    (36) vars -> . vars_aux
    (45) llamada -> . llamada_id LPAREN llamada_2
    (29) asignacion_id -> . ID
    (91) condicion_id -> . IF
    (116) for -> . for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end
    (119) while -> . while_init LPAREN super_exp RPAREN bloque while_end
    (13) data_type -> . INT
    (14) data_type -> . FLOAT
    (15) data_type -> . BOOLEAN
    (37) vars_aux -> . array ID vars3
    (46) llamada_id -> . ID
    (117) for_init -> . FOR
    (120) while_init -> . WHILE
    (38) array -> . ARRAY LESS data_type COMMA CTE_I array_2 GREATER

    END             reduce using rule 140 (empty -> .)
    ID              shift and go to state 55
    DRAW            shift and go to state 15
    IF              shift and go to state 57
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOLEAN         shift and go to state 20
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    ARRAY           shift and go to state 22

    for_init                       shift and go to state 58
    bloque                         shift and go to state 248
    estatuto                       shift and go to state 43
    empty                          shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    ciclo                          shift and go to state 47
    accion                         shift and go to state 48
    vars                           shift and go to state 49
    llamada                        shift and go to state 50
    asignacion_id                  shift and go to state 51
    condicion_id                   shift and go to state 52
    for                            shift and go to state 53
    while                          shift and go to state 54
    data_type                      shift and go to state 16
    vars_aux                       shift and go to state 17
    llamada_id                     shift and go to state 56
    while_init                     shift and go to state 59
    array                          shift and go to state 21

state 248

    (116) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque . for_end
    (118) for_end -> . END

    END             shift and go to state 250

    for_end                        shift and go to state 249

state 249

    (116) for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .

    ID              reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    DRAW            reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    IF              reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    INT             reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FLOAT           reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    BOOLEAN         reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    FOR             reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    WHILE           reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ARRAY           reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    END             reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    RETURN          reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)
    ELSE            reduce using rule 116 (for -> for_init LPAREN CTE_I COMMA CTE_I COMMA CTE_I RPAREN bloque for_end .)


state 250

    (118) for_end -> END .

    ID              reduce using rule 118 (for_end -> END .)
    DRAW            reduce using rule 118 (for_end -> END .)
    IF              reduce using rule 118 (for_end -> END .)
    INT             reduce using rule 118 (for_end -> END .)
    FLOAT           reduce using rule 118 (for_end -> END .)
    BOOLEAN         reduce using rule 118 (for_end -> END .)
    FOR             reduce using rule 118 (for_end -> END .)
    WHILE           reduce using rule 118 (for_end -> END .)
    ARRAY           reduce using rule 118 (for_end -> END .)
    END             reduce using rule 118 (for_end -> END .)
    RETURN          reduce using rule 118 (for_end -> END .)
    ELSE            reduce using rule 118 (for_end -> END .)

